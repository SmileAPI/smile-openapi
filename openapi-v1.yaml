openapi: 3.0.0
info:
  title: Smile API
  version: 1.3.1
  description: 'The Smile API provides employment and income data from a single API. '
  contact:
    name: Smile Technology Pte Ltd
    url: https://www.getsmileapi.com
    email: info@getsmileapi.com
  termsOfService: https://www.getsmileapi.com/terms-and-conditions
servers:
  - url: https://sandbox.smileapi.io/v1
    description: Sandbox
  - url: https://open.smileapi.io/v1
    description: Production
paths:
  /providers:
    get:
      summary: List Providers
      tags:
        - Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: upwork
                          name: Upwork
                          longName: Upwork Global Inc.
                          logoUrl: >-
                            https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
                          type: GIG
                          typeLabel: Gig Platform
                          subType: SERVICES
                          subTypeLabel: Professional Services
                          active: true
                          enabled: true
                          mfa: true
                          supported:
                            - IDENTITIES
                        - id: freelancer
                          name: Freelancer
                          longName: Freelancer Technology Pty Limited
                          logoUrl: >-
                            https://cdn.smileapi.io/image/provider-logo/v20210813064500/freelancer.png
                          type: GIG
                          typeLabel: Gig Platform
                          subType: SERVICES
                          subTypeLabel: Professional Services
                          active: true
                          enabled: true
                          mfa: true
                          supported:
                            - IDENTITIES
                        - id: grab
                          name: Grab
                          longName: Grab Holdings Inc
                          logoUrl: >-
                            https://cdn.smileapi.io/image/provider-logo/v20210813064500/freelancer.png
                          type: GIG
                          typeLabel: Gig Platform
                          subType: TRANSPORTATION
                          subTypeLabel: Transport and Delivery
                          active: true
                          enabled: true
                          mfa: true
                          supported:
                            - IDENTITIES
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-providers
      description: Get a list of the data providers from the Smile Network.
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/size'
        - schema:
            type: string
          in: query
          name: type
          description: Filter results to certain type of providers.
        - schema:
            type: string
          in: query
          name: subType
          description: Filter results to certain subset of a certain type providers
        - schema:
            type: boolean
          in: query
          name: active
          description: Filter results to active or inactive providers.
        - schema:
            type: boolean
          in: query
          name: enabled
          description: Filter results to enabled or disabled providers.
    parameters: []
  /providers/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Provider
      tags:
        - Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: upwork
                      name: Upwork
                      longName: Upwork Global Inc.
                      logoUrl: >-
                        https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
                      type: GIG
                      typeLabel: Gig Platform
                      subType: SERVICES
                      subTypeLabel: Professional Services
                      active: true
                      enabled: true
                      mfa: true
                      supported:
                        - IDENTITIES
                        - TRANSACTIONS
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-provider
      description: Get a data provider from the Smile Network.
      parameters: []
  /users:
    get:
      summary: List Users
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            property1: string
                            property2: string
                          providers:
                            - upwork
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            property1: string
                            property2: string
                          providers:
                            - freelancer
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            property1: string
                            property2: string
                          providers:
                            - grab
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            key1: value
                            key2: value
                          providers:
                            - upwork
                            - freelancer
                            - grab
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-users
      description: List users from the Smile Network.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
    parameters: []
    post:
      summary: Create User
      operationId: create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPostRequest'
        description: ''
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPostResponse'
              examples: {}
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
        default:
          $ref: '#/components/responses/Standard-Errors'
      description: Create a user in the Smile Network.
      tags:
        - Users
  /users/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get User
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                      externalMetadata:
                        property1: string
                        property2: string
                      providers:
                        - upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-user
      description: Get a particular user profile from the Smile Network.
      parameters: []
  /tokens:
    post:
      summary: Refresh Token
      operationId: create-token
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPostResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      expiresAt: 2021-04-14T09:30:24Z
                      mode: SANDBOX
                      accessToken: string
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      description: Refresh a token for a user
      tags:
        - Tokens
      parameters:
        - schema:
            type: string
          in: query
          name: userId
          required: true
          description: the user whom to create token for.
  /accounts:
    get:
      summary: List Accounts
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: 2021-04-14T09:30:24Z
                          providerId: grab
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          connectionStatus: ERROR
                          connection:
                            status: ERROR
                            errorCode: ACCOUNT_DISABLED
                            errorMessage: Account is disabled
                            updatedAt: 2021-04-14T09:30:24Z
                        - id: 7fa7e260ad724f39b61427f6ac2edc69
                          createdAt: 2021-04-15T09:30:24Z
                          providerId: freelancer
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          connectionStatus: CONNECTED
                          connection:
                            status: CONNECTED
                            errorCode: null
                            errorMessage: null
                            updatedAt: 2021-04-18T09:30:24Z
                        - id: 79da958ecb2143659747deaebca1cfe0
                          createdAt: 2021-04-17T09:30:24Z
                          providerId: upwork
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          connectionStatus: CONNECTED
                          connection:
                            status: CONNECTED
                            errorCode: null
                            errorMessage: null
                            updatedAt: 2021-04-19T09:30:24Z
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-accounts
      description: Get a list of accounts from the Smile Network.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
    parameters: []
  /accounts/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Account
      tags:
        - Accounts
      operationId: get-account
      description: Get a particular account from the Smile Network.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: 2021-04-14T09:30:24Z
                      providerId: grab
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      connectionStatus: ERROR
                      connection:
                        status: ERROR
                        errorCode: ACCOUNT_DISABLED
                        errorMessage: Account is disabled
                        updatedAt: 2021-04-14T09:30:24Z
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      parameters: []
  /identities:
    get:
      summary: List Identities
      tags:
        - Identities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: i-17bbf36498de4d68a0d4f86c7b62f69f
                          fullName: George Cimafranca Palomero, Jr
                          firstName: George
                          middleName: Cimafranca
                          lastName: Palomero
                          suffix: Jr
                          gender: Male
                          dob: 1970-08-24
                          maritalStatus: Married
                          countryResidence: PH
                          citizenship: Citizen
                          photoUrl: >-
                            https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
                          referenceId: george
                          profileUrl: https://upwork.com/profiles/george.jpg
                          emails:
                            - address: gpalomero1234@yahoo.com
                              type: Primary
                          phones:
                            - number: '+639175551234'
                              type: Mobile
                          socialProfiles:
                            - socialUrl: https://www.facebook.com/gpalomero
                              type: Facebook
                          addresses:
                            - fullAddress: >-
                                12 Maybunga St, Barangay Paraiso, Pasig City,
                                NCR, 1600, PH
                              line1: 12 Maybunga St
                              line2: Barangay Paraiso
                              city: Pasig City
                              region: NCR
                              zip: '1600'
                              country: PH
                              latitude: '14.573454'
                              longitude: '121.085042'
                              type: Primary
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: i-24bbf36498ac4d26a0d4f86c7b62f83z
                          fullName: Ryan Joseph Peterson Chua Ng
                          firstName: Ryan Joseph Peterson
                          middleName: Chua
                          lastName: Ng
                          suffix: null
                          gender: Male
                          dob: 1995-06-24
                          maritalStatus: Single
                          countryResidence: null
                          citizenship: Citizen
                          photoUrl: >-
                            https://cdn.smileapi.io/image/avatar/v20211115191600/ryan.jpg
                          referenceId: ~02c0bf6ae6a581ee2b
                          profileUrl: >-
                            https://www.upwork.com/freelancers/~02c0bf6ae6a581ee2b
                          emails:
                            - address: ryan1234@gmail.com
                              type: Primary
                          phones:
                            - number: '+639559994321'
                              type: Mobile
                            - number: '+63289053000'
                              type: Fixed
                          socialProfiles:
                            - socialUrl: https://www.facebook.com/ryanpetersonng
                              type: Facebook
                            - socialUrl: https://www.twitter.com/xklxyz
                              type: Twitter
                          addresses:
                            - fullAddress: 24 Eagle St, Binondo, Manila, NCR, 1008, PH
                              line1: 24 Eagle St
                              line2: Binondo
                              city: Manila
                              region: NCR
                              zip: '1008'
                              country: PH
                              latitude: '14.600454'
                              longitude: '120.969042'
                              type: Primary
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: i-48ace87698bd6e67a0d4f86c7b62h76c
                          fullName: Christina Tan
                          firstName: Christina
                          middleName: dela Cruz
                          lastName: Tan
                          suffix: null
                          gender: Female
                          dob: 1997-02-12
                          maritalStatus: Single
                          countryResidence: null
                          citizenship: Citizen
                          photoUrl: >-
                            https://cdn.smileapi.io/image/avatar/v20211115191600/christina.jpg
                          referenceId: null
                          profileUrl: null
                          emails:
                            - address: christina4321@yahoo.com
                              type: Primary
                          phones:
                            - number: '+639559996789'
                              type: Mobile
                            - number: '+639226789888'
                              type: Mobile
                          socialProfiles: []
                          addresses:
                            - fullAddress: null
                              line1: null
                              line2: null
                              city: null
                              region: null
                              zip: null
                              country: PH
                              latitude: null
                              longitude: null
                              type: Primary
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-identities
      description: Get the user's identities from provider accounts.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
    parameters: []
  /identities/{id}:
    get:
      summary: Get Identity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: i-17bbf36498de4d68a0d4f86c7b62f69f
                      fullName: George Cimafranca Palomero, Jr
                      firstName: George
                      middleName: Cimafranca
                      lastName: Palomero
                      suffix: Jr
                      gender: Male
                      dob: 1970-08-24
                      maritalStatus: Married
                      countryResidence: PH
                      citizenship: Citizen
                      photoUrl: >-
                        https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
                      referenceId: george
                      profileUrl: https://upwork.com/profiles/george.jpg
                      emails:
                        - address: gpalomero1234@yahoo.com
                          type: Primary
                      phones:
                        - number: '+639175551234'
                          type: Mobile
                      socialProfiles:
                        - socialUrl: https://www.facebook.com/gpalomero
                          type: Facebook
                      addresses:
                        - fullAddress: >-
                            12 Maybunga St, Barangay Paraiso, Pasig City, NCR,
                            1600, PH
                          line1: 12 Maybunga St
                          line2: Barangay Paraiso
                          city: Pasig City
                          region: NCR
                          zip: '1600'
                          country: PH
                          latitude: '14.573454'
                          longitude: '121.085042'
                          type: Primary
                      metadata:
                        createdAt: 2021-04-14T09:30:24Z
                        accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-identity
      description: Get the user's identity by ID.
      tags:
        - Identities
      parameters: []
    parameters:
      - $ref: '#/components/parameters/id'
  /transactions:
    get:
      summary: List Transactions
      tags:
        - Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: t-17bbf36498de4d68a0d4f86c7b62f69f
                          date: 2021-04-21
                          description: Payment for web design project Milestone 2
                          currency: PHP
                          amount: 10000
                          referenceId: string
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: t-17bbf36498de4d68a0d4f86c7b62f69f
                          date: 2021-03-21
                          description: Payment for web design project Milestone 1
                          currency: PHP
                          amount: 10000
                          referenceId: string
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: t-17bbf36498de4d68a0d4f86c7b62f69f
                          date: 2021-02-12
                          description: Payment for Facebook Ad design
                          currency: PHP
                          amount: 5000
                          referenceId: string
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-transactions
      description: Get the user's transaction from provider accounts.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - schema:
            type: string
            format: date
            example: 2021-04-01
          in: query
          name: startDate
          description: Filter by transaction date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: 2021-04-21
          in: query
          name: endDate
          description: Filter by transaction date, end of date range (YYYY-MM-DD)
  /transactions/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Transaction
      tags:
        - Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: t-17bbf36498de4d68a0d4f86c7b62f69f
                      date: 2021-04-21
                      description: Payment for web design project
                      currency: PHP
                      amount: 10000
                      referenceId: string
                      metadata:
                        createdAt: 2021-04-21T09:30:24Z
                        accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: upwork
      operationId: get-transaction
      description: Get a user's transaction by ID.
  /uploads:
    get:
      summary: List Uploads
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: upload-17bbf36498de4d68a0d4f86c7b62f69f
                          rawFiles:
                            - SOCIAL_SECURITY:
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: SSS.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: SSS2.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                            - PAYSLIP:
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: Payslip.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: Payslip2.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: user-provided
                        - id: upload-17bbf36498de4d68a0d4f86c7b62f69f
                          rawFiles:
                            - SOCIAL_SECURITY:
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: SSS.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: SSS2.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                            - PAYSLIP:
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: Payslip.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                                - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                                  name: Payslip2.jpeg
                                  format: JPEG
                                  size: 512
                                  url: >-
                                    https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: user-provided
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-uploads
      description: Get the user's uploads.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - schema:
            type: string
            format: date
            example: 2021-04-01
          in: query
          name: startDate
          description: Filter by upload date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: 2021-04-21
          in: query
          name: endDate
          description: Filter by upload date, end of date range (YYYY-MM-DD)
      tags:
        - Uploads
  /uploads/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Upload
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: upload-17bbf36498de4d68a0d4f86c7b62f69f
                      rawFiles:
                        - SOCIAL_SECURITY:
                            - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                              name: SSS.jpeg
                              format: JPEG
                              url: >-
                                https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                            - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                              name: SSS2.jpeg
                              format: JPEG
                              url: >-
                                https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                        - PAYSLIP:
                            - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                              name: Payslip.jpeg
                              format: JPEG
                              url: >-
                                https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                            - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                              name: Payslip2.jpeg
                              format: JPEG
                              url: >-
                                https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                      metadata:
                        createdAt: 2021-04-14T09:30:24Z
                        accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: user-provided
      operationId: get-upload
      description: Get a user's upload by ID.
      tags:
        - Uploads
  /ratings:
    get:
      summary: List Ratings
      tags:
        - Ratings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          currentRating: 90
                          maxRating: 100
                          calculatedPercentage: 90
                          reviewsReceived: 12
                          likesReceived: 8
                          jobsCompleted: 12
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: 23cdf39032ga4d98f0d4f92d4b52f45f
                          currentRating: 3.4
                          maxRating: 5
                          calculatedPercentage: 68
                          reviewsReceived: 34
                          likesReceived: null
                          jobsCompleted: null
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-ratings
      description: Get the user's ratings from provider accounts.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
  /ratings/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Rating
      tags:
        - Ratings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      currentRating: 90
                      maxRating: 100
                      calculatedPercentage: 90
                      reviewsReceived: 12
                      likesReceived: 8
                      jobsCompleted: 12
                      metadata:
                        createdAt: 2021-04-14T09:30:24Z
                        accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-rating
      description: Get a user's ratings by ID.
  /employments:
    get:
      summary: List Employments
      tags:
        - Employments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          name: Digital Marketing
                          description: >-
                            Gathering and reporting relevant data, maintaining
                            specific reports and dashboards, using platforms and
                            programs to address marketing requirements, and
                            updating specific marketing materials.
                          jobTitle: Digital Marketing Assistant
                          department: Marketing
                          employeeNumber: EMP-123456
                          employer: ABC Corporation
                          startDate: 2016-02-24
                          endDate: 2019-08-24
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: abccorp
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          name: Executive Assistant
                          description: >-
                            Contribute to the efficiency of the business by
                            providing personalized and timely support to
                            executive members particularly the CEO.
                            Responsibilities include managing calendars, making
                            travel arrangements and preparing expense reports.
                          jobTitle: EA to the CEO
                          department: Administation
                          employeeNumber: CDE-98765
                          employer: CDE Corporation
                          startDate: 2015-06-14
                          endDate: 2016-01-30
                          metadata:
                            createdAt: 2021-04-14T09:30:24Z
                            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-employments
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - schema:
            type: string
            format: date
          in: query
          description: Filter by employment date, start of date range (YYYY-MM-DD)
          name: startDate
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: Filter by employment date, end of date range (YYYY-MM-DD)
      description: Get the user's previous employments.
    parameters: []
  /employments/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Employment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentGetResponse'
              examples:
                Example:
                  value:
                    id: 17bbf36498de4d68a0d4f86c7b62f69f
                    name: Digital Marketing
                    description: >-
                      Gathering and reporting relevant data, maintaining
                      specific reports and dashboards, using platforms and
                      programs to address marketing requirements, and updating
                      specific marketing materials.
                    jobTitle: Digital Marketing Assistant
                    department: Marketing
                    employeeNumber: EMP-123456
                    employer: ABC Corporation
                    startDate: 2016-02-24
                    endDate: 2019-08-24
                    metadata:
                      createdAt: 2021-04-14T09:30:24Z
                      accountId: 17bbf36498de4d68a0d4f86c7b62f69f
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-employment
      tags:
        - Employments
      description: Get a user's employment by ID.
  /documents:
    get:
      summary: List Documents
      tags:
        - Documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-documents
      description: Get the user's documents from provider accounts.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
  /documents/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Document
      tags:
        - Documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetResponse'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-document
      description: Get a user's document by ID.
components:
  schemas:
    Provider:
      title: Provider
      type: object
      description: >-
        An employment data provider. A provider holds employment and income
        information of the user
      x-tags:
        - Providers
      x-examples:
        Example:
          id: upwork
          name: Upwork
          longName: Upwork Global Inc.
          logoUrl: >-
            https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
          type: GIG
          typeLabel: Gig Platform
          subType: SERVICES
          subTypeLabel: Professional Services
          active: true
          enabled: true
          mfa: true
          supported:
            - IDENTITIES
            - TRANSACTIONS
      properties:
        id:
          type: string
          description: Unique ID of the data provider.
          example: upwork
        name:
          type: string
          description: Name of the data provider.
          example: Upwork
        longName:
          type: string
        logoUrl:
          type: string
          description: URL to the data provider's logo.
          example: >-
            https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
        type:
          type: string
          enum:
            - GIG
            - EMPLOYMENT
            - SCAN
          description: Type of employment data provider.
          example: GIG
        typeLabel:
          type: string
          description: Type label of employment data provider, like "Gig Platform".
          example: Gig Platform
          enum:
            - Gig Platform
            - Formal Employment
            - Document Scan
        subType:
          type: string
          description: Subset of Type of employment data provider
          enum:
            - SERVICES
            - TRANSPORTATION
            - SHARING
            - TRADING
            - PAYROLL
            - HR
            - UPLOADS
        subTypeLabel:
          type: string
          description: Subtype label of employment data provider, like "Services".
          example: Professional Services
          enum:
            - Professional Services
            - Transport and Delivery
            - Asset Sharing
            - Online Selling
            - Payroll
            - Human Resources
            - Uploaded Documents
        active:
          type: boolean
          description: Indicates whether data provider integration is working.
        enabled:
          type: boolean
          description: >-
            Indicates whether data provider is enabled or access is allowed for
            the client.
        mfa:
          type: boolean
          description: Whether data provider requires two-factor authentication.
        supported:
          type: array
          items:
            type: string
            example: IDENTITIES
            enum:
              - IDENTITIES
              - TRANSACTIONS
              - RATINGS
              - EMPLOYMENTS
              - DOCUMENTS
      required:
        - id
        - name
        - logoUrl
        - type
        - subType
        - active
        - enabled
        - mfa
        - supported
    ProviderGetResponse:
      title: Provider Get Response
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Provider'
      x-internal: true
      x-examples: {}
      description: ''
    ProviderListResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Provider'
      x-internal: true
      x-examples: {}
      title: Provider List Response
      description: ''
    User:
      title: User
      type: object
      description: >-
        A user is someone who is authorizing Smile to retrieve and share their
        employment and income data on their behalf.
      x-tags:
        - Users
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          externalMetadata:
            property1: string
            property2: string
          createdAt: 2021-04-14T09:30:24Z
          providers:
            - upwork
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        externalMetadata:
          $ref: '#/components/schemas/Object-ExternalMetadata'
        createdAt:
          $ref: '#/components/schemas/Ref-DateTime'
        providers:
          description: Array of providers connected to this user (listed by provider ID)
          type: array
          items:
            type: string
            example: upwork
      required:
        - id
    UserPostRequest:
      type: object
      properties:
        externalMetadata:
          $ref: '#/components/schemas/Object-ExternalMetadata'
      x-internal: true
      x-examples: {}
      title: User Post Request
      description: ''
    UserPostResponse:
      title: User Post Response
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              $ref: '#/components/schemas/Token'
          required:
            - user
            - token
      x-internal: true
      x-examples: {}
    UserGetResponse:
      title: User Get Response
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/User'
      x-internal: true
      x-examples: {}
    UserListResponse:
      title: User List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/User'
      x-internal: true
      x-examples: {}
    Token:
      title: Token
      type: object
      x-tags:
        - Tokens
      description: >-
        A method for securely transmitting information between Smile and the
        user.
      properties:
        expiresAt:
          $ref: '#/components/schemas/Ref-DateTime'
        mode:
          type: string
          enum:
            - SANDBOX
            - PRODUCTION
          example: SANDBOX
          description: Valid Smile mode for the Token.
        accessToken:
          type: string
          description: Short-lived token to initiate link flow.
      required:
        - expiresAt
        - mode
        - accessToken
      x-examples:
        Example:
          expiresAt: 2021-04-14T09:30:24Z
          mode: SANDBOX
          accessToken: string
    TokenPostResponse:
      title: Token Post Response
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Token'
      x-internal: true
      x-examples: {}
    Account:
      title: Account
      type: object
      description: Account of end-user from a particular employment data provider.
      x-tags:
        - Accounts
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          createdAt: 2021-04-14T09:30:24Z
          providerId: grab
          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
          connectionStatus: ERROR
          connection:
            status: ERROR
            errorCode: ACCOUNT_DISABLED
            errorMessage: Account is disabled
            updatedAt: 2021-04-14T09:30:24Z
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        createdAt:
          $ref: '#/components/schemas/Ref-DateTime'
        providerId:
          type: string
          example: grab
          description: ID of the data provider.
        userId:
          type: string
          description: User ID associated with this account
          example: tenant-5c1a2e8678e3494eba303ad1afa54ee8
        connectionStatus:
          type: string
          enum:
            - PENDING
            - AWAITING_MFA
            - ERROR
            - CONNECTED
            - DISCONNECTED
          description: Account connection status.
          example: ERROR
          deprecated: true
        connection:
          type: object
          properties:
            status:
              type: string
              enum:
                - PENDING
                - AWAITING_MFA
                - ERROR
                - CONNECTED
                - DISCONNECTED
              description: Account connection status.
              example: ERROR
            errorCode:
              type: string
              enum:
                - ACCOUNT_DISABLED
                - ACCOUNT_INACCESSIBLE
                - ACCOUNT_INCOMPLETE
                - AUTH_REQUIRED
                - EXPIRED_CREDENTIALS
                - INVALID_ACCOUNT_TYPE
                - INVALID_AUTH
                - INVALID_CREDENTIALS
                - INVALID_MFA
                - MFA_TIMEOUT
                - SERVICE_UNAVAILABLE
                - SYSTEM_ERROR
                - TOS_REQUIRED
                - UNSUPPORTED_AUTH_TYPE
                - UNSUPPORTED_MFA_METHOD
                - null
              description: Error code
              example: ACCOUNT_DISABLED
              nullable: true
            errorMessage:
              type: string
              description: Error message
              example: Account is disabled
              nullable: true
            updatedAt:
              $ref: '#/components/schemas/Ref-DateTime'
          required:
            - status
      required:
        - id
        - createdAt
        - providerId
        - userId
    AccountGetResponse:
      title: Account Get Response
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Account'
      x-internal: true
      x-examples: {}
    AccountListResponse:
      title: Account List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Account'
      x-internal: true
      x-examples: {}
    Identity:
      type: object
      title: Identity
      description: >-
        The stored identity information of the user from an employment data
        provider.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          fullName: George Cimafranca Palomero, Jr
          firstName: George
          middleName: Cimafranca
          lastName: Palomero
          suffix: Jr
          gender: Male
          dob: 1970-08-24
          maritalStatus: Married
          countryResidence: PH
          citizenship: Citizen
          photoUrl: https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
          referenceId: null
          profileUrl: null
          emails:
            - address: gpalomero1234@yahoo.com
              type: Primary
          phones:
            - number: '+639559991234'
              type: Mobile
          socialProfiles:
            - socialUrl: https://www.facebook.com/gpalomero
              type: Facebook
          addresses:
            - fullAddress: 12 Maybunga St, Barangay Paraiso, Pasig City, NCR, 1600, PH
              line1: 12 Maybunga St
              line2: Barangay Paraiso
              city: Pasig City
              region: NCR
              zip: '1600'
              country: PH
              latitude: '14.573454'
              longitude: '121.085042'
              type: Primary
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: upwork
      x-tags:
        - Identities
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        fullName:
          type: string
          example: George Cimafranca Palomero, Jr
          description: Full name
        firstName:
          type: string
          example: George
          description: First name
          nullable: true
        middleName:
          type: string
          example: Cimafranca
          description: Middle name
          nullable: true
        lastName:
          type: string
          example: Palomero
          description: Last name
          nullable: true
        suffix:
          type: string
          example: Jr
          description: Suffix
          nullable: true
        gender:
          type: string
          enum:
            - Male
            - Female
            - Non-binary
          example: Male
          description: Gender
          nullable: true
        dob:
          type: string
          format: date
          description: Date of birth
          nullable: true
        maritalStatus:
          type: string
          enum:
            - Divorced
            - Married
            - Separated
            - Single
            - Widowed
            - Lifetime Partner
          example: Married
          description: Marital status
          nullable: true
        countryResidence:
          $ref: '#/components/schemas/Ref-Country'
        citizenship:
          type: string
          enum:
            - Citizen
            - Resident Alien
            - Non-resident Alien
            - Undocumented
            - Others
          description: Citizenship
          nullable: true
        photoUrl:
          type: string
          example: https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
          description: URL to photo or avatar
          nullable: true
        referenceId:
          type: string
          description: Reference profile ID from the data provider
          example: ~02c0bf6ae6a581ee2b
          nullable: true
        profileUrl:
          type: string
          description: Public profile URL
          example: https://www.upwork.com/freelancers/~02c0bf6ae6a581ee2b
          nullable: true
        emails:
          type: array
          description: A collection of email addresses
          items:
            type: object
            title: email
            properties:
              address:
                type: string
                format: email
                example: gpalomero@yahoo.com
                description: Email address
                nullable: true
              type:
                $ref: '#/components/schemas/Ref-Contact-Type'
            required:
              - type
        phones:
          type: array
          description: A collection of phone numbers
          items:
            type: object
            title: phone
            properties:
              number:
                $ref: '#/components/schemas/Ref-Phone-Number'
              type:
                $ref: '#/components/schemas/Ref-Phone-Type'
            required:
              - type
        socialProfiles:
          type: array
          description: A collection of social media URLs
          items:
            type: object
            title: socialProfile
            properties:
              socialUrl:
                type: string
                example: https://www.facebook.com/gpalomero
                description: URL to social media page
                nullable: true
              type:
                type: string
                enum:
                  - Twitter
                  - Facebook
                  - LinkedIn
                  - Others
                example: Facebook
                description: Social media type
                nullable: true
            required:
              - type
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Ref-Address'
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - fullName
        - metadata
    IdentityGetResponse:
      title: Identity Get Response
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Identity'
      x-internal: true
      x-examples: {}
    IdentityListResponse:
      title: Identity List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Identity'
      x-internal: true
      x-examples: {}
    Transaction:
      title: Transaction
      type: object
      description: >-
        The stored financial transaction data of the user from an employment
        data provider.
      x-tags:
        - Transactions
      x-examples:
        Example:
          code: OK
          message: Success
          requestId: 5b79399a-6852-4234-bb0e-ad472648282d
          data:
            id: t-17bbf36498de4d68a0d4f86c7b62f69f
            date: 2021-04-21
            description: Payment for web design project
            currency: PHP
            amount: 10000
            referenceId: string
            metadata:
              createdAt: 2021-04-21T09:30:24Z
              accountId: 17bbf36498de4d68a0d4f86c7b62f69f
              userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
              providerId: upwork
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        date:
          type: string
          format: date
          example: 2021-04-21
          description: Date of transaction
        description:
          type: string
          description: Description of the transaction
          example: Payment for web design project
          nullable: true
        currency:
          $ref: '#/components/schemas/Ref-Currency'
        amount:
          type: number
          example: 10000
        referenceId:
          type: string
          description: Reference transaction ID from data provider
          nullable: true
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - date
        - currency
        - amount
        - metadata
    TransactionGetResponse:
      title: Transaction Get Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Transaction'
      x-internal: true
      x-examples: {}
    TransactionListResponse:
      title: Transaction List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
      x-internal: true
      x-examples: {}
    Employment:
      title: Employment
      type: object
      x-internal: false
      description: >-
        The stored employment information of the user from an employment data
        provider.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          name: Digital Marketing
          description: >-
            Gathering and reporting relevant data, maintaining specific reports
            and dashboards, using platforms and programs to address marketing
            requirements, and updating specific marketing materials.
          jobTitle: Digital Marketing Assistant
          department: Marketing
          employeeNumber: EMP-123456
          employer: ABC Corporation
          startDate: 2016-02-24
          endDate: 2019-08-24
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: abccorp
      x-tags:
        - Employments
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        name:
          type: string
          description: Work performed
          example: Digital Marketing
          nullable: true
        description:
          type: string
          description: Description of work performed
          example: >-
            Gathering and reporting relevant data, maintaining specific reports
            and dashboards, using platforms and programs to address marketing
            requirements, and updating specific marketing materials.
          nullable: true
        jobTitle:
          type: string
          description: Job title
          example: Digital Marketing Assistant
          nullable: true
        department:
          type: string
          description: Department or organization in place of employment
          example: Marketing
          nullable: true
        employeeNumber:
          type: string
          description: Employee number in the employment data provider
          example: EMP-123456
          nullable: true
        employer:
          $ref: '#/components/schemas/Ref-Employer'
        startDate:
          type: string
          description: Start date
          format: date
          example: 2016-02-24
        endDate:
          type: string
          description: End date
          format: date
          example: 2019-08-24
          nullable: true
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - employer
        - startDate
        - metadata
    EmploymentGetResponse:
      title: Employment Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Employment'
    EmploymentListResponse:
      title: Employment List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Employment'
    Rating:
      title: Rating
      type: object
      description: >-
        The stored performance ratings of the user in the employment data
        provider.
      x-internal: false
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          currentRating: 90
          maxRating: 100
          calculatedPercentage: 90
          reviewsReceived: 12
          likesReceived: 8
          jobsCompleted: 12
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: upwork
      x-tags:
        - Ratings
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        currentRating:
          type: number
          description: Current rating
          example: 90
          nullable: true
        maxRating:
          type: number
          description: Maximum possible rating
          example: 100
          nullable: true
        calculatedPercentage:
          type: number
          description: >-
            Current rating expressed as percentage, calculated by
            currentRating/maxRating x 100
          example: 90
          nullable: true
        reviewsReceived:
          type: number
          description: >-
            Number of reviews the employee received, which is the basis for the
            current rating
          example: 12
          nullable: true
        likesReceived:
          type: number
          description: Recommendations or kudos received
          example: 8
          nullable: true
        jobsCompleted:
          type: number
          description: Jobs actually completed in the employment platform
          example: 12
          nullable: true
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - metadata
    RatingGetResponse:
      title: Rating Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Rating'
    RatingListResponse:
      title: Rating List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Rating'
    Document:
      title: Document
      type: object
      x-internal: false
      description: >-
        The stored document-related information of the user from an employment
        data provider.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          name: Facebook Social Media Marketing Professional Certificate
          docId: ABCD123456
          issueDate: 2007-08-24
          expiryDate: 2010-08-24
          fileUrl: >-
            https://images.credly.com/size/680x680/images/c4a900b7-8d1b-4e8f-a572-347985eeaa5c/Coursera_Badge__1_.png
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: upwork
      x-tags:
        - Documents
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        name:
          type: string
          description: Document name
          example: Facebook Social Media Marketing Professional Certificate
        docId:
          type: string
          description: Document number
          example: ABCD123456
          nullable: true
        issueDate:
          type: string
          description: Issue date
          format: date
          example: 2007-08-24
          nullable: true
        expiryDate:
          type: string
          description: Expiry date
          format: date
          example: 2010-08-24
          nullable: true
        fileUrl:
          type: string
          description: Publicly available URL reference for the document
          example: >-
            https://images.credly.com/size/680x680/images/c4a900b7-8d1b-4e8f-a572-347985eeaa5c/Coursera_Badge__1_.png
          nullable: true
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - name
        - metadata
    DocumentGetResponse:
      title: Document Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Document'
    DocumentListResponse:
      title: Document List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Document'
    Asset:
      title: Asset
      type: object
      description: >-
        The stored asset-related information of the user from an employment data
        provider.
      x-internal: true
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          name: Facebook Social Media Marketing Professional Certificate
          docId: ABCD123456
          issueDate: 2007-08-24
          expiryDate: 2010-08-24
          fileUrl: >-
            https://images.credly.com/size/680x680/images/c4a900b7-8d1b-4e8f-a572-347985eeaa5c/Coursera_Badge__1_.png
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: grab
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        name:
          type: string
          description: Asset name
          nullable: true
        description:
          type: string
          description: Asset description
          nullable: true
        assetId:
          type: string
          description: Asset Identifier
          nullable: true
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - name
        - metadata
    AssetGetResponse:
      title: Asset Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Asset'
      description: ''
    AssetListResponse:
      title: Asset List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Asset'
      x-internal: true
    School:
      title: School
      type: object
      x-internal: true
      description: >-
        The stored education-related information of the user from an employment
        data provider.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          name: University of Mindanao
          degree: Bachelor of Science
          field: Business Administration
          startDate: 2012-06-24
          endDate: 2016-03-24
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: upwork
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        name:
          type: string
          description: Name of school/college/university
        degree:
          type: string
          description: Degree (eg Bachelors, Masters, Doctorate)
          nullable: true
        field:
          type: string
          description: Field of study (eg Business, Engineering, Medicine)
          nullable: true
        startDate:
          type: string
          format: date
          description: Start date
        endDate:
          type: string
          description: End date
          format: date
          nullable: true
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - name
        - startDate
        - metadata
    SchoolGetResponse:
      title: School Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/School'
    SchoolListResponse:
      title: School List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/School'
    Income:
      title: Income
      type: object
      description: >-
        The stored income information of the user from an employment data
        provider.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          workItem: Salary for the first half of April
          employer: ABC Corporation
          payDate: 2021-04-14
          payPeriod: Biweekly
          channel: Bank
          grossPay:
            currency: PHP
            base: 70000
            bonus: 20000
            allowance: 10000
            grossAmount: 100000
          netPay:
            currency: PHP
            tax: -30000
            deduction: -10000
            adjustment: -10000
            netAmount: 50000
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: user-provided
      x-internal: true
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        workItem:
          type: string
          description: Work performed (specially in the case of contract or freelance jobs)
          nullable: true
        employer:
          $ref: '#/components/schemas/Ref-Employer'
        payDate:
          type: string
          description: Payment date
          format: date
        payPeriod:
          $ref: '#/components/schemas/Ref-Pay-Period'
        channel:
          type: string
          description: Channel of payment
          enum:
            - Cash
            - Check
            - Bank
            - Ewallet
            - Crypto
          nullable: true
        grossPay:
          type: object
          properties:
            currency:
              $ref: '#/components/schemas/Ref-Currency'
            base:
              type: number
              description: Base amount
              example: 70000
              nullable: true
            bonus:
              type: number
              description: Bonus amount
              example: 20000
              nullable: true
            allowance:
              type: number
              description: Allowance amount
              example: 10000
              nullable: true
            grossAmount:
              type: number
              description: Gross amount (base + bonus + allowance)
              example: 100000
              nullable: true
        netPay:
          type: object
          properties:
            currency:
              $ref: '#/components/schemas/Ref-Currency'
            tax:
              type: number
              example: -30000
              nullable: true
            deduction:
              type: number
              example: -10000
              nullable: true
            adjustment:
              type: number
              example: -10000
              nullable: true
            netAmount:
              type: number
              example: 50000
              nullable: true
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - payDate
        - metadata
    IncomeGetResponse:
      title: Income Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Income'
    IncomeListResponse:
      title: Income List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Income'
    RawFile:
      title: RawFile
      type: object
      description: >-
        Scanned or photographed document or form uploaded by the user to be able
        to share hardcopy employment and income information
      x-examples:
        Example:
          id: file-17bbf36498de4d68a0d4f86c7b62f69f
          name: Screen Shot 2021-04-14 at 5.30.24 PM
          type: SOCIAL_SECURITY
          createdAt: 2021-04-14T09:30:24Z
          size: 3048
          format: PDF
          url: string
      x-internal: true
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        name:
          type: string
          example: Screen Shot 2021-04-14 at 5.30.24 PM
          description: File name
        type:
          type: string
          example: SOCIAL_SECURITY
          enum:
            - PAYSLIP
            - TAX_RETURN
            - COMPANY_ID
            - SOCIAL_SECURITY
          description: Type of document uploaded
        createdAt:
          $ref: '#/components/schemas/Ref-DateTime'
        size:
          type: integer
          description: File size in kilobytes
          example: 3048
        format:
          type: string
          enum:
            - PDF
            - PNG
            - TIFF
            - JPEG
          example: PNG
          description: File type (only JPEG, PNG, PDF, or TIFF formats are supported)
        url:
          type: string
          description: URL to access the file. URL will expire after 1 day.
          example: >-
            https://file.smileapi.io/tenants/smileapi/user/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
      required:
        - name
        - type
        - status
        - createdAt
        - size
        - format
        - url
    Upload:
      title: Upload
      type: object
      description: Collection of files.
      x-internal: false
      x-examples:
        Example:
          code: OK
          message: Success
          requestId: 5b79399a-6852-4234-bb0e-ad472648282d
          data:
            id: upload-17bbf36498de4d68a0d4f86c7b62f69f
            rawFiles:
              - SOCIAL_SECURITY:
                  - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                    name: SSS.jpeg
                    format: JPEG
                    url: >-
                      https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                  - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                    name: SSS2.jpeg
                    format: JPEG
                    url: >-
                      https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
              - PAYSLIP:
                  - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                    name: Payslip.jpeg
                    format: JPEG
                    url: >-
                      https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                  - id: file-17bbf36498de4d68a0d4f86c7b62f69f
                    name: Payslip2.jpeg
                    format: JPEG
                    url: >-
                      https://file.smileapi.io/tenants/smileapi/users/17bbf36498de4d68a0d4f86c7b62f69f/files/17bbf36498de4d68a0d4f86c7b62f69f.jpeg
          metadata:
            createdAt: 2021-04-14T09:30:24Z
            accountId: 17bbf36498de4d68a0d4f86c7b62f69f
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: user-provided
      properties:
        id:
          $ref: '#/components/schemas/Ref-Object-ID'
        rawFiles:
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/RawFile'
          description: Collection of files
        metadata:
          $ref: '#/components/schemas/Object-AccountsMetadata'
      required:
        - id
        - rawFiles
        - metadata
      x-tags:
        - Uploads
    UploadGetResponse:
      title: Upload Get Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          $ref: '#/components/schemas/Upload'
      description: ''
      x-internal: true
    UploadListResponse:
      title: Upload List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Object-Metadata-Ref-Code'
        message:
          $ref: '#/components/schemas/Object-Metadata-Ref-Message'
        requestId:
          $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/Object-Next-Cursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Upload'
      x-internal: true
    Object-Metadata-Ref-Code:
      type: string
      title: Object-Metadata-Ref-API-Code
      description: Request status code
      enum:
        - OK
        - CREATED
        - INVALID_CREDENTIALS
        - INVALID_PARAMETERS
        - INVALID_TOKEN
        - UNAUTHORIZED_ACCESS
        - MISSING_RESOURCE
        - REQUEST_LIMIT_EXCEEDED
        - SERVER_ERROR
        - UNSUPPORTED_METHOD
        - SERVER_UNAVAILABLE
        - TIME_LIMIT_EXCEEDED
      example: OK
      x-internal: true
    Object-Metadata-Ref-Message:
      type: string
      title: Object-Metadata-Ref-Message
      description: Message response to the request
      example: Success
      x-internal: true
    Object-Metadata-Ref-RequestID:
      type: string
      title: Object-Metadata-Ref-RequestID
      description: >-
        Unique ID that is added to the body of every response for easy
        traceability of the request in our logs.
      x-internal: true
      example: 5b79399a-6852-4234-bb0e-ad472648282d
    Object-Next-Cursor:
      title: Object-Next-Cursor
      type: string
      example: '1259723474'
      description: The next cursor value that can be used in the following query.
      x-internal: true
    Ref-Object-ID:
      type: string
      title: Object ID
      description: Unique ID of this object
      x-internal: true
      example: 17bbf36498de4d68a0d4f86c7b62f69f
    Object-ExternalMetadata:
      title: Object-ExternalMetadata
      type: object
      additionalProperties:
        type: string
      maxProperties: 5
      description: >-
        The Metadata object is a mapping of client-provided string fields to any
        string value. The following limitations apply:

        - The JSON values must be Strings (no nested JSON objects allowed)

        - Only ASCII characters can be used

        - Maximum of 5 key/value pairs

        - Maximum key length of 50 characters

        - Maximum value length of 500 characters
      x-internal: true
    Ref-DateTime:
      type: string
      title: Date and Time string
      format: date-time
      example: 2021-04-14T09:30:24Z
      description: Date and time
      x-internal: true
    Ref-Country:
      type: string
      nullable: true
      title: Country ISO Codes
      enum:
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BQ
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CW
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KP
        - KR
        - XK
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - AN
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RS
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - CS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - SS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - XT
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - GB
        - US
        - UM
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
        - null
      description: 2 character alpha ISO-3166 codes
      example: PH
      x-internal: true
    Ref-Contact-Type:
      type: string
      nullable: true
      title: Contact Types
      enum:
        - Primary
        - Secondary
        - Work
        - Personal
        - null
      description: Primary contact, with secondary marked as either 'Work' or 'Personal'
      example: Primary
      x-internal: true
    Ref-Phone-Number:
      type: string
      nullable: true
      title: International Phone Number
      pattern: ^\+[1-9]\d{1,14}$
      description: Phone numbers in international E.164 format
      x-internal: true
      example: '+639175551234'
    Ref-Phone-Type:
      type: string
      nullable: true
      title: Ref-Phone-Type
      example: Mobile
      enum:
        - Mobile
        - Fixed
        - Unspecified
        - null
      description: Phone type
      x-internal: true
    Ref-Address:
      title: Address Object
      type: object
      description: Address object
      x-internal: true
      properties:
        fullAddress:
          type: string
          nullable: true
          description: Full address
        line1:
          type: string
          nullable: true
          description: Line 1 of street address
        line2:
          type: string
          nullable: true
          description: Line 2 of street address
        city:
          type: string
          nullable: true
          description: City
        region:
          type: string
          nullable: true
          description: Geographic region such as state or province
        zip:
          type: string
          nullable: true
          description: Post code
        country:
          $ref: '#/components/schemas/Ref-Country'
        latitude:
          type: string
          nullable: true
          pattern: >-
            ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
          description: Latitude coordinates
        longitude:
          type: string
          nullable: true
          pattern: >-
            ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
          description: Longitude coordinates
        type:
          type: string
          nullable: true
          enum:
            - Primary
            - Secondary
            - null
          description: Whether address is primary or secondary
      required:
        - type
    Object-AccountsMetadata:
      title: Accounts Metadata
      type: object
      description: Metadata related to account-specific data
      x-internal: true
      properties:
        createdAt:
          $ref: '#/components/schemas/Ref-DateTime'
        accountId:
          type: string
          description: The account ID associated with this object
        userId:
          type: string
          description: The user ID associated with this object
        providerId:
          type: string
          description: The provider ID associated with this object
      required:
        - createdAt
        - accountId
        - userId
        - providerId
    Ref-Currency:
      type: string
      title: Currency ISO Codes
      description: Currency in 3 character alpha ISO 4217
      enum:
        - AFN
        - DZD
        - ARS
        - AMD
        - AWG
        - AUD
        - AZN
        - BSD
        - BHD
        - THB
        - PAB
        - BBD
        - BYN
        - BZD
        - BMD
        - VES
        - BOB
        - BRL
        - BND
        - BGN
        - BIF
        - CAD
        - CVE
        - KYD
        - GHS
        - XOF
        - XAF
        - XPF
        - CLP
        - COP
        - KMF
        - CDF
        - BAM
        - NIO
        - CRC
        - HRK
        - CZK
        - GMD
        - DKK
        - MKD
        - DJF
        - STD
        - DOP
        - VND
        - XCD
        - EGP
        - SVC
        - ETB
        - EUR
        - FKP
        - FJD
        - HUF
        - GIP
        - HTG
        - PYG
        - GNF
        - GYD
        - HKD
        - UAH
        - ISK
        - INR
        - IRR
        - IQD
        - JMD
        - JOD
        - KES
        - PGK
        - LAK
        - EEK
        - KWD
        - MWK
        - AOA
        - MMK
        - GEL
        - LVL
        - LBP
        - ALL
        - HNL
        - SLL
        - LRD
        - LYD
        - SZL
        - LTL
        - LSL
        - MGA
        - MYR
        - TMT
        - MUR
        - MZN
        - MXN
        - MDL
        - MAD
        - NGN
        - ERN
        - NAD
        - NPR
        - ANG
        - ILS
        - RON
        - TWD
        - NZD
        - BTN
        - KPW
        - NOK
        - PEN
        - MRO
        - TOP
        - PKR
        - MOP
        - UYU
        - PHP
        - GBP
        - BWP
        - QAR
        - GTQ
        - ZAR
        - OMR
        - KHR
        - MVR
        - IDR
        - RUB
        - RWF
        - SHP
        - SAR
        - RSD
        - SCR
        - SGD
        - SBD
        - KGS
        - SOS
        - TJS
        - LKR
        - SDG
        - SRD
        - SEK
        - CHF
        - SYP
        - BDT
        - WST
        - TZS
        - KZT
        - TTD
        - MNT
        - TND
        - TRY
        - AED
        - UGX
        - CLF
        - USD
        - UZS
        - VUV
        - KRW
        - YER
        - JPY
        - CNY
        - ZMW
        - ZWL
        - PLN
      x-internal: true
      example: PHP
    Ref-Employer:
      type: string
      nullable: true
      title: Object Employer
      x-internal: true
      description: Employer name
      example: ABC Corporation
    Ref-Pay-Period:
      type: string
      nullable: true
      title: Pay Period
      description: Pay period
      enum:
        - Hourly
        - Daily
        - Weekly
        - Biweekly
        - Monthly
        - Bimonthly
        - Quarterly
        - Annually
        - Fixed
        - Cumulative
        - null
      example: Monthly
      x-internal: true
  responses:
    Standard-Errors:
      description: Standard error response
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                $ref: '#/components/schemas/Object-Metadata-Ref-Code'
              message:
                $ref: '#/components/schemas/Object-Metadata-Ref-Message'
              requestId:
                $ref: '#/components/schemas/Object-Metadata-Ref-RequestID'
              data:
                type: object
          examples:
            Invalid Credentials:
              value:
                code: INVALID_CREDENTIALS
                message: The credentials you provided are incorrect.
                requestId: d385ab22-0f51-4b97-9ecd-b8ff3fd4fcb6
                data: {}
  parameters:
    id:
      name: id
      in: path
      schema:
        type: string
      description: ID of the specific object in the collection.
      required: true
    size:
      name: size
      in: query
      schema:
        type: integer
        example: 50
        minimum: 1
        maximum: 100
        default: 10
      description: The number of objects you want returned in a collection.
    cursor:
      name: cursor
      in: query
      required: false
      schema:
        type: string
      description: >-
        Uses the filter values of the previous page to determine the next set of
        items.
    userId:
      name: userId
      in: query
      required: false
      schema:
        type: string
      description: Filter to those associated with a particular user ID.
    accountId:
      name: accountId
      in: query
      required: false
      schema:
        type: string
      description: Filter to those associated with a particular account ID.
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
tags:
  - name: Accounts
  - name: Documents
  - name: Employments
  - name: Identities
  - name: Providers
  - name: Ratings
  - name: Tokens
  - name: Transactions
  - name: Uploads
  - name: Users
