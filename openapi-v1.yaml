openapi: 3.0.0
info:
  title: Smile API
  version: 1.14.0
  description: 'The Smile API provides employment and income data from a single API. '
  contact:
    name: Smile Technology Pte Ltd
    url: https://www.getsmileapi.com
    email: info@getsmileapi.com
  termsOfService: https://www.getsmileapi.com/terms-and-conditions
servers:
  - url: https://sandbox.smileapi.io/v1
    description: Sandbox
  - url: https://open.smileapi.io/v1
    description: Production
paths:
  /providers:
    get:
      summary: List Providers
      tags:
        - Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: upwork
                          name: Upwork
                          longName: Upwork Global Inc.
                          logoUrl: >-
                            https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
                          type: GIG
                          typeLabel: Gig Platform
                          subType: SERVICES
                          subTypeLabel: Professional Services
                          active: true
                          enabled: true
                          mfa: true
                          accountConnection: true
                          supported:
                            - IDENTITIES
                        - id: freelancer
                          name: Freelancer
                          longName: Freelancer Technology Pty Limited
                          logoUrl: >-
                            https://cdn.smileapi.io/image/provider-logo/v20210813064500/freelancer.png
                          type: GIG
                          typeLabel: Gig Platform
                          subType: SERVICES
                          subTypeLabel: Professional Services
                          active: true
                          enabled: true
                          mfa: true
                          accountConnection: true
                          supported:
                            - IDENTITIES
                        - id: grab
                          name: Grab
                          longName: Grab Holdings Inc
                          logoUrl: >-
                            https://cdn.smileapi.io/image/provider-logo/v20210813064500/freelancer.png
                          type: GIG
                          typeLabel: Gig Platform
                          subType: TRANSPORTATION
                          subTypeLabel: Transport and Delivery
                          active: true
                          enabled: true
                          mfa: true
                          accountConnection: true
                          supported:
                            - IDENTITIES
        '400':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-providers
      description: Get a list of employment data providers from the Smile Network.
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/size'
        - schema:
            type: string
          in: query
          name: type
          description: Filter results to certain type of providers.
        - schema:
            type: string
          in: query
          name: subType
          description: Filter results to certain subset of a certain subtype of providers
        - schema:
            type: boolean
          in: query
          name: active
          description: Filter results to active or inactive providers.
        - schema:
            type: boolean
          in: query
          name: enabled
          description: Filter results to enabled or disabled providers.
        - schema:
            type: boolean
          in: query
          name: accountConnection
          description: Filter results to providers with real-time account connections.
        - schema:
            type: string
          in: query
          name: name
          description: Filter results by provider name
        - schema:
            type: array
            items:
              type: string
          in: query
          name: ids
          description: >-
            Filter results by provider ids, each id will be matched exactly,
            please following this format 'ids=id1,id2,id3'.
        - schema:
            type: array
            maxItems: 10
            items:
              type: string
          in: query
          name: topIds
          description: >-
            Show these providers on the top of the list, please following this
            format 'ids=id1,id2,id3'.
    parameters: []
  /providers/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Provider
      tags:
        - Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: upwork
                      name: Upwork
                      longName: Upwork Global Inc.
                      logoUrl: >-
                        https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
                      type: GIG
                      typeLabel: Gig Platform
                      subType: SERVICES
                      subTypeLabel: Professional Services
                      active: true
                      enabled: true
                      mfa: true
                      accountConnection: true
                      supported:
                        - IDENTITIES
                        - TRANSACTIONS
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-provider
      description: Get a data provider from the Smile Network.
      parameters: []
  /users:
    get:
      summary: List Users
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            property1: string
                            property2: string
                          createdAt: '2021-04-14T09:30:24Z'
                          providers:
                            - upwork
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            property1: string
                            property2: string
                          createdAt: '2021-04-14T09:30:24Z'
                          providers:
                            - freelancer
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            property1: string
                            property2: string
                          createdAt: '2021-04-14T09:30:24Z'
                          providers:
                            - grab
                        - id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                          externalMetadata:
                            key1: value
                            key2: value
                          createdAt: '2021-04-14T09:30:24Z'
                          providers:
                            - upwork
                            - freelancer
                            - grab
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-users
      description: List users from the Smile Network.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - schema:
            type: string
            format: date
            example: '2021-04-01'
          in: query
          name: startDate
          description: Filter by user creation date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-21'
          in: query
          name: endDate
          description: Filter by user creation date, end of date range (YYYY-MM-DD)
    parameters: []
    post:
      summary: Create User
      operationId: create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPostRequest'
        description: ''
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPostResponse'
              examples: {}
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
        default:
          $ref: '#/components/responses/Standard-Errors'
      description: Create a user in the Smile Network.
      tags:
        - Users
  /users/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get User
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: tenant-17bbf36498de4d68a0d4f86c7b62f69f
                      externalMetadata:
                        property1: string
                        property2: string
                      createdAt: '2021-04-14T09:30:24Z'
                      providers:
                        - upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-user
      description: Get a particular user profile.
      parameters: []
  /tokens:
    post:
      summary: Refresh Token
      operationId: create-token
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPostResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      expiresAt: '2021-04-14T09:30:24Z'
                      mode: SANDBOX
                      accessToken: string
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      description: Refresh a token for a user
      tags:
        - Tokens
      parameters:
        - schema:
            type: string
            minLength: 1
            maxLength: 200
          in: query
          name: userId
          required: true
          description: the user whom to create token for.
  /consentTemplates:
    post:
      description: Create a consent template
      operationId: create-consent-template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentTemplateCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentTemplateCreateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      summary: Create Consent Template
      tags:
        - Consent Templates
      x-contentType: application/json
      x-accepts: application/json
    get:
      description: List consent templates
      operationId: list-consent-templates
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentTemplateListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      summary: List Consent Templates
      tags:
        - Consent Templates
      x-accepts: application/json
  /consentTemplates/{id}:
    delete:
      summary: Delete Consent Template
      x-internal: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: delete-consent-template
      description: Delete a consent template
      tags:
        - Consent Templates
      parameters:
        - $ref: '#/components/parameters/id'
  /webhooks:
    get:
      summary: List Webhooks
      tags:
        - Webhooks
      x-internal: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          name: Event Notification Postback
                          url: https://webhook.clienturl.xyz
                          eventTypes:
                            - ACCOUNT_CONNECTED
                          active: true
                          secret: a little secret
                          updatedAt: '2021-04-14T09:30:24Z'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-webhooks
      description: List all webhook endpoints.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
    parameters: []
    post:
      summary: Create Webhook
      x-internal: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookPostResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      name: Event Notification Postback
                      url: https://webhook.clienturl.xyz
                      eventTypes:
                        - ACCOUNT_CONNECTED
                      secret: a little secret
                      active: true
                      updatedAt: '2021-04-14T09:30:24Z'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: create-webhook
      description: Create a webhook endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPostRequest'
            examples:
              Example:
                value:
                  name: Event Notification Postback
                  url: https://webhook.clienturl.xyz
                  eventTypes:
                    - ACCOUNT_CONNECTED
                    - IDENTITY_ADDED
                  active: true
                  secret: a little secret
      tags:
        - Webhooks
  /webhooks/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Webhook
      x-internal: true
      tags:
        - Webhooks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      name: Event Notification Postback
                      url: https://webhook.clienturl.xyz
                      eventTypes:
                        - ACCOUNT_CONNECTED
                      active: true
                      secret: a little secret
                      updatedAt: '2021-04-14T09:30:24Z'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-webhook
      description: Get a webhook endpoint.
    delete:
      summary: Delete Webhook
      x-internal: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDeleteResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: delete-webhook
      description: Delete a webhook endpoint.
      tags:
        - Webhooks
  /tasks:
    get:
      summary: List Tasks
      tags:
        - Tasks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: task-a2e3ad1afa54ee818678e3494eb5ca30
                          type: LINK_ACCOUNT
                          startedAt: '2023-04-14T09:31:24Z'
                          finishedAt: '2023-04-14T09:33:21Z'
                          status: Finished
                          datapoints:
                            - IDENTITIES
                            - DOCUMENTS
                            - EINCOMES
                            - INCOMES
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: task-a2e3ad18678e3494eb5ca301afa54ee8
                          type: LINK_ACCOUNT
                          startedAt: '2023-04-14T09:31:24Z'
                          finishedAt: null
                          status: Started
                          datapoints: []
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
      operationId: list-tasks
      description: Get the user's tasks.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - schema:
            type: string
            format: date
            example: '2021-04-01'
          in: query
          name: startDate
          description: Filter by task created date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-21'
          in: query
          name: endDate
          description: Filter by task created date, end of date range (YYYY-MM-DD)
        - $ref: '#/components/parameters/sourceId'
  /tasks/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Task
      tags:
        - Tasks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: task-a2e3ad1afa54ee818678e3494eb5ca30
                      type: LINK_ACCOUNT
                      startedAt: '2023-04-14T09:31:24Z'
                      finishedAt: '2023-04-14T09:33:21Z'
                      status: Finished
                      datapoints:
                        - IDENTITIES
                        - DOCUMENTS
                        - EINCOMES
                        - LINK
                        - INSIGHT
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: ACCOUNT
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: upwork
      operationId: get-task
      description: Get a user's task by ID.
  /accounts:
    get:
      summary: List Accounts
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: a-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          providerId: grab
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          connectionStatus: ERROR
                          connection:
                            status: ERROR
                            errorCode: ACCOUNT_DISABLED
                            errorMessage: Account is disabled
                            updatedAt: '2021-04-14T09:30:24Z'
                          monitorStatus: UNSUPPORTED
                          monitor:
                            status: UNSUPPORTED
                            updatedAt: null
                        - id: a-7fa7e260ad724f39b61427f6ac2edc69
                          createdAt: '2021-04-15T09:30:24Z'
                          providerId: freelancer
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          connectionStatus: CONNECTED
                          connection:
                            status: CONNECTED
                            errorCode: null
                            errorMessage: null
                            updatedAt: '2021-04-18T09:30:24Z'
                          monitorStatus: ACTIVE
                          monitor:
                            stust: ACTIVE
                            updatedAt: '2023-03-14T09:30:24Z'
                        - id: a-79da958ecb2143659747deaebca1cfe0
                          createdAt: '2021-04-17T09:30:24Z'
                          providerId: upwork
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          connectionStatus: CONNECTED
                          connection:
                            status: CONNECTED
                            errorCode: null
                            errorMessage: null
                            updatedAt: '2021-04-19T09:30:24Z'
                          monitorStatus: ACTIVE
                          monitor:
                            status: ACTIVE
                            updatedAt: null
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-accounts
      description: Get a list of user accounts.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - schema:
            type: string
            format: date
            example: '2021-04-01'
          in: query
          name: startDate
          description: Filter by account linking date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-21'
          in: query
          name: endDate
          description: Filter by account linking date, end of date range (YYYY-MM-DD)
    parameters: []
  /accounts/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Account
      tags:
        - Accounts
      operationId: get-account
      description: Get a user's particular account information.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: a-17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      providerId: grab
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      connectionStatus: ERROR
                      connection:
                        status: ERROR
                        errorCode: ACCOUNT_DISABLED
                        errorMessage: Account is disabled
                        updatedAt: '2021-04-14T09:30:24Z'
                      monitorStatus: ACTIVE
                      monitor:
                        status: ACTIVE
                        updatedAt: '2021-04-14T09:30:24Z'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      parameters: []
    delete:
      summary: Revoke Account
      tags:
        - Accounts
      operationId: delete-account
      description: >-
        Delete a user's particular account information including the related
        data.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      parameters: []
  /accounts/{id}/payload:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Account Payload
      tags:
        - Accounts
      operationId: get-account-payload
      description: Get a user's particular account payload.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPayloadGetResponse'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      parameters: []
  /accounts/{id}/exports/generate:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      summary: Generate account export
      tags:
        - Accounts
      operationId: generate-account-export
      description: Generate a particular account export.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountExportGenerateRequest'
            examples:
              Example:
                value:
                  exportExtensionType: PDF
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountExportGenerateResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: export-4d686c7b62f69fa0d4f817bbf36498de
                      createdAt: '2021-04-14T09:30:24Z'
                      accountId: a-17bbf36498de4d68a0d4f86c7b62f69f
                      exportExtensionType: PDF
                      md5: f8498de49d68a0d4bbf36f6c7b62f617
                      downloadUrl: >-
                        https://file.smileapi.io/tenants/xx/users/xx-2c4f00ad9b014466868b57b554e9391b/accounts/a-35aa43673f024b26bd699c713e885ddb/exports/export-4d686c7b62f69fa0d4f817bbf36498de.pdf
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      parameters: []
  /accounts/{accountId}/disableMonitor:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: the particular account ID.
    post:
      summary: Disable Monitor
      x-internal: true
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: disable-account-monitor
      description: disable monitor account data.
  /invites:
    get:
      summary: List Invites
      tags:
        - Invites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          fullName: George Cimafranca Palomero, Jr
                          firstName: George
                          lastName: Palomero
                          email: gpalomero1234@smileapi.io
                          templateId: tpl-b2c5e816-65ad-4130-819d-db89acc5869a
                          winkTemplateId: wtpl-db89acc5869a-b2c5e816-65ad-4130-819d
                          userId: tenantId-b2c5e816-65ad-4130-819d-db89acc5869a
                          status: INVITED
                          updatedAt: '2021-04-14T09:30:24Z'
                          invitedAt: '2021-04-14T09:30:24Z'
                          linkedAt: '2021-04-14T09:30:24Z'
                          inviteLandingPageUrl: >-
                            https://user.getsmileapi.com/invite-user/xx-xxxxxx?token=xxxxxxxxx
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-invites
      description: Get the list of invites sent out to users.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
    post:
      summary: Create Invite
      operationId: create-invite
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitePostResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      fullName: George Cimafranca Palomero, Jr
                      firstName: George
                      lastName: Palomero
                      email: gpalomero1234@smileapi.io
                      templateId: tpl-b2c5e816-65ad-4130-819d-db89acc5869a
                      winkTemplateId: wtpl-db89acc5869a-b2c5e816-65ad-4130-819d
                      userId: tenantId-b2c5e816-65ad-4130-819d-db89acc5869a
                      status: INVITED
                      updatedAt: '2021-04-14T09:30:24Z'
                      invitedAt: '2021-04-14T09:30:24Z'
                      linkedAt: '2021-04-14T09:30:24Z'
                      inviteLandingPageUrl: >-
                        https://user.getsmileapi.com/invite-user/xx-xxxxxx?token=xxxxxxxxx
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      description: Create and send an invite to a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitePostRequest'
            examples:
              Example:
                value:
                  fullName: Ryan Joseph Peterson Chua Ng
                  firstName: Ryan
                  lastName: Ng
                  email: ryan1234@smileapi.io
                  templateId: tpl-b2c5e81665ad4130819ddb89acc5869a
                  winkTemplateId: wtpl-db89acc5869a-b2c5e816-65ad-4130-819d
      tags:
        - Invites
  /invites/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Invite
      tags:
        - Invites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      fullName: George Cimafranca Palomero, Jr
                      firstName: George
                      lastName: Palomero
                      email: gpalomero1234@smileapi.io
                      templateId: tpl-b2c5e816-65ad-4130-819d-db89acc5869a
                      winkTemplateId: wtpl-db89acc5869a-b2c5e816-65ad-4130-819d
                      userId: tenantId-b2c5e816-65ad-4130-819d-db89acc5869a
                      status: INVITED
                      updatedAt: '2021-04-14T09:30:24Z'
                      invitedAt: '2021-04-14T09:30:24Z'
                      linkedAt: '2021-04-14T09:30:24Z'
                      inviteLandingPageUrl: >-
                        https://user.getsmileapi.com/invite-user/xx-xxxxxx?token=xxxxxxxxx
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-invite
      description: Get invite sent to users by ID.
  /invites/{inviteId}/logs:
    parameters:
      - name: inviteId
        in: path
        schema:
          type: string
          minLength: 1
          maxLength: 200
        description: ID of the specific invite in the collection.
        required: true
    get:
      summary: List Invite Logs
      tags:
        - Invites
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteLogListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: null
                      items:
                        - id: invl-b2c5e816-65ad-4130-819d-db89acc5869a
                          inviteId: inv-b2c5e816-65ad-4130-819d-db89acc5869a
                          createdAt: '2021-04-14T09:30:24Z'
                          inviteStatus: INVITED
                          userId: tenant-17bbf36498de4d68a0d4f86c7b62f69f
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-invite-log
      description: List invite log.
  /inviteTemplates:
    get:
      summary: List Invite Templates
      tags:
        - Invite Templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTemplateListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          name: Email Template v1
                          company:
                            name: XYZ Bank
                            logoUrl: https://xyzbank.co/logo.png
                          email:
                            sendEmail: true
                            senderName: XYZ Bank
                            replyAddress: replies@xyz.co
                            subject: >-
                              Please connect your work account to share your
                              data with us
                            body: >-
                              Hello ${firstName}! We are working with our
                              partner, Smile API, so you can easily share your
                              employment and income data to us as a requirement
                              for giving you service. It will be a quick process
                              and should take no more than a few seconds of your
                              time.
                          landingPage:
                            header: >-
                              Share your employment and income data with us at
                              ${companyName}
                            description: >-
                              We are working with our partner, Smile API, so you
                              can easily share your employment and income data
                              to us as a requirement for giving you service. It
                              will be a quick process and should take no more
                              than a few seconds of your time.
                            button: START NOW
                          successPage:
                            header: >-
                              Thank you for sharing your employment and income
                              data with us at ${companyName}
                            description: >-
                              The process was successful! Please wait for us to
                              get in touch!
                            button: Connect another account
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-invite-templates
      description: Get the list of invite templates.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
    post:
      summary: Create Invite Template
      operationId: create-invite-template
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTemplatePostResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      name: Email Template v1
                      company:
                        name: XYZ Bank
                        logoUrl: https://xyzbank.co/logo.png
                      email:
                        sendEmail: true
                        senderName: XYZ Bank
                        replyAddress: replies@xyz.co
                        subject: >-
                          Please connect your work account to share your data
                          with us
                        body: >-
                          Hello ${firstName}! We are working with our partner,
                          Smile API, so you can easily share your employment and
                          income data to us as a requirement for giving you
                          service. It will be a quick process and should take no
                          more than a few seconds of your time.
                      landingPage:
                        header: >-
                          Share your employment and income data with us at
                          {$companyName}
                        description: >-
                          We are working with our partner, Smile API, so you can
                          easily share your employment and income data to us as
                          a requirement for giving you service. It will be a
                          quick process and should take no more than a few
                          seconds of your time.
                        button: START NOW
                      successPage:
                        header: >-
                          Thank you for sharing your employment and income data
                          with us at ${companyName}
                        description: >-
                          The process was successful! Please wait for us to get
                          in touch!
                        button: Connect another account
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      description: Create an invite template.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteTemplatePostRequest'
            examples:
              Example:
                value:
                  name: Email Template v1
                  company:
                    name: XYZ Bank
                    logoUrl: https://xyzbank.co/logo.png
                  email:
                    sendEmail: true
                    senderName: XYZ Bank
                    replyAddress: replies@xyz.co
                    subject: >-
                      Please connect your work account to share your data with
                      us
                    body: >-
                      Hello {{firstName}}, We are working with our partner,
                      Smile API, so you can easily share your employment and
                      income data to us as a requirement for giving you service.
                      It will be a quick process and should take no more than a
                      few seconds of your time.
                  landingPage:
                    header: >-
                      We are working with our partner, Smile API, so you can
                      easily share your employment and income data to us as a
                      requirement for giving you service. It will be a quick
                      process and should take no more than a few seconds of your
                      time.
                    description: >-
                      Share your employment and income data with us at
                      {{company.name}}
                    button: START NOW
                  successPage:
                    header: >-
                      The process was successful! Please wait for us to get in
                      touch!
                    description: >-
                      Thank you for sharing your employment and income data with
                      us at {{company.name}}
                    button: Connect another account
        description: ''
      tags:
        - Invite Templates
  /inviteTemplates/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Invite Template
      tags:
        - Invite Templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTemplateGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      name: Email Template v1
                      company:
                        name: XYZ Bank
                        logoUrl: https://xyzbank.co/logo.png
                      email:
                        sendEmail: true
                        senderName: XYZ Bank
                        replyAddress: replies@xyz.co
                        subject: >-
                          Please connect your work account to share your data
                          with us
                        body: >-
                          Hello ${firstName}! We are working with our partner,
                          Smile API, so you can easily share your employment and
                          income data to us as a requirement for giving you
                          service. It will be a quick process and should take no
                          more than a few seconds of your time.
                      landingPage:
                        header: >-
                          Share your employment and income data with us at
                          ${companyName}
                        description: >-
                          We are working with our partner, Smile API, so you can
                          easily share your employment and income data to us as
                          a requirement for giving you service. It will be a
                          quick process and should take no more than a few
                          seconds of your time.
                        button: START NOW
                      successPage:
                        header: >-
                          Thank you for sharing your employment and income data
                          with us at ${companyName}
                        description: >-
                          The process was successful! Please wait for us to get
                          in touch!
                        button: Connect another account
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-invite-template
      description: Get invite template.
    put:
      summary: Update Invite Template
      operationId: update-invite-template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTemplateUpdateResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      name: Email Template v1
                      company:
                        name: XYZ Bank
                        logoUrl: https://xyzbank.co/logo.png
                      email:
                        sendEmail: true
                        senderName: XYZ Bank
                        replyAddress: replies@xyz.co
                        subject: >-
                          Please connect your work account to share your data
                          with us
                        body: >-
                          Hello {$firstName}! We are working with our partner,
                          Smile API, so you can easily share your employment and
                          income data to us as a requirement for giving you
                          service. It will be a quick process and should take no
                          more than a few seconds of your time.
                      landingPage:
                        header: >-
                          Share your employment and income data with us at
                          {$companyName}
                        description: >-
                          We are working with our partner, Smile API, so you can
                          easily share your employment and income data to us as
                          a requirement for giving you service. It will be a
                          quick process and should take no more than a few
                          seconds of your time.
                        button: START NOW
                      successPage:
                        header: >-
                          Thank you for sharing your employment and income data
                          with us at {$companyName}
                        description: >-
                          The process was successful! Please wait for us to get
                          in touch!
                        button: Connect another account
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      tags:
        - Invite Templates
      description: Update invite template.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteTemplateUpdateRequest'
            examples:
              Example:
                value:
                  name: Email Template v1
                  company:
                    name: XYZ Bank
                    logoUrl: https://xyzbank.co/logo.png
                  email:
                    sendEmail: true
                    senderName: XYZ Bank
                    replyAddress: replies@xyz.co
                    subject: >-
                      Please connect your work account to share your data with
                      us
                    body: >-
                      Hello {{firstName}}, We are working with our partner,
                      Smile API, so you can easily share your employment and
                      income data to us as a requirement for granting you a
                      loan. It will be a quick process and should take no more
                      than a few minutes of your time.
                  landingPage:
                    header: >-
                      We are working with our partner, Smile API, so you can
                      easily share your employment and income data to us as a
                      requirement for granting you a loan. It will be a quick
                      process and should take no more than a few minutes of your
                      time.
                    description: >-
                      Share your employment and income data with us at
                      {{company.name}}
                    button: START NOW
                  successPage:
                    header: >-
                      The process was successful! Please wait for us to get in
                      touch!
                    description: >-
                      Thank you for sharing your employment and income data with
                      us at {{company.name}}
                    button: Connect another account
        description: ''
    delete:
      summary: Delete Invite Template
      operationId: delete-invite-template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTemplateDeleteResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      tags:
        - Invite Templates
      description: Delete invite template.
  /links:
    parameters: []
    get:
      operationId: list-links
      description: List links from data sources.
      summary: List links
      tags:
        - Links
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/sourceId'
      responses:
        '200':
          description: List Links Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: link-123abc456def789abc123def456abc78
                          startDate: '2023-01-05T10:30:11Z'
                          endDate: '2023-07-05T10:30:11Z'
                          records:
                            - count: 2
                              linkedAt:
                                - '2023-04-05T10:30:11Z'
                                - '2023-07-01T10:30:11Z'
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-123abc456def789abc123def456abc78
                            sourceType: ACCOUNT
                            userId: tenantId-123abc456def789abc123def456abc78
                            providerId: abccorp
  /links/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Link
      operationId: get-link
      description: Get the Account's link result by ID.
      tags:
        - Links
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: link-123abc456def789abc123def456abc78
                      startDate: '2023-01-05T10:30:11Z'
                      endDate: '2023-07-05T10:30:11Z'
                      records:
                        - count: 2
                          linkedAt:
                            - '2023-04-05T10:30:11Z'
                            - '2023-07-01T10:30:11Z'
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-123abc456def789abc123def456abc78
                        sourceType: ACCOUNT
                        userId: tenantId-123abc456def789abc123def456abc78
                        providerId: abccorp
  /archives:
    get:
      summary: List Archives
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: u-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          providerId: user-provided
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          type: SOCIAL_SECURITY
                          state:
                            status: STARTED
                            errorCode: null
                            errorMessage: null
                            updatedAt: '2021-04-14T09:30:24Z'
                          rawFiles:
                            - id: f-17bbf36498de4d68a0d4f86c7b62f69f
                              createdAt: '2021-04-14T09:30:24Z'
                              name: Screen Shot 2021-04-14 at 5.30.24 PM
                              subType: PERSONAL_INFORMATION
                              size: 3048
                              format: PNG
                              url: >-
                                https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                          classification: null
                          analysis: null
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-archives
      description: Get the user's archives.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - schema:
            $ref: '#/components/schemas/FileTypeEnum'
          in: query
          name: fileType
          description: Filter by archive date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-01'
          in: query
          name: startDate
          description: Filter by archive date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-21'
          in: query
          name: endDate
          description: Filter by archive date, end of date range (YYYY-MM-DD)
      tags:
        - Archives
      x-internal: true
    post:
      summary: Create Archive
      description: Create an archive.
      operationId: create-archive
      tags:
        - Archives
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveCreateRequest'
            examples:
              Example:
                value:
                  userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                  fileType: PAYSLIP
                  rawFiles:
                    - fileExtensionType: PDF
                      fileSubtype: PAYSLIP
                      fileName: 2021-04-14-17bbf36498de4d68a0d4f86c7b62f69f.pdf
                      fileContent: base64 encoded file content
              Example2:
                value:
                  userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                  fileType: null
                  rawFiles:
                    - fileExtensionType: PDF
                      fileSubtype: null
                      fileName: 2021-04-14-17bbf36498de4d68a0d4f86c7b62f69f.pdf
                      fileContent: base64 encoded file content
        description: request parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveCreateResponse'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
  /archives/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Archive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: u-17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      providerId: user-provided
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      type: SOCIAL_SECURITY
                      state:
                        status: STARTED
                        errorCode: null
                        errorMessage: null
                        updatedAt: '2021-04-14T09:30:24Z'
                      rawFiles:
                        - id: f-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          name: Screen Shot 2021-04-14 at 5.30.24 PM
                          subType: PERSONAL_INFORMATION
                          size: 3048
                          format: PNG
                          url: >-
                            https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                      classification: null
                      analysis: null
                Example2:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: u-17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      providerId: user-provided
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      type: PAYSLIP
                      state:
                        status: ANALYZED
                        errorCode: null
                        errorMessage: null
                        updatedAt: '2021-04-14T09:30:24Z'
                      rawFiles:
                        - id: f-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          name: Screen Shot 2021-04-14 at 5.30.24 PM
                          subType: PAYSLIP
                          size: 3048
                          format: PNG
                          url: >-
                            https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                      classification: null
                      analysis:
                        startDate: '2023-04-16'
                        endDate: '2023-04-30'
                        payDate: '2023-04-30'
                        employeeName: John Doe
                        currency: PHP
                        grossAmount: 10000
                        netAmount: 9000
                        employerName: Acme Inc.
                        ssNumber: '1234567890'
                        philHealthNumber: '123456789012'
                        taxNumber: '123456789'
                        pagIbigNumber: '123456789012'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-archive
      description: Get a user's archive by ID.
      tags:
        - Archives
      x-internal: true
  /archives/classify:
    post:
      summary: Classify Archive
      description: Classify an archive.
      operationId: create-and-classify-archive
      tags:
        - Archives
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveClassifyRequest'
            examples:
              Example:
                value:
                  userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                  rawFiles:
                    - fileExtensionType: PDF
                      fileSubtype: null
                      fileName: 2021-04-14-17bbf36498de4d68a0d4f86c7b62f69f.pdf
                      fileContent: base64 encoded file content
        description: request parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveClassifyResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: u-17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      providerId: user-provided
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      type: SOCIAL_SECURITY
                      state:
                        status: STARTED
                        errorCode: null
                        errorMessage: null
                        updatedAt: '2021-04-14T09:30:24Z'
                      rawFiles:
                        - id: f-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          name: Screen Shot 2021-04-14 at 5.30.24 PM
                          subType: PERSONAL_INFORMATION
                          size: 3048
                          format: PNG
                          url: >-
                            https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
                      classification:
                        fileType: PAYSLIP
                      analysis: null
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
  /archives/-/payslips/uploadRawFile:
    post:
      summary: Upload payslip file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchivePayslipRawFileUploadRequest'
        description: request parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: u-17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      providerId: user-provided
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      type: PAYSLIP
                      state:
                        status: STARTED
                        errorCode: null
                        errorMessage: null
                        updatedAt: '2021-04-14T09:30:24Z'
                      rawFiles:
                        - id: f-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          name: Screen Shot 2021-04-14 at 5.30.24 PM
                          subType: PAYSLIP
                          size: 3048
                          format: PNG
                          url: >-
                            https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
      operationId: upload-payslip-file
      description: Upload payslip file.
      tags:
        - Archives
      x-internal: true
  /archives/-/payslips/queryPrediction:
    get:
      summary: Get the payslip prediction data
      parameters:
        - schema:
            type: string
          in: query
          name: archiveId
          required: true
          description: Archive ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivePayslipPredictionQueryResponse'
      operationId: get-archive-payslip-data
      description: Get Archive payslip data.
      tags:
        - Archives
      x-internal: true
  /archives/-/payslips/listPredictions:
    get:
      summary: list the payslip predictions
      tags:
        - Archives
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivePayslipPredictionsListResponse'
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-archive-payslip-predictions
      description: List Archive payslip predictions.
  /archives/-/payslips/sendManualResult:
    post:
      summary: Send payslip manual check result
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchivePayslipManualResultSendRequest'
        description: request parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
      operationId: send-payslip-manual-result
      description: send payslip manual check result.
      tags:
        - Archives
      x-internal: true
  /uploads:
    get:
      summary: List Uploads
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: u-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          providerId: user-provided
                          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                          type: SOCIAL_SECURITY
                          state:
                            status: STARTED
                            errorCode: null
                            errorMessage: null
                            updatedAt: '2021-04-14T09:30:24Z'
                          rawFiles:
                            - id: f-17bbf36498de4d68a0d4f86c7b62f69f
                              createdAt: '2021-04-14T09:30:24Z'
                              name: Screen Shot 2021-04-14 at 5.30.24 PM
                              subType: PERSONAL_INFORMATION
                              size: 3048
                              format: PNG
                              url: >-
                                https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-uploads
      description: Get the user's uploads (deprecated).
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - schema:
            type: string
            format: date
            example: '2021-04-01'
          in: query
          name: startDate
          description: Filter by upload date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-21'
          in: query
          name: endDate
          description: Filter by upload date, end of date range (YYYY-MM-DD)
      tags:
        - Uploads
      deprecated: true
      x-internal: false
  /uploads/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Upload
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: u-17bbf36498de4d68a0d4f86c7b62f69f
                      createdAt: '2021-04-14T09:30:24Z'
                      providerId: user-provided
                      userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                      type: SOCIAL_SECURITY
                      state:
                        status: STARTED
                        errorCode: null
                        errorMessage: null
                        updatedAt: '2021-04-14T09:30:24Z'
                      rawFiles:
                        - id: f-17bbf36498de4d68a0d4f86c7b62f69f
                          createdAt: '2021-04-14T09:30:24Z'
                          name: Screen Shot 2021-04-14 at 5.30.24 PM
                          subType: PERSONAL_INFORMATION
                          size: 3048
                          format: PNG
                          url: >-
                            https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-upload
      description: Get a user's upload by ID (deprecated).
      tags:
        - Uploads
      deprecated: true
      x-internal: false
  /fileTypes:
    get:
      summary: List File Types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTypeListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - logoUrl: >-
                            https://cdn.smileapi.io/image/provider-logo/v20210813064500/sss.png
                          type: SOCIAL_SECURITY
                          typeLabel: SSS Records
                          active: true
                          enabled: true
                          ocr: true
                          supported:
                            - IDENTITIES
                            - DOCUMENTS
                            - EMPLOYMENTS
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-file-types
      description: Get the available file types for uploads.
      tags:
        - File Types
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/size'
        - schema:
            type: string
          in: query
          name: type
          description: Filter results to certain type of file types.
        - schema:
            type: boolean
          in: query
          name: active
          description: Filter results to active or inactive file types.
        - schema:
            type: boolean
          in: query
          name: enabled
          description: Filter results to enabled or disabled file types.
        - schema:
            type: boolean
          in: query
          name: ocr
          description: Filter results to file types that support OCR.
  /alpha/verifications:
    get:
      summary: List Verifications
      tags:
        - Verification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: null
                      items:
                        - id: 5b79399a-6852-4234-bb0e-ad472648282d
                          createdAt: '2021-04-14T09:30:24Z'
                          updatedAt: '2021-04-14T09:30:24Z'
                          status: PROCESSING
                          errorMessage: null
                          requestMeta:
                            firstName: George
                            lastName: Smith
                            middleName: null
                            fullName: George Smith
                            additionalData:
                              ids:
                                - idType: sss_ph
                                  idSubType: null
                                  idNumber: 1234567890
                            consent:
                              type: Terms And Conditions
                              version: 1
                              consentedWith: I aggree to the terms and conditions.
                              consentedAt: '2021-04-14T09:30:24Z'
                              consentTemplateId: ct-5b79399a68524234bb0ead472648282d
                          result: null
                        - id: 5b79399a-6853-4234-bb0e-ad472648282d
                          createdAt: '2021-04-14T09:30:24Z'
                          updatedAt: '2021-04-14T09:30:24Z'
                          status: COMPLETED
                          errorMessage: null
                          requestMeta:
                            firstName: George2
                            lastName: Smith
                            middleName: null
                            fullName: George2 Smith
                            additionalData:
                              ids:
                                - idType: sss_ph
                                  idSubType: null
                                  idNumber: 1234567890
                              dob: '1990-01-01'
                              gender: Female
                              address: null
                              employer: null
                              employmentStatus: null
                              email: someone@gmail.com
                              phone: 639123456789
                            consent:
                              type: Terms And Conditions
                              version: 1
                              consentedWith: I aggree to the terms and conditions.
                              consentedAt: '2021-04-14T09:30:24Z'
                              consentTemplateId: ct-5b79399a68524234bb0ead472648282d
                          result:
                            finalMatches: true
                            names:
                              firstNameMatches: true
                              lastNameMatches: true
                              middleNameMatches: null
                              fullNameMatches: true
                            additionalData:
                              ids:
                                - idType: sss_ph
                                  idSubType: null
                                  idNumber: 1234567890
                                  matches: true
                              dobMatches: true
                              genderMatches: false
                              addressMatches: null
                              phoneMatches:
                                value: 639123456789
                                matches: true
                                disposable: false
                                deliverable: null
                                active: true
                                provider: Smart Communications
                                freeProvider: false
                              emailMatches:
                                value: someone@gmail.com
                                matches: true
                                disposable: false
                                deliverable: true
                                active: true
                                provider: Google LLC
                                freeProvider: true
      operationId: list-verifications
      description: List verificatins.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - name: verificationId
          in: query
          required: false
          schema:
            type: string
          description: Filter to those associated with a particular verification ID.
        - name: finalMatches
          in: query
          required: false
          schema:
            type: boolean
          description: Filter to those associated with verification final match result.
        - schema:
            type: string
            format: date
          in: query
          name: startDate
          description: Filter by create date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: Filter by create date, end of date range (YYYY-MM-DD)
    post:
      summary: Request Verification
      tags:
        - Verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCreateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationCreateResponse'
      operationId: create-verification
      description: sumbit required parameters to request verification.
  /alpha/verifications/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Verification
      tags:
        - Verification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 5b79399a-6853-4234-bb0e-ad472648282d
                      createdAt: '2021-04-14T09:30:24Z'
                      updatedAt: '2021-04-14T09:30:24Z'
                      status: COMPLETED
                      errorMessage: null
                      requestMeta:
                        firstName: George2
                        lastName: Smith
                        middleName: null
                        fullName: George2 Smith
                        additionalData:
                          ids:
                            - idType: sss_ph
                              idSubType: null
                              idNumber: 1234567890
                          dob: '1990-01-01'
                          gender: Female
                          address: null
                          employer: null
                          employmentStatus: null
                          email: someone@gmail.com
                          phone: 639123456789
                        consent:
                          type: Terms And Conditions
                          version: 1
                          consentedWith: I aggree to the terms and conditions.
                          consentedAt: '2021-04-14T09:30:24Z'
                          consentTemplateId: ct-5b79399a68524234bb0ead472648282d
                      result:
                        finalMatches: true
                        names:
                          firstNameMatches: true
                          lastNameMatches: true
                          middleNameMatches: null
                          fullNameMatches: true
                        additionalData:
                          ids:
                            - idType: sss_ph
                              idSubType: null
                              idNumber: 1234567890
                              matches: true
                          dobMatches: true
                          genderMatches: false
                          addressMatches: null
                          phoneMatches:
                            value: 639123456789
                            matches: true
                            disposable: false
                            deliverable: null
                            active: true
                            provider: Smart Communications
                            freeProvider: false
                          emailMatches:
                            value: someone@gmail.com
                            matches: true
                            disposable: false
                            deliverable: true
                            active: true
                            provider: Google LLC
                            freeProvider: true
      operationId: get-verification
      description: Get verification by ID.
  /alpha/signals:
    post:
      summary: Create Signal
      operationId: create-signal
      tags:
        - Signals
      x-internal: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignalPostResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b72199a-6852-4234-bb0e-ad472648282d
                    data:
                      id: signal-e35d521ef8f147c4aa01b7c1af85aaf7
                      createdAt: '2021-04-14T09:30:24Z'
                      status: COMPLETED
                      errorCode: ''
                      errorMessage: ''
                      requestMeta:
                        phone: '+639178902345'
                        consent:
                          type: Terms And Conditions
                          version: 1
                          consentedWith: I agree to the terms and conditions.
                          consentedAt: '2021-04-14T09:30:24Z'
                          consentTemplateId: ct-5b79399a68524234bb0ead472648282d
                      result:
                        events_arbitrary_day30: 0
                        events_preloan_day30: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalPostRequest'
    get:
      summary: List Signals
      tags:
        - Signals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignalListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: null
                      items:
                        - signal:
                            id: signal-e35d521ef8f147c4aa01b7c1af85aaf7
                            createdAt: '2021-04-14T09:30:24Z'
                            status: COMPLETED
                            errorCode: ''
                            errorMessage: ''
                            requestMeta:
                              phone: '+639178902345'
                              consent:
                                type: Terms And Conditions
                                version: 1
                                consentedWith: I agree to the terms and conditions.
                                consentedAt: '2021-04-14T09:30:24Z'
                                consentTemplateId: ct-5b79399a68524234bb0ead472648282d
                            result:
                              events_arbitrary_day30: 0
                              events_preloan_day30: 0
      operationId: list-Signals
      description: List all Signal Requests.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - name: signalId
          in: query
          required: false
          schema:
            type: string
          description: Filter Signal Requests by a specific Signal Request ID.
        - name: phone
          in: query
          required: false
          schema:
            type: string
          description: Filter Signal Requests by a specific mobile phone.
        - schema:
            type: string
            format: date
          in: query
          name: startDate
          description: >-
            Filter Signal Requests by request date, start of date range
            (YYYY-MM-DD)
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: >-
            Filter Signal Requests by request date, end of date range
            (YYYY-MM-DD)
  /alpha/signals/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get signal by unique ID
      operationId: get-signal
      x-internal: true
      tags:
        - Signals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignalGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b72199a-6852-4234-bb0e-ad472648282d
                    data:
                      id: signal-e35d521ef8f147c4aa01b7c1af85aaf7
                      createdAt: '2021-04-14T09:30:24Z'
                      status: COMPLETED
                      errorCode: ''
                      errorMessage: ''
                      requestMeta:
                        phone: '+639178902345'
                        consent:
                          type: Terms And Conditions
                          version: 1
                          consentedWith: I agree to the terms and conditions.
                          consentedAt: '2021-04-14T09:30:24Z'
                          consentTemplateId: ct-5b79399a68524234bb0ead472648282d
                      result:
                        events_arbitrary_day30: 0
                        events_preloan_day30: 0
  /identities:
    get:
      summary: List Identities
      tags:
        - Identities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: i-17bbf36498de4d68a0d4f86c7b62f69f
                          fullName: George Cimafranca Palomero, Jr
                          firstName: George
                          middleName: Cimafranca
                          lastName: Palomero
                          suffix: Jr
                          gender: Male
                          dob: '1970-08-24'
                          maritalStatus: Married
                          countryResidence: PH
                          citizenship: Citizen
                          photoUrl: >-
                            https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
                          referenceId: george
                          profileUrl: https://upwork.com/profiles/george.jpg
                          emails:
                            - address: gpalomero1234@yahoo.com
                              type: Primary
                          phones:
                            - number: '+639175551234'
                              type: Mobile
                          socialProfiles:
                            - socialUrl: https://www.facebook.com/gpalomero
                              type: Facebook
                          addresses:
                            - fullAddress: >-
                                12 Maybunga St, Barangay Paraiso, Pasig City,
                                NCR, 1600, PH
                              line1: 12 Maybunga St
                              line2: Barangay Paraiso
                              city: Pasig City
                              region: NCR
                              zip: '1600'
                              country: PH
                              latitude: '14.573454'
                              longitude: '121.085042'
                              type: Primary
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: i-24bbf36498ac4d26a0d4f86c7b62f83z
                          fullName: Ryan Joseph Peterson Chua Ng
                          firstName: Ryan Joseph Peterson
                          middleName: Chua
                          lastName: Ng
                          suffix: null
                          gender: Male
                          dob: '1995-06-24'
                          maritalStatus: Single
                          countryResidence: null
                          citizenship: Citizen
                          photoUrl: >-
                            https://cdn.smileapi.io/image/avatar/v20211115191600/ryan.jpg
                          referenceId: ~02c0bf6ae6a581ee2b
                          profileUrl: >-
                            https://www.upwork.com/freelancers/~02c0bf6ae6a581ee2b
                          emails:
                            - address: ryan1234@gmail.com
                              type: Primary
                          phones:
                            - number: '+639559994321'
                              type: Mobile
                            - number: '+63289053000'
                              type: Fixed
                          socialProfiles:
                            - socialUrl: https://www.facebook.com/ryanpetersonng
                              type: Facebook
                            - socialUrl: https://www.twitter.com/xklxyz
                              type: Twitter
                          addresses:
                            - fullAddress: 24 Eagle St, Binondo, Manila, NCR, 1008, PH
                              line1: 24 Eagle St
                              line2: Binondo
                              city: Manila
                              region: NCR
                              zip: '1008'
                              country: PH
                              latitude: '14.600454'
                              longitude: '120.969042'
                              type: Primary
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: i-48ace87698bd6e67a0d4f86c7b62h76c
                          fullName: Christina Tan
                          firstName: Christina
                          middleName: dela Cruz
                          lastName: Tan
                          suffix: null
                          gender: Female
                          dob: '1997-02-12'
                          maritalStatus: Single
                          countryResidence: null
                          citizenship: Citizen
                          photoUrl: >-
                            https://cdn.smileapi.io/image/avatar/v20211115191600/christina.jpg
                          referenceId: null
                          profileUrl: null
                          emails:
                            - address: christina4321@yahoo.com
                              type: Primary
                          phones:
                            - number: '+639559996789'
                              type: Mobile
                            - number: '+639226789888'
                              type: Mobile
                          socialProfiles: []
                          addresses:
                            - fullAddress: null
                              line1: null
                              line2: null
                              city: null
                              region: null
                              zip: null
                              country: PH
                              latitude: null
                              longitude: null
                              type: Primary
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-identities
      description: Get a user's identity profiles from employment data sources.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/sourceId'
    parameters: []
  /identities/{id}:
    get:
      summary: Get Identity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: i-17bbf36498de4d68a0d4f86c7b62f69f
                      fullName: George Cimafranca Palomero, Jr
                      firstName: George
                      middleName: Cimafranca
                      lastName: Palomero
                      suffix: Jr
                      gender: Male
                      dob: '1970-08-24'
                      maritalStatus: Married
                      countryResidence: PH
                      citizenship: Citizen
                      photoUrl: >-
                        https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
                      referenceId: george
                      profileUrl: https://upwork.com/profiles/george.jpg
                      emails:
                        - address: gpalomero1234@yahoo.com
                          type: Primary
                      phones:
                        - number: '+639175551234'
                          type: Mobile
                      socialProfiles:
                        - socialUrl: https://www.facebook.com/gpalomero
                          type: Facebook
                      addresses:
                        - fullAddress: >-
                            12 Maybunga St, Barangay Paraiso, Pasig City, NCR,
                            1600, PH
                          line1: 12 Maybunga St
                          line2: Barangay Paraiso
                          city: Pasig City
                          region: NCR
                          zip: '1600'
                          country: PH
                          latitude: '14.573454'
                          longitude: '121.085042'
                          type: Primary
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: ACCOUNT
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-identity
      description: Get the user's identity profile by ID.
      tags:
        - Identities
      parameters: []
    parameters:
      - $ref: '#/components/parameters/id'
  /ratings:
    get:
      summary: List Ratings
      tags:
        - Ratings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: r-17bbf36498de4d68a0d4f86c7b62f69f
                          currentRating: 90
                          maxRating: 100
                          calculatedPercentage: 90
                          reviewsReceived: 12
                          likesReceived: 8
                          jobsCompleted: 12
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-ratings
      description: Get the user's ratings from employment data sources.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/sourceId'
  /ratings/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Rating
      tags:
        - Ratings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: r-17bbf36498de4d68a0d4f86c7b62f69f
                      currentRating: 90
                      maxRating: 100
                      calculatedPercentage: 90
                      reviewsReceived: 12
                      likesReceived: 8
                      jobsCompleted: 12
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: ACCOUNT
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-rating
      description: Get a user's ratings by ID.
  /documents:
    get:
      summary: List Documents
      tags:
        - Documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: d-17bbf36498de4d68a0d4f86c7b62f69f
                          name: >-
                            Facebook Social Media Marketing Professional
                            Certificate
                          docId: ABCD123456
                          issueDate: '2007-08-24'
                          expiryDate: '2010-08-24'
                          documentType: IDENTIFICATION
                          status: VALID
                          fileUrl: >-
                            https://images.credly.com/size/680x680/images/c4a900b7-8d1b-4e8f-a572-347985eeaa5c/Coursera_Badge__1_.png
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: grab
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-documents
      description: Get the user's documents from employment data sources.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/sourceId'
  /documents/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Document
      tags:
        - Documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: d-17bbf36498de4d68a0d4f86c7b62f69f
                      name: Facebook Social Media Marketing Professional Certificate
                      docId: ABCD123456
                      issueDate: '2007-08-24'
                      expiryDate: '2010-08-24'
                      fileUrl: >-
                        https://images.credly.com/size/680x680/images/c4a900b7-8d1b-4e8f-a572-347985eeaa5c/Coursera_Badge__1_.png
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: ACCOUNT
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: grab
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-document
      description: Get a user's document by ID.
  /employments:
    get:
      summary: List Employments
      tags:
        - Employments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: e-17bbf36498de4d68a0d4f86c7b62f69f
                          name: Digital Marketing
                          description: >-
                            Gathering and reporting relevant data, maintaining
                            specific reports and dashboards, using platforms and
                            programs to address marketing requirements, and
                            updating specific marketing materials.
                          jobTitle: Digital Marketing Assistant
                          department: Marketing
                          employeeNumber: EMP-123456
                          employer: ABC Corporation
                          status: Permanent
                          startDate: '2016-02-24'
                          endDate: '2019-08-24'
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: UPLOAD
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: abccorp
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          name: Executive Assistant
                          description: >-
                            Contribute to the efficiency of the business by
                            providing personalized and timely support to
                            executive members particularly the CEO.
                            Responsibilities include managing calendars, making
                            travel arrangements and preparing expense reports.
                          jobTitle: EA to the CEO
                          department: Administation
                          employeeNumber: CDE-98765
                          employer: CDE Corporation
                          status: Permanent
                          startDate: '2015-06-14'
                          endDate: '2016-01-30'
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: UPLOAD
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-employments
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - schema:
            type: string
            format: date
          in: query
          description: Filter by employment date, start of date range (YYYY-MM-DD)
          name: startDate
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: Filter by employment date, end of date range (YYYY-MM-DD)
        - $ref: '#/components/parameters/sourceId'
      description: Get the user's previous employments.
    parameters: []
  /employments/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Employment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: e-17bbf36498de4d68a0d4f86c7b62f69f
                      name: Digital Marketing
                      description: >-
                        Gathering and reporting relevant data, maintaining
                        specific reports and dashboards, using platforms and
                        programs to address marketing requirements, and updating
                        specific marketing materials.
                      jobTitle: Digital Marketing Assistant
                      department: Marketing
                      employeeNumber: EMP-123456
                      employer: ABC Corporation
                      status: Permanent
                      startDate: '2016-02-24'
                      endDate: '2019-08-24'
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: UPLOAD
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-employment
      tags:
        - Employments
      description: Get a user's employment by ID.
  /incomes:
    get:
      summary: List Incomes
      tags:
        - Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: inc-17bbf36498de4d68a0d4f86c7b62f69f
                          workItem: null
                          employer: ABC Corporation
                          startDate: '2021-06-16'
                          endDate: '2021-06-30'
                          paymentMethod: Bank
                          currency: PHP
                          frequency: Monthly
                          baseAmount: 8500
                          grossAmount: 10000
                          netAmount: 7820.25
                          metadata:
                            createdAt: '2021-06-30T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: UPLOAD
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: abccorp
                        - id: inc-18adf56798de4d68a9f3g34c7b62f32e
                          workItem: null
                          employer: ABC Corporation
                          startDate: '2021-06-01'
                          endDate: '2021-06-15'
                          paymentMethod: Bank
                          currency: PHP
                          frequency: Monthly
                          baseAmount: 8500
                          grossAmount: 10000
                          netAmount: 7820.25
                          metadata:
                            createdAt: '2021-06-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: UPLOAD
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-incomes
      description: Get the user's incomes from employment data sources.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - schema:
            type: string
            format: date
          in: query
          name: startDate
          description: Filter by income date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: Filter by income date, end of date range (YYYY-MM-DD)
        - $ref: '#/components/parameters/sourceId'
  /incomes/{id}:
    get:
      summary: Get Income
      tags:
        - Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: inc-17bbf36498de4d68a0d4f86c7b62f69f
                      workItem: null
                      employer: ABC Corporation
                      startDate: '2021-06-01'
                      endDate: '2021-06-15'
                      paymentMethod: Cash
                      currency: PHP
                      frequency: Monthly
                      baseAmount: 8500
                      grossAmount: 10000
                      netAmount: 7820.25
                      metadata:
                        createdAt: '2021-06-14T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: UPLOAD
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-income
      description: Get the user's income by ID.
      parameters: []
    parameters:
      - $ref: '#/components/parameters/id'
  /contributions:
    get:
      summary: List Contributions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: 17bbf36498de4d68a0d4f86c7b62f69f
                          date: '2021-04-30'
                          currency: PHP
                          amount: 1375
                          referenceId: PA9634415
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: sss-ph
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-contributions
      description: >-
        Get the user's social security contributions from employment data
        sources.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/sourceId'
        - schema:
            type: string
            format: date
          in: query
          name: startDate
          description: Filter by contribution date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: Filter by contribution date, end of date range (YYYY-MM-DD)
      tags:
        - Contributions
  /contributions/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Contribution
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: 17bbf36498de4d68a0d4f86c7b62f69f
                      date: '2021-04-30'
                      currency: PHP
                      amount: 1375
                      referenceId: PA9634415
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: ACCOUNT
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: sss-ph
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-contribution
      description: Get the user's contribution by ID.
      tags:
        - Contributions
  /liabilities:
    parameters: []
    get:
      operationId: list-liabilities
      description: List user liabilities from employment data sources.
      summary: List Liabilities
      tags:
        - Liabilities
      responses:
        '200':
          description: Liabilities Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: lia-123abc456def789abc123def456abc78
                          type: Salary Loan
                          referenceId: SL201601011234567
                          startDate: '2016-07-05'
                          firstAmortizationDate: '2016-09-01'
                          endDate: '2017-08-01'
                          amortizationFrequency: Monthly
                          currency: PHP
                          loanAmount: 16000
                          amortizationAmount: 738.32
                          outstandingBalance: 25599.76
                          nextPaymentAmount: 732.38
                          overduePaymentAmount: 0
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-123abc456def789abc123def456abc78
                            sourceType: ACCOUNT
                            userId: tenantId-123abc456def789abc123def456abc78
                            providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/sourceId'
        - schema:
            type: string
            format: date
            example: '2021-04-01'
          in: query
          name: startDate
          description: Filter by startDate, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-21'
          in: query
          name: endDate
          description: Filter by startDate, end of date range (YYYY-MM-DD)
  /liabilities/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Liability
      tags:
        - Liabilities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: lia-123abc456def789abc123def456abc78
                      type: Salary Loan
                      referenceId: SL201601011234567
                      startDate: '2016-07-05'
                      firstAmortizationDate: '2016-09-01'
                      endDate: '2017-08-01'
                      amortizationFrequency: Monthly
                      currency: PHP
                      loanAmount: 16000
                      amortizationAmount: 738.32
                      outstandingBalance: 25599.76
                      nextPaymentAmount: 732.38
                      overduePaymentAmount: 0
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-123abc456def789abc123def456abc78
                        sourceType: ACCOUNT
                        userId: tenantId-123abc456def789abc123def456abc78
                        providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-liabilities
      description: Get the user's liabilities by ID.
  /transactions:
    get:
      summary: List Transactions
      tags:
        - Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: t-17bbf36498de4d68a0d4f86c7b62f69f
                          date: '2021-04-21'
                          description: Payment for web design project Milestone 2
                          currency: PHP
                          amount: 10000
                          referenceId: string
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: t-17bbf36498de4d68a0d4f86c7b62f69f
                          date: '2021-03-21'
                          description: Payment for web design project Milestone 1
                          currency: PHP
                          amount: 10000
                          referenceId: string
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
                        - id: t-17bbf36498de4d68a0d4f86c7b62f69f
                          date: '2021-02-12'
                          description: Payment for Facebook Ad design
                          currency: PHP
                          amount: 5000
                          referenceId: string
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                            sourceType: ACCOUNT
                            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                            providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: list-transactions
      description: Get the user's transactions from employment data sources.
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/accountId'
        - schema:
            type: string
            format: date
            example: '2021-04-01'
          in: query
          name: startDate
          description: Filter by transaction date, start of date range (YYYY-MM-DD)
        - schema:
            type: string
            format: date
            example: '2021-04-21'
          in: query
          name: endDate
          description: Filter by transaction date, end of date range (YYYY-MM-DD)
        - $ref: '#/components/parameters/sourceId'
  /transactions/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Transaction
      tags:
        - Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: t-17bbf36498de4d68a0d4f86c7b62f69f
                      date: '2021-04-21'
                      description: Payment for web design project
                      currency: PHP
                      amount: 10000
                      referenceId: string
                      metadata:
                        createdAt: '2021-04-21T09:30:24Z'
                        sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
                        sourceType: ACCOUNT
                        userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
                        providerId: upwork
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-transaction
      description: Get a user's transaction by ID.
  /eincomes:
    parameters: []
    get:
      operationId: list-eincomes
      description: >-
        List users' estimated income from contribution- and transaction-based
        data sources. This data set contains derived income amounts from a
        variety of sources such as social security contributions, annual salary
        calculations, and computed earnings from transactions in various
        platforms.


        *Estimated Incomes is currently in alpha.*
      summary: List Estimated Incomes (early access)
      tags:
        - Estimated Incomes
      responses:
        '200':
          description: Estimated Incomes Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EincomeListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: einc-a-123abc456def789abc123def456abc78
                          month: 2021-06
                          currency: PHP
                          amount: 1000
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-123abc456def789abc123def456abc78
                            sourceType: ACCOUNT
                            userId: tenantId-123abc456def789abc123def456abc78
                            providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/sourceId'
        - schema:
            type: string
          in: query
          name: startMonth
          description: Filter by eincome date, start of date range (YYYY-MM)
        - schema:
            type: string
          in: query
          name: endMonth
          description: Filter by eincome date, end of date range (YYYY-MM)
  /eincomes/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Estimated Income
      tags:
        - Estimated Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EincomeGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: einc-17bbf36498de4d68a0d4f86c7b62f69f
                      month: 2021-06
                      currency: PHP
                      baseAmount: 1000
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-123abc456def789abc123def456abc78
                        sourceType: ACCOUNT
                        userId: tenantId-123abc456def789abc123def456abc78
                        providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-eincomes
      description: Get the user's estimated incomes by ID.
  /insights:
    parameters: []
    get:
      operationId: list-insights
      description: List insights from data sources.
      summary: List insights
      tags:
        - Insights
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/sourceId'
      responses:
        '200':
          description: List Insights Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightListResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      nextCursor: '1259723474'
                      items:
                        - id: insight-123abc456def789abc123def456abc78
                          cutoffTime: '2022-07-05T10:30:11Z'
                          features:
                            incomes_count: 100
                            incomes_first_income_month_range: 10
                          metadata:
                            createdAt: '2021-04-14T09:30:24Z'
                            sourceId: a-123abc456def789abc123def456abc78
                            sourceType: ACCOUNT
                            userId: tenantId-123abc456def789abc123def456abc78
                            providerId: abccorp
  /insights/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get Insight
      tags:
        - Insights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightGetResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      id: insight-123abc456def789abc123def456abc78
                      cutoffTime: '2022-07-05T10:30:11Z'
                      features:
                        incomes_count: 100
                        incomes_first_income_month_range: 10
                      metadata:
                        createdAt: '2021-04-14T09:30:24Z'
                        sourceId: a-123abc456def789abc123def456abc78
                        sourceType: ACCOUNT
                        userId: tenantId-123abc456def789abc123def456abc78
                        providerId: abccorp
        '400':
          $ref: '#/components/responses/Standard-Errors'
        '401':
          $ref: '#/components/responses/Standard-Errors'
        '403':
          $ref: '#/components/responses/Standard-Errors'
        '404':
          $ref: '#/components/responses/Standard-Errors'
        '415':
          $ref: '#/components/responses/Standard-Errors'
        '429':
          $ref: '#/components/responses/Standard-Errors'
        '500':
          $ref: '#/components/responses/Standard-Errors'
        '501':
          $ref: '#/components/responses/Standard-Errors'
        '503':
          $ref: '#/components/responses/Standard-Errors'
        '504':
          $ref: '#/components/responses/Standard-Errors'
      operationId: get-feature-insight
      description: Get the user's insight by ID.
  /profiles/-/identities/verify:
    post:
      tags:
        - User Data Verification
      operationId: verify-profile-identity
      summary: Verify identity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileIdentityVerifyRequest'
        description: request parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileIdentityVerifyResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      hit: true
                      message: matched
                      result:
                        nameMatchScore: 99
                        mobileMatched: true
                        emailMatched: false
                        genderMatched: true
                        maritalStatusMatched: true
                        dobMatched: true
  /profiles/-/identities/query:
    post:
      tags:
        - Profile Data
      operationId: query-profile-identity
      summary: Query Identity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileIdentityQueryRequest'
        description: request parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileIdentityQueryResponse'
              examples:
                Example:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      hit: true
                      message: matched
                      result:
                        nameMatchScore: 99
                        firstName: First Name
                        middleName: Middle Name
                        lastName: Last Name
                        suffix: Jr.
                        mobile: '+639561388888'
                        email: george@smilerandom.com
                        gender: Male
                        maritalStatus: Married
                        dob: '2000-01-21'
                        homeTelephone: '09474004836'
                        socialSecurityCoverageType: EMPLOYEE
                        socialSecurityCoverageDate: '2020-12-21'
                        totalEmploymentReportCount: 10
                        firstEmploymentReportDate: '2021-01-01'
                        latestEmploymentReportDate: '2021-10-01'
                        address:
                          line1: 12 Maybunga St
                          line2: Barangay Paraiso
                          city: Pasig City
                          region: NCR
                          zip: '1600'
                          country: PH
                Example2:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      hit: true
                      message: not match
                      result:
                        nameMatchScore: 20
                        firstName: null
                        middleName: null
                        lastName: null
                        suffix: null
                        mobile: null
                        email: null
                        gender: null
                        maritalStatus: null
                        dob: null
                        homeTelephone: null
                        socialSecurityCoverageType: null
                        socialSecurityCoverageDate: null
                        totalEmploymentReportCount: null
                        firstEmploymentReportDate: null
                        latestEmploymentReportDate: null
                        address: null
                Example3:
                  value:
                    code: OK
                    message: Success
                    requestId: 5b79399a-6852-4234-bb0e-ad472648282d
                    data:
                      hit: false
                      message: invaild identification number
                      result: null
components:
  schemas:
    UserCreatedEvent:
      title: 'Webhook: User Created Event'
      x-tags:
        - Users
      type: object
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: USER_CREATED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: The connected user ID.
      required:
        - id
        - version
        - type
        - createdAt
        - data
      description: Payload when a new user and link token is created
    AccountCreatedEvent:
      title: 'Webhook: Account Created Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ACCOUNT_CREATED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            providers:
              - string
      description: Payload when a user start to connect his/her work account.
    ContributionsUpdatedEvent:
      title: 'Webhook: Contributions Updated Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            count:
              type: integer
              description: the updated count of the records.
              default: 0
            updatedFrom:
              $ref: '#/components/schemas/RefDateTime'
            updatedTo:
              $ref: '#/components/schemas/RefDateTime'
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
          required:
            - userId
            - accountId
            - providers
            - count
            - updatedFrom
            - updatedTo
            - updatedAt
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: CONTRIBUTIONS_UPDATED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            providers:
              - string
            count: 10
            updatedFrom: '2021-04-14T09:30:24Z'
            updatedTo: '2023-04-14T09:30:24Z'
            updatedAt: '2021-04-14T09:30:24Z'
      description: Payload when contributions udpated.
    EincomesUpdatedEvent:
      title: 'Webhook: Estimated Incomes Updated Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            count:
              type: integer
              description: the updated count of the records.
              default: 0
            updatedFrom:
              $ref: '#/components/schemas/RefDateTime'
            updatedTo:
              $ref: '#/components/schemas/RefDateTime'
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
          required:
            - userId
            - accountId
            - providers
            - count
            - updatedFrom
            - updatedTo
            - updatedAt
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: EINCOMES_UPDATED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            providers:
              - string
            count: 10
            updatedFrom: '2021-04-14T09:30:24Z'
            updatedTo: '2023-04-14T09:30:24Z'
            updatedAt: '2021-04-14T09:30:24Z'
      description: Payload when account update estimated incomes.
    IncomesUpdatedEvent:
      title: 'Webhook: Incomes Updated Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            count:
              type: integer
              description: the updated count of the records.
              default: 0
            updatedFrom:
              $ref: '#/components/schemas/RefDateTime'
            updatedTo:
              $ref: '#/components/schemas/RefDateTime'
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
          required:
            - userId
            - accountId
            - providers
            - count
            - updatedFrom
            - updatedTo
            - updatedAt
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: INCOMES_UPDATED
          createdAt: '2023-04-14T09:30:24Z'
          data:
            userId: l17f7340df7fla-243275f71a5d4030bc2ceeaa1ecd5163
            accountId: a-5329a7fcc4f746ed9281196203f79927
            providers:
              - sss_ph
            count: 10
            updatedFrom: '2021-04-14T09:30:24Z'
            updatedTo: '2023-04-14T09:30:24Z'
            updatedAt: '2021-04-14T09:30:24Z'
      description: Payload when account update incomes.
    DocumentsUpdatedEvent:
      title: 'Webhook: Documents Updated Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            updatedIds:
              type: array
              items:
                type: string
            count:
              type: integer
              description: the updated count of the records.
              default: 0
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
          required:
            - userId
            - accountId
            - providers
            - count
            - updatedIds
            - updatedAt
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: DOCUMENTS_UPDATED
          createdAt: '2023-04-14T09:30:24Z'
          data:
            userId: l17f7340df7fla-243275f71a5d4030bc2ceeaa1ecd5163
            accountId: a-5329a7fcc4f746ed9281196203f79927
            providers:
              - sss_ph
            updatedIds:
              - d-b16d5acefbda46eab37ba441d6a2943b
            count: 1
            updatedAt: '2023-05-14T09:30:24Z'
      description: account update documents.
    EmploymentsUpdatedEvent:
      title: 'Webhook: Employments Updated Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            updatedIds:
              type: array
              items:
                type: string
            count:
              type: integer
              description: the updated count of the records.
              default: 0
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
          required:
            - userId
            - accountId
            - providers
            - updatedIds
            - count
            - updatedAt
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69g
          version: 1
          type: EMPLOYMENTS_UPDATED
          createdAt: '2023-05-03T09:30:24Z'
          data:
            userId: l17f7340df7fla-243275f71a5d4030bc2ceeaa1ecd5163
            accountId: a-5329a7fcc4f746ed9281196203f79927
            providers:
              - sss_ph
            updatedIds:
              - e-460f98489960421eac1c65d14b219a60
            count: 1
            updatedAt: '2023-05-14T09:30:00Z'
      description: when account update employments.
    LiabilitiesUpdatedEvent:
      title: 'Webhook: Liabilities Updated Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            updatedIds:
              type: array
              items:
                type: string
            count:
              type: integer
              description: the updated count of the records.
              default: 0
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
          required:
            - userId
            - accountId
            - providers
            - updatedIds
            - count
            - updatedAt
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: LIABILITIES_UPDATED
          createdAt: '2023-05-12T09:30:24Z'
          data:
            userId: l17f7340df7fla-243275f71a5d4030bc2ceeaa1ecd5163
            accountId: a-5329a7fcc4f746ed9281196203f79927
            providers:
              - sss_ph
            updatedIds:
              - lia-3ba4346eb48445609fc676bee06f2c64
            count: 1
            updatedAt: '2023-05-14T09:30:24Z'
      description: when account update liabilities.
    AccountConnectedEvent:
      title: 'Webhook: Account Connected Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            loginName:
              type: string
              description: the login name user used.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - loginName
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ACCOUNT_CONNECTED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            loginName: string
            providers:
              - string
      description: Payload when a user successfully connects his/her work account.
    AccountDisconnectedEvent:
      title: 'Webhook: Account Disconnected Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        example-1:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ACCOUNT_DISCONNECTED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            providers:
              - string
      description: >-
        Payload when a user disconnects or revokes the link to his/her work
        account.
    TaskStartedEvent:
      title: 'Webhook: Task Started Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The user ID.
            sourceId:
              type: string
              description: The source ID .
            sourceType:
              $ref: '#/components/schemas/RefSourceType'
            taskType:
              $ref: '#/components/schemas/TaskType'
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - sourceId
            - sourceType
            - taskType
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        example-1:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: TASK_STARTED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            sourceId: string
            sourceType: ACCOUNT
            taskType: LINK_ACCOUNT
            providers:
              - string
      description: Event indicates data sync of an account is started.
    TaskFinishedEvent:
      title: 'Webhook: Task Finished Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The user ID.
            sourceId:
              type: string
              description: The source ID .
            sourceType:
              $ref: '#/components/schemas/RefSourceType'
            taskType:
              $ref: '#/components/schemas/TaskType'
            status:
              type: string
              description: The task status.
              enum:
                - SUCCEEDED
                - FAILED
            errorCode:
              type: string
              description: If status = FAILURE, this field has value.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            datapoints:
              type: array
              items:
                $ref: '#/components/schemas/RefDatapoint'
            payload:
              $ref: '#/components/schemas/AllDatapointPayload'
          required:
            - userId
            - sourceId
            - sourceType
            - providers
            - datapoints
            - data
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        example-1:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: TASK_FINISHED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            sourceId: string
            sourceType: ACCOUNT
            taskType: LINK_ACCOUNT
            status: SUCCEEDED
            errorCode: null
            providers:
              - sss_ph
      description: Event indicates data sync of an account is finished.
    AccountSyncTaskFinishedEvent:
      title: 'Webhook: Account Sync Task Finished Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The user ID.
            sourceId:
              type: string
              description: The source ID .
            sourceType:
              $ref: '#/components/schemas/RefSourceType'
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
            status:
              type: string
              description: the status of the task
              enum:
                - SUCCEEDED
                - FAILED
            monitorStatus:
              $ref: '#/components/schemas/AccountMonitorStatus'
            datapoints:
              type: array
              items:
                $ref: '#/components/schemas/RefDatapoint'
            payload:
              $ref: '#/components/schemas/AllDatapointPayload'
          required:
            - userId
            - sourceId
            - sourceType
            - providers
            - status
            - monitorStatus
            - datapoints
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        example-1:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ACCOUNT_SYNC_TASK_FINISHED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            sourceId: string
            sourceType: ACCOUNT
            providers:
              - string
      description: Event indicates data sync of an account is finished.
    AccountFailedEvent:
      title: 'Webhook: Account Failed Event'
      x-tags:
        - Accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            loginName:
              type: string
              description: the login name user used.
            errorCode:
              type: string
              description: Account connection error code.
            errorMessage:
              type: string
              description: Account connection error message.
            providers:
              type: array
              items:
                type: string
          required:
            - userId
            - accountId
            - loginName
            - errorCode
            - errorMessage
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ACCOUNT_FAILED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            loginName: string
            errorCode: string
            errorMessage: string
            providers:
              - string
      description: Payload when the account linking process is unsuccessful.
    ArchiveStartedEvent:
      title: 'Webhook: Archive Started Event'
      x-tags:
        - Archives
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            archiveId:
              type: string
              description: The uploaded archive ID.
          required:
            - userId
            - archiveId
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ARCHIVE_STARTED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            archiveId: string
      description: >-
        Payload when a user has uploaded one or several files which becomes an
        "archive" in Smile.
    ArchiveAnalyzedEvent:
      title: 'Webhook: Archive Analyzed Event'
      x-tags:
        - Archives
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            archiveId:
              type: string
              description: The uploaded archive ID.
          required:
            - userId
            - archiveId
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ARCHIVE_ANALYZED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            archiveId: string
      description: >-
        Payload when an archive has been analyzed and converted into JSON data
        automatically via OCR.
    ArchiveRevokedEvent:
      title: 'Webhook: Archive Revoked Event'
      x-tags:
        - Archives
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            archiveId:
              type: string
              description: The uploaded archive ID.
          required:
            - userId
            - archiveId
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ARCHIVE_REVOKED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            archiveId: string
      description: Payload when user removes permission to access or use an archive.
    ArchiveFailedEvent:
      title: 'Webhook: Archive Failed Event'
      x-tags:
        - Archives
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            archiveId:
              type: string
              description: The uploaded archive ID.
            errorCode:
              type: string
              description: Archive error code.
            errorMessage:
              type: string
              description: Archive error message.
          required:
            - userId
            - archiveId
            - errorCode
            - errorMessage
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: ARCHIVE_FAILED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            archiveId: string
            errorCode: string
            errorMessage: string
      description: >-
        Payload when the the archive creation or analysis process is
        unsuccessful.
    InviteInvitedEvent:
      title: 'Webhook: Invite Invited Event'
      x-tags:
        - Invites
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The invite user ID.
            inviteId:
              type: string
              description: The invite ID.
          required:
            - userId
            - inviteId
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: INVITE_INVITED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            inviteId: string
      description: Payload when an invitation is sent out to a user successfully.
    InviteLinkedEvent:
      title: 'Webhook: Invite Linked Event'
      x-tags:
        - Invites
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The invite user ID.
            inviteId:
              type: string
              description: The invite ID.
          required:
            - userId
            - inviteId
      required:
        - id
        - version
        - type
        - createdAt
        - data
      description: >-
        Payload when the a user that has been sent an invitation is able to link
        his or her work account successfully.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: INVITE_LINKED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            inviteId: string
    IdentityAddedEvent:
      title: 'Webhook: Identity Added Event'
      x-tags:
        - Identities
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            identityId:
              type: string
              description: the new identity ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - identityId
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      description: Payload when identity data about a user is added.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: IDENTITY_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            identityId: string
            providers:
              - string
    RatingAddedEvent:
      title: 'Webhook: Rating Added Event'
      x-tags:
        - Ratings
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            ratingId:
              type: string
              description: The added rating ID.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - ratingId
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: RATING_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            ratingId: string
            providers:
              - string
      description: Payload when rating data about a user is added.
    WebhookCommonEvent:
      type: object
      required:
        - id
        - version
        - type
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
    LinkAddedEvent:
      allOf:
        - $ref: '#/components/schemas/WebhookCommonEvent'
        - type: object
          properties:
            data:
              type: object
              title: LinkAddedEventData
              properties:
                userId:
                  type: string
                  description: The connected user ID.
                accountId:
                  type: string
                  description: The connected account ID.
                id:
                  type: string
                  description: The added link ID.
                providers:
                  type: array
                  description: The providers this account associated to
                  items:
                    type: string
                    description: Provider id
              required:
                - userId
                - accountId
                - id
                - providers
      title: 'Webhook: Link Added Event'
      x-tags:
        - Links
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: LINK_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            ratingId: string
            providers:
              - string
      description: Payload when link data about a user is added.
    TransactionsAddedEvent:
      title: 'Webhook: Transactions Add Event'
      x-tags:
        - Transactions
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: The number of transactions added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: TRANSACTIONS_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
      description: Payload when transactions data shared by a user are added.
    DocumentsAddedEvent:
      title: 'Webhook: Documents Added Event'
      x-tags:
        - Documents
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: The number of documents added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: DOCUMENTS_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
      description: Payload when documents data shared by a user are added.
    EmploymentsAddedEvent:
      title: 'Webhook: Employments Added Event'
      x-tags:
        - Employments
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: The number of employments added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: EMPLOYMENTS_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
      description: Payload when employment data shared by a user are added.
    IncomesAddedEvent:
      title: 'Webhook: Incomes Added Event'
      x-tags:
        - Incomes
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: the number of incomes added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: INCOMES_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
      description: Payload when income data shared by a user are added.
    EincomeAddedEvent:
      title: 'Webhook: Estimated Income Added Event'
      x-tags:
        - Estimated Incomes
      type: object
      deprecated: true
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: the number of eincomes added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: einc-17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: EINCOMES_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
      description: Payload when estimated incomes data shared by a user are added.
    EincomesAddedEvent:
      title: 'Webhook: Estimated Income Added Event'
      x-tags:
        - Estimated Incomes
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: the number of eincomes added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: einc-17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: EINCOMES_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
      description: Payload when estimated incomes data shared by a user are added.
    InsightAddedEvent:
      title: 'Webhook: Insight Added Event'
      x-tags:
        - Features
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            id:
              type: string
              description: >-
                The id of the insight. It can be used to the API GET
                /insight/{id}
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - id
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: et-17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: INSIGHT_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            id: insight-17bbf36498de4d68a0d4f86c7b62f69f
            providers:
              - string
      description: Payload when features calculated after the user linked an account.
    LiabilitiesAddedEvent:
      title: 'Webhook: Liability Added Event'
      x-tags:
        - Liabilities
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: the number of eincomes added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        Example:
          id: lia-17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: LIABILITIES_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
      description: Payload when liabilities data shared by a user are added.
    ContributionsAddedEvent:
      title: 'Webhook: Contributions Added Event'
      x-tags:
        - Contributions
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        data:
          type: object
          properties:
            userId:
              type: string
              description: The connected user ID.
            accountId:
              type: string
              description: The connected account ID.
            count:
              type: number
              description: the number of contributions added.
            providers:
              type: array
              description: The providers this account associated to
              items:
                type: string
                description: Provider id
          required:
            - userId
            - accountId
            - count
            - providers
      required:
        - id
        - version
        - type
        - createdAt
        - data
      description: Payload when contributions data shared by a user are added.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: CONTRIBUTIONS_ADDED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            userId: string
            accountId: string
            count: 0
            providers:
              - string
    VerificationStartedEvent:
      title: 'Webhook: Verification Started Event'
      x-tags:
        - Verifications
      type: object
      required:
        - id
        - version
        - type
        - createdAt
        - data
      allOf:
        - $ref: '#/components/schemas/SmileCommonEvent'
        - type: object
          properties:
            data:
              type: object
              title: Verification Started Event Data
              required:
                - verificationId
              properties:
                verificationId:
                  type: string
      x-examples:
        example-1:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: VERIFICATION_STARTED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            verificationId: ver-8a62f69f08de4dd4f86c7b17bbf36496
      description: Event indicates verification process is started.
    VerificationCompletedEvent:
      title: 'Webhook: Verification Completed Event'
      x-tags:
        - Verifications
      type: object
      allOf:
        - $ref: '#/components/schemas/SmileCommonEvent'
        - type: object
          properties:
            data:
              type: object
              title: Verification Started Event Data
              required:
                - verificationId
                - resultCode
                - result
              properties:
                verificationId:
                  type: string
                resultCode:
                  type: string
                resultMessage:
                  type: string
                result:
                  $ref: '#/components/schemas/VerificationResult'
      required:
        - id
        - version
        - type
        - createdAt
        - data
      x-examples:
        example-1:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          version: 1
          type: VERIFICATION_STARTED
          createdAt: '2021-04-14T09:30:24Z'
          data:
            verificationId: ver-8a62f69f08de4dd4f86c7b17bbf36496
            resultCode: SUCCESS
            resultMessage: Verification completed successfully
            result:
              finalMatches: true
              names:
                firstNameMatches: true
                lastNameMatches: true
                middleNameMatches: null
                fullNameMatches: true
              additionalData:
                ids:
                  - idType: sss_ph
                    idSubType: null
                    idNumber: 1234567890
                    matches: true
                dobMatches: true
                genderMatches: false
                addressMatches: null
                phoneMatches:
                  value: 639123456789
                  matches: true
                  disposable: false
                  deliverable: null
                  active: true
                  provider: Smart Communications
                  freeProvider: false
                emailMatches:
                  value: someone@gmail.com
                  matches: true
                  disposable: false
                  deliverable: true
                  active: true
                  provider: Google LLC
                  freeProvider: true
      description: Event indicates verification process is completed.
    RefPrcProfession:
      type: string
      description: PROFESSIONAL REGULATION COMMISSION license profession
      enum:
        - AERONAUTICAL ENGINEER
        - AGRICULTURAL AND BIOSYSTEMS ENGINEER
        - AGRICULTURIST
        - AIR COND. & REFRIGERATION SPECIALIST
        - ARCHITECT
        - CERTIFIED MILL FOREMAN
        - CERTIFIED MINE FOREMAN
        - CERTIFIED PLANT MECHANIC
        - CERTIFIED PUBLIC ACCOUNTANT
        - CERTIFIED QUARRY FOREMAN
        - CHEMICAL ENGINEER
        - CHEMICAL TECHNICIAN
        - CHEMIST
        - CHINESE DRUGGIST
        - CIVIL ENGINEER
        - CRIMINOLOGIST
        - CUSTOMS BROKER
        - DENTAL HYGIENIST
        - DENTAL TECHNOLOGIST
        - DENTIST
        - ELECTRONICS ENGINEER
        - ELECTRONICS TECHNICIAN
        - ENVIRONMENTAL PLANNER
        - FISHERIES TECHNOLOGIST
        - FOREIGN MEDICAL PROFESSIONAL
        - FORESTER
        - GEODETIC ENGINEER
        - GEOLOGIC AIDE
        - GEOLOGIST
        - GUIDANCE COUNSELOR
        - INTERIOR DESIGNER
        - LANDSCAPE ARCHITECT
        - LIBRARIAN
        - MASTER PLUMBER
        - MECHANICAL ENGINEER
        - MEDICAL LABORATORY TECHNICIAN
        - MEDICAL TECHNOLOGIST
        - METALLURGICAL ENGINEER
        - METALLURGICAL PLANT FOREMAN
        - MIDWIFE
        - MIDWIFE (RA 2382)
        - MINING ENGINEER
        - NAVAL ARCHITECT
        - NURSE
        - NUTRITIONIST DIETITIAN
        - OCCUPATIONAL THERAPIST
        - OCCUPATIONAL THERAPY TECHNICIAN
        - OCULAR PHARMACOLOGIST
        - OPTOMETRIST
        - PHARMACIST
        - PHYSICAL THERAPIST
        - PHYSICIAN
        - PROFESSIONAL ELECTRICAL ENGINEER
        - PROFESSIONAL ELECTRONICS ENGINEER
        - PROFESSIONAL FOOD TECHNOLOGIST
        - PROFESSIONAL MECHANICAL ENGINEER
        - PROFESSIONAL TEACHER
        - PSYCHOLOGIST
        - PSYCHOMETRICIAN
        - RADIOLOGIC TECHNOLOGIST
        - REAL ESTATE APPRAISER
        - REAL ESTATE BROKER
        - REAL ESTATE CONSULTANT
        - REAL ESTATE SALESPERSONS
        - REGISTERED ELECTRICAL ENGINEER
        - REGISTERED MASTER ELECTRICIAN
        - RESPIRATORY THERAPIST
        - SANITARY ENGINEER
        - SOCIAL WORKER
        - SPEECH LANGUAGE PATHOLOGY
        - VETERINARIAN
        - X-RAY TECHNOLOGIST
    ObjectMetadataRefCode:
      type: string
      title: ObjectMetadataRefCode
      description: Request status code
      enum:
        - OK
        - CREATED
        - INVALID_CREDENTIALS
        - INVALID_PARAMETERS
        - INVALID_TOKEN
        - UNAUTHORIZED_ACCESS
        - MISSING_RESOURCE
        - REQUEST_LIMIT_EXCEEDED
        - SERVER_ERROR
        - UNSUPPORTED_METHOD
        - SERVER_UNAVAILABLE
        - TIME_LIMIT_EXCEEDED
      example: OK
      x-internal: false
    ObjectMetadataRefMessage:
      type: string
      title: ObjectMetadataRefMessage
      description: Message response to the request
      example: Success
      x-internal: false
    ObjectMetadataRefRequestID:
      type: string
      title: ObjectMetadataRefRequestID
      description: >-
        Unique ID that is added to the body of every response for easy
        traceability of the request in our logs.
      x-internal: false
      example: 5b79399a-6852-4234-bb0e-ad472648282d
    ObjectNextCursor:
      title: ObjectNextCursor
      type: string
      example: '1259723474'
      description: The next cursor value that can be used in the following query.
      x-internal: false
    RefDatapoint:
      type: string
      title: Datapoint
      enum:
        - IDENTITIES
        - TRANSACTIONS
        - RATINGS
        - EMPLOYMENTS
        - DOCUMENTS
        - INCOMES
        - CONTRIBUTIONS
        - EINCOMES
        - LIABILITIES
        - LINK
        - INSIGHTS
      description: Supported data points for this employment data provider
      example: IDENTITIES
      x-internal: true
    Provider:
      title: Provider
      type: object
      description: >-
        An employment data provider. A provider holds employment and income
        information of the user.
      x-tags:
        - Providers
      x-examples:
        Example:
          id: upwork
          name: Upwork
          longName: Upwork Global Inc.
          logoUrl: >-
            https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
          type: GIG
          typeLabel: Gig Platform
          subType: SERVICES
          subTypeLabel: Professional Services
          active: true
          enabled: true
          mfa: true
          accountConnection: true
          supported:
            - IDENTITIES
            - TRANSACTIONS
      properties:
        id:
          type: string
          description: Unique ID of the data provider
          example: upwork
        name:
          type: string
          description: Name of the data provider
          example: Upwork
        longName:
          type: string
          description: Full name or legal name of the data provider
        logoUrl:
          type: string
          description: URL to the data provider's logo
          example: >-
            https://cdn.smileapi.io/image/provider-logo/v20210813064500/upwork.png
        type:
          type: string
          enum:
            - GIG
            - GOVERNMENT
            - SYSTEM
            - EMPLOYER
            - CREDENTIAL
          description: Type of employment data provider
          example: GIG
        typeLabel:
          type: string
          description: Type label of employment data provider, like "Gig Platform"
          example: Gig Platform
          enum:
            - Gig Platform
            - Govt Service
            - System
            - Employer
            - Credential
        subType:
          type: string
          description: Subset of Type of employment data provider
          enum:
            - SERVICES
            - TRANSPORTATION
            - SHARING
            - TRADING
            - INSURANCE
            - HRIS
            - PAYROLL
            - WALLET
            - IDENTIFICATION
            - ISIC-A
            - ISIC-B
            - ISIC-C
            - ISIC-D
            - ISIC-E
            - ISIC-F
            - ISIC-G
            - ISIC-H
            - ISIC-I
            - ISIC-J
            - ISIC-K
            - ISIC-L
            - ISIC-M
            - ISIC-N
            - ISIC-O
            - ISIC-P
            - ISIC-Q
            - ISIC-R
            - ISIC-S
            - ISIC-T
            - ISIC-U
        subTypeLabel:
          type: string
          description: Subtype label of employment data provider, like "Services"
          example: Professional Services
          enum:
            - Professional Services
            - Transport and Delivery
            - Asset Sharing
            - Online Selling
            - Social Insurance
            - Payroll System
            - Tamper-proof document issuance & verification systems
            - Human Resource Information System
            - Identification
            - Agriculture, forestry and fishing
            - Mining and quarrying
            - Manufacturing
            - Electricity, gas, steam and air conditioning supply
            - >-
              Water supply; sewerage, waste management and remediation
              activities
            - Construction
            - >-
              Wholesale and retail trade; repair of motor vehicles and
              motorcycles
            - Transportation and storage
            - Accommodation and food service activities
            - Information and communication
            - Financial and insurance activities
            - Real estate activities
            - Professional, scientific and technical activities
            - Administrative and support service activities
            - Public administration and defense; compulsory social security
            - Education
            - Human health and social work activities
            - Arts, entertainment and recreation
            - Other service activities
            - >-
              Activities of households as employers; undifferentiated goods; and
              services-producing activities of households for own use
            - Activities of extraterritorial organization and bodies
        active:
          type: boolean
          description: Indicates whether data provider integration is working
        enabled:
          type: boolean
          description: >-
            Indicates whether data provider is enabled or access is allowed for
            the client
        mfa:
          type: boolean
          description: Whether data provider requires multi-factor authentication.
        accountConnection:
          type: boolean
          description: >-
            Whether a real-time account connection is available for this data
            provider
          default: true
        supported:
          type: array
          description: Supported data points for this employment data provider
          items:
            $ref: '#/components/schemas/RefDatapoint'
        monitorSupported:
          type: boolean
          description: Whether support CDS for this data provider
          default: false
      required:
        - id
        - name
        - longName
        - logoUrl
        - type
        - typeLabel
        - subType
        - subTypeLabel
        - active
        - enabled
        - mfa
        - accountConnection
        - supported
        - monitorSupported
    ProviderListResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Provider'
      x-internal: true
      x-examples: {}
      title: Provider List Response
      description: ''
    ProviderGetResponse:
      title: Provider Get Response
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Provider'
      x-internal: true
      x-examples: {}
      description: ''
    RefObjectID:
      type: string
      title: Object ID
      description: Unique ID of this object
      x-internal: true
      example: 17bbf36498de4d68a0d4f86c7b62f69f
    ObjectExternalMetadata:
      title: ObjectExternalMetadata
      type: object
      additionalProperties:
        type: string
      maxProperties: 5
      description: >-
        The Metadata object is a mapping of client-provided string fields to any
        string value. The following limitations apply:

        - The JSON values must be Strings (no nested JSON objects allowed)

        - Only ASCII characters can be used

        - Maximum of 5 key/value pairs

        - Maximum key length of 50 characters

        - Maximum value length of 500 characters
      x-internal: true
    RefDateTime:
      type: string
      title: Date and Time string
      format: date-time
      example: '2021-04-14T09:30:24Z'
      description: Date and time
      x-internal: true
    User:
      title: User
      type: object
      description: >-
        A user is someone who is authorizing Smile to retrieve and share their
        employment and income data on their behalf.
      x-tags:
        - Users
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          externalMetadata:
            property1: string
            property2: string
          createdAt: '2021-04-14T09:30:24Z'
          providers:
            - upwork
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        externalMetadata:
          $ref: '#/components/schemas/ObjectExternalMetadata'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        providers:
          description: Array of providers connected to this user (listed by provider ID)
          type: array
          items:
            type: string
            example: upwork
      required:
        - id
        - externalMetadata
        - createdAt
        - providers
    UserListResponse:
      title: User List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/User'
      x-internal: true
      x-examples: {}
    UserPostRequest:
      type: object
      properties:
        externalMetadata:
          $ref: '#/components/schemas/ObjectExternalMetadata'
      x-internal: true
      x-examples: {}
      title: User Post Request
      description: Create user request body
    Token:
      title: Token
      type: object
      x-tags:
        - Tokens
      description: >-
        A method for securely transmitting information between Smile and the
        user.
      x-examples:
        Example:
          expiresAt: '2021-04-14T09:30:24Z'
          mode: SANDBOX
          accessToken: string
      properties:
        expiresAt:
          $ref: '#/components/schemas/RefDateTime'
        mode:
          type: string
          enum:
            - SANDBOX
            - PRODUCTION
          example: SANDBOX
          description: Valid Smile mode for the Token
        accessToken:
          type: string
          description: Short-lived token to initiate link flow
      required:
        - expiresAt
        - mode
        - accessToken
    UserPostResponse:
      title: User Post Response
      description: Create user response body
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              $ref: '#/components/schemas/Token'
          required:
            - user
            - token
      x-internal: true
      x-examples: {}
    UserGetResponse:
      title: User Get Response
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/User'
      x-internal: true
      x-examples: {}
    TokenPostResponse:
      title: Token Post Response
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Token'
      x-internal: true
      x-examples: {}
    ConsentTemplate:
      properties:
        id:
          description: Unique id for this consent template
          type: string
          x-internal: true
        createdAt:
          format: date-time
          type: string
          x-internal: true
          example: '2021-04-14T09:30:24Z'
        consentType:
          type: string
          maxLength: 200
          minLength: 1
          example: Terms and Conditions
        title:
          type: string
          maxLength: 200
          minLength: 1
          example: Terms and Conditions
        version:
          type: string
          maxLength: 64
          minLength: 1
          example: 1.0.0
        consentMethod:
          type: string
          maxLength: 200
          minLength: 0
          example: I agree to the terms and conditions
        consentText:
          type: string
          maxLength: 65535
          minLength: 1
          example: <consent content>
    ConsentTemplateListResponseData:
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          items:
            $ref: '#/components/schemas/ConsentTemplate'
          type: array
      type: object
    ConsentTemplateListResponse:
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/ConsentTemplateListResponseData'
      title: ConsentTemplatesListResponse
      type: object
      x-examples: {}
      x-internal: true
    ConsentTemplateCreateRequest:
      properties:
        consentType:
          type: string
          description: The type of consent template, e.g. Terms and Conditions
          maxLength: 200
          minLength: 1
          example: Terms and Conditions
        title:
          type: string
          description: >-
            The name of the consent document that will be visible to end users
            if you choose to make it visible.
          maxLength: 200
          minLength: 1
          example: Terms and Conditions
        version:
          type: string
          description: The version of the consent template
          maxLength: 64
          minLength: 1
          example: 1.0.0
        consentMethod:
          type: string
          description: The method of consent
          maxLength: 200
          minLength: 0
          example: I agree to the terms and conditions
        consentText:
          type: string
          description: The content of the consent template
          maxLength: 65535
          minLength: 1
          example: <consent content>
      required:
        - consentType
        - version
        - consentText
    ConsentTemplateCreateResponse:
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/ConsentTemplate'
    CommonResponse:
      title: CommonResponse
      type: object
      x-internal: true
      required:
        - code
        - requestId
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
      description: ''
    RefWebhookEventType:
      title: RefWebhookEventType
      description: Event Type which will be sent as a notification via webhook
      type: string
      enum:
        - USER_CREATED
        - ACCOUNT_CREATED
        - ACCOUNT_CONNECTED
        - ACCOUNT_DISCONNECTED
        - ACCOUNT_FAILED
        - TASK_STARTED
        - TASK_FINISHED
        - ACCOUNT_SYNC_TASK_FINISHED
        - ARCHIVE_STARTED
        - ARCHIVE_ANALYZED
        - ARCHIVE_REVOKED
        - ARCHIVE_FAILED
        - INVITE_INVITED
        - INVITE_LINKED
        - IDENTITY_ADDED
        - RATING_ADDED
        - TRANSACTIONS_ADDED
        - DOCUMENTS_ADDED
        - DOCUMENTS_UPDATED
        - EMPLOYMENTS_ADDED
        - EMPLOYMENTS_UPDATED
        - INCOMES_ADDED
        - INCOMES_UPDATED
        - CONTRIBUTIONS_ADDED
        - CONTRIBUTIONS_UPDATED
        - EINCOMES_ADDED
        - EINCOMES_UPDATED
        - LIABILITIES_ADDED
        - LIABILITIES_UPDATED
        - INSIGHT_ADDED
        - LINK_ADDED
        - VERIFICATION_STARTED
        - VERIFICATION_COMPLETED
        - ALL_EVENTS
      example: ACCOUNT_CONNECTED
    Webhook:
      title: Webhook
      type: object
      description: Receive event notifications via Webhooks.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          createdAt: '2021-04-14T09:30:24Z'
          name: Event Notification Postback
          url: https://webhook.clienturl.xyz
          eventTypes:
            - USER_CREATED
          active: true
          secret: a little secret
          updatedAt: '2021-04-14T09:30:24Z'
      x-internal: true
      x-tags:
        - Webhooks
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        name:
          type: string
          description: Name of the webhook endpoint
          example: Event Notification Postback
        url:
          type: string
          description: URL of webhook, must begin with https://
          example: https://webhook.clienturl.xyz
        secret:
          type: string
          description: >-
            The key that will be used to generate HMAC-SHA512 hex digest value
            in the Smile-Signature header.
          example: a little secret
        eventTypes:
          type: array
          description: Special events that you want to subscribe to
          items:
            $ref: '#/components/schemas/RefWebhookEventType'
        active:
          type: boolean
          default: true
          description: >-
            Set to true or false depending on if you would like to enable this
            webhook or not
        includePayload:
          type: boolean
          default: false
          description: >-
            Whether to put all datapoints' payload into the
            events(TASK_FINISHED_EVENT, ACCOUNT_SNYC_TASK_FINISHED_EVENT)
        updatedAt:
          $ref: '#/components/schemas/RefDateTime'
      required:
        - id
        - createdAt
        - name
        - url
        - eventTypes
        - active
        - updatedAt
    WebhookListResponse:
      title: WebhookListResponse
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Webhook'
      x-internal: true
    WebhookPostRequest:
      title: WebhookPostRequest
      type: object
      x-internal: true
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Name of the webhook endpoint
          example: Event Notification Postback
        url:
          type: string
          minLength: 1
          maxLength: 500
          description: URL of webhook, must begin with https://
          example: https://webhook.clienturl.xyz
        eventTypes:
          type: array
          items:
            $ref: '#/components/schemas/RefWebhookEventType'
        active:
          type: boolean
          description: Whether to set this webhook active to received events
        includePayload:
          type: boolean
          default: false
          description: >-
            Whether to put all datapoints' payload into the
            events(TASK_FINISHED, ACCOUNT_SNYC_TASK_FINISHED)
        secret:
          type: string
          description: >-
            The key that will be used to generate HMAC-SHA512 hex digest value
            in the Smile-Signature header.
          example: a little secret
          minLength: 1
          maxLength: 64
      required:
        - name
        - url
        - eventTypes
        - active
        - secret
    WebhookPostResponse:
      title: WebhookPostResponse
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Webhook'
      x-internal: true
    WebhookGetResponse:
      title: WebhookGetResponse
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Webhook'
      x-internal: true
    WebhookDeleteResponse:
      title: WebhookDeleteResponse
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
      x-examples: {}
    TaskType:
      type: string
      description: Task type
      enum:
        - LINK_ACCOUNT
        - ANALYZE_ARCHIVE
        - CLASSIFY_ARCHIVE
        - UPDATE_ACCOUNT
    RefSourceType:
      type: string
      nullable: true
      title: Ref-Source-Type
      example: Account
      enum:
        - ACCOUNT
        - UPLOAD
        - ARCHIVE
      description: Source Type
      x-internal: true
    ObjectReferenceMetadata:
      title: Reference Metadata
      type: object
      description: Metadata related to account-specific data
      x-internal: true
      properties:
        itemCreatedAt:
          $ref: '#/components/schemas/RefDateTime'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        accountId:
          type: string
          deprecated: true
          description: The accountId of this object
        sourceId:
          type: string
          description: The ACCOUNT or ARCHIVE ID associated with this object
        sourceType:
          $ref: '#/components/schemas/RefSourceType'
        userId:
          type: string
          description: The user ID associated with this object
        providerId:
          type: string
          description: The provider ID associated with this object
      required:
        - createdAt
        - itemCreatedAt
        - sourceId
        - sourceType
        - userId
        - providerId
    Task:
      type: object
      required:
        - id
        - type
        - startedAt
        - status
        - metadata
      properties:
        id:
          type: string
          description: Task id
        type:
          $ref: '#/components/schemas/TaskType'
        startedAt:
          $ref: '#/components/schemas/RefDateTime'
        finishedAt:
          $ref: '#/components/schemas/RefDateTime'
        status:
          type: string
          description: Task status
          enum:
            - Started
            - Finished
        datapoints:
          type: array
          description: The datapoints saved when the task finished
          items:
            $ref: '#/components/schemas/RefDatapoint'
        metadata:
          $ref: '#/components/schemas/ObjectReferenceMetadata'
    TaskListResponse:
      title: Task List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Task'
    TaskGetResponse:
      title: Task Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Task'
    AccountConnectionStatus:
      type: string
      enum:
        - PENDING
        - AWAITING_MFA
        - ERROR
        - CONNECTED
        - DISCONNECTED
      description: Account connection status
      example: CONNECTED
    AccountMonitorStatus:
      type: string
      enum:
        - ACTIVE
        - USER_ACTION_REQUIRED
        - UNSUPPORTED
        - CUSTOMER_DISABLED
      description: Account CDS status
      example: ACTIVE
    AccountErrorCode:
      type: string
      enum:
        - ACCOUNT_DISABLED
        - ACCOUNT_INACCESSIBLE
        - ACCOUNT_INCOMPLETE
        - ACCOUNT_LOCKED
        - AUTH_REQUIRED
        - EXPIRED_CREDENTIALS
        - INVALID_ACCOUNT_TYPE
        - INVALID_AUTH
        - INVALID_CREDENTIALS
        - INVALID_MFA
        - MFA_TIMEOUT
        - SERVICE_UNAVAILABLE
        - SYSTEM_ERROR
        - TOS_REQUIRED
        - UNSUPPORTED_AUTH_TYPE
        - UNSUPPORTED_MFA_METHOD
        - null
      description: Error code
      example: ACCOUNT_DISABLED
      nullable: true
    Account:
      title: Account
      type: object
      description: Account of end-user from a particular employment data provider.
      x-tags:
        - Accounts
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          createdAt: '2021-04-14T09:30:24Z'
          providerId: grab
          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
          connectionStatus: ERROR
          connection:
            status: ERROR
            errorCode: ACCOUNT_DISABLED
            errorMessage: Account is disabled
            updatedAt: '2021-04-14T09:30:24Z'
          monitorStatus: ACTIVE
          monitor:
            stust: ACTIVE
            updatedAt: '2021-04-14T09:30:24Z'
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        providerId:
          type: string
          example: grab
          description: ID of the data provider
        userId:
          type: string
          description: User ID associated with this account
          example: tenant-5c1a2e8678e3494eba303ad1afa54ee8
        connectionStatus:
          $ref: '#/components/schemas/AccountConnectionStatus'
        monitorStatus:
          $ref: '#/components/schemas/AccountMonitorStatus'
        monitor:
          type: object
          required:
            - status
          properties:
            status:
              $ref: '#/components/schemas/AccountMonitorStatus'
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
        connection:
          type: object
          required:
            - status
            - updatedAt
          properties:
            status:
              $ref: '#/components/schemas/AccountConnectionStatus'
            errorCode:
              $ref: '#/components/schemas/AccountErrorCode'
            errorMessage:
              type: string
              description: Error message
              example: Account is disabled
              nullable: true
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
      required:
        - id
        - createdAt
        - providerId
        - userId
        - connectionStatus
        - connection
        - monitorStatus
        - monitor
    AccountListResponse:
      title: Account List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Account'
      x-internal: true
      x-examples: {}
    AccountGetResponse:
      title: Account Get Response
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Account'
      x-internal: true
      x-examples: {}
    ObjectReferenceMetadata2:
      title: Reference Metadata2
      type: object
      description: Metadata related to account-payload data
      x-internal: true
      properties:
        sourceId:
          type: string
          description: The ACCOUNT or ARCHIVE ID associated with this object
        sourceType:
          $ref: '#/components/schemas/RefSourceType'
        userId:
          type: string
          description: The user ID associated with this object
        providerId:
          type: string
          description: The provider ID associated with this object
      required:
        - sourceId
        - sourceType
        - userId
        - providerId
    RefGender:
      type: string
      title: GenderEnum
      enum:
        - Male
        - Female
        - Non-binary
        - null
      example: Male
      description: Gender
    RefMaritalStatus:
      type: string
      title: RefMaritalStatus
      enum:
        - Divorced
        - Married
        - Separated
        - Single
        - Widowed
        - Lifetime Partner
        - null
      example: Married
      description: Marital status
    RefCountry:
      type: string
      nullable: true
      title: Country ISO Codes
      enum:
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BQ
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CW
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KP
        - KR
        - XK
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - AN
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RS
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - CS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - SS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - XT
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - GB
        - US
        - UM
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
        - null
      description: 2 character alpha ISO-3166 codes
      example: PH
      x-internal: true
    RefContactType:
      type: string
      nullable: true
      title: Contact Types
      enum:
        - Primary
        - Secondary
        - Work
        - Personal
        - null
      description: Primary contact, with secondary marked as either 'Work' or 'Personal'
      example: Primary
      x-internal: true
    RefPhoneNumber:
      type: string
      nullable: true
      title: International Phone Number
      pattern: ^\+[1-9]\d{1,14}$
      description: Phone numbers in international E.164 format
      x-internal: true
      example: '+639175551234'
    RefPhoneType:
      type: string
      nullable: true
      title: Ref-Phone-Type
      example: Mobile
      enum:
        - Mobile
        - Fixed
        - Unspecified
        - null
      description: Phone type
      x-internal: true
    RefAddress:
      title: Address Object
      type: object
      description: Address object
      x-internal: true
      properties:
        fullAddress:
          type: string
          nullable: true
          description: Full address
        line1:
          type: string
          nullable: true
          description: Line 1 of street address
        line2:
          type: string
          nullable: true
          description: Line 2 of street address
        city:
          type: string
          nullable: true
          description: City
        region:
          type: string
          nullable: true
          description: Geographic region such as state or province
        zip:
          type: string
          nullable: true
          description: Post code
        country:
          $ref: '#/components/schemas/RefCountry'
        latitude:
          type: string
          nullable: true
          pattern: >-
            ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
          description: Latitude coordinates
        longitude:
          type: string
          nullable: true
          pattern: >-
            ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
          description: Longitude coordinates
        type:
          type: string
          nullable: true
          enum:
            - Primary
            - Secondary
            - null
          description: Whether address is primary or secondary
      required:
        - type
    IdentityPayload:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        fullName:
          type: string
          example: George Cimafranca Palomero, Jr
          description: Full name
        firstName:
          type: string
          example: George
          description: First name
          nullable: true
        middleName:
          type: string
          example: Cimafranca
          description: Middle name
          nullable: true
        lastName:
          type: string
          example: Palomero
          description: Last name
          nullable: true
        suffix:
          type: string
          example: Jr
          description: Suffix
          nullable: true
        gender:
          $ref: '#/components/schemas/RefGender'
        dob:
          type: string
          format: date
          description: Date of birth
          nullable: true
        maritalStatus:
          $ref: '#/components/schemas/RefMaritalStatus'
        countryResidence:
          $ref: '#/components/schemas/RefCountry'
        citizenship:
          type: string
          enum:
            - Citizen
            - Resident Alien
            - Non-resident Alien
            - Undocumented
            - Others
          description: Citizenship
          nullable: true
        photoUrl:
          type: string
          example: https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
          description: URL to photo or avatar
          nullable: true
        referenceId:
          type: string
          description: Reference profile ID from the data provider
          example: ~02c0bf6ae6a581ee2b
          nullable: true
        profileUrl:
          type: string
          description: Public profile URL
          example: https://www.upwork.com/freelancers/~02c0bf6ae6a581ee2b
          nullable: true
        latestEmployerName:
          type: string
          deprecated: true
          description: The lastest employer name at now, it will be removed in the future.
        emails:
          type: array
          description: A collection of email addresses
          items:
            type: object
            title: email
            properties:
              address:
                type: string
                format: email
                example: gpalomero@yahoo.com
                description: Email address
                nullable: true
              type:
                $ref: '#/components/schemas/RefContactType'
            required:
              - address
              - type
        phones:
          type: array
          description: A collection of phone numbers
          items:
            type: object
            title: phone
            properties:
              number:
                $ref: '#/components/schemas/RefPhoneNumber'
              type:
                $ref: '#/components/schemas/RefPhoneType'
            required:
              - number
              - type
        socialProfiles:
          type: array
          description: A collection of social media URLs
          items:
            type: object
            title: socialProfile
            properties:
              socialUrl:
                type: string
                example: https://www.facebook.com/gpalomero
                description: URL to social media page
                nullable: true
              type:
                type: string
                enum:
                  - Twitter
                  - Facebook
                  - LinkedIn
                  - Others
                example: Facebook
                description: Social media type
                nullable: true
            required:
              - socialUrl
              - type
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/RefAddress'
      required:
        - id
        - fullName
        - emails
        - phones
        - socialProfiles
        - addresses
    RatingPayload:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        currentRating:
          type: number
          description: Current rating
          example: 90
          nullable: true
        maxRating:
          type: number
          description: Maximum possible rating
          example: 100
          nullable: true
        calculatedPercentage:
          type: number
          description: >-
            Current rating expressed as percentage, calculated by
            currentRating/maxRating x 100
          example: 90
          nullable: true
        reviewsReceived:
          type: number
          description: >-
            Number of reviews the employee received, which is the basis for the
            current rating
          example: 12
          nullable: true
        likesReceived:
          type: number
          description: Recommendations or kudos received
          example: 8
          nullable: true
        jobsCompleted:
          type: number
          description: Jobs actually completed in the employment platform
          example: 12
          nullable: true
    DocumentPayload:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        name:
          type: string
          description: Document name
          example: Facebook Social Media Marketing Professional Certificate
        docId:
          type: string
          description: Document number
          example: ABCD123456
          nullable: true
        status:
          type: string
          description: >-
            Document status，only for NBI verification, It's VALID if the NBI
            verification status is valid.
          example: VALID
          nullable: true
        documentType:
          type: string
          description: Document Type
          example: IDENTIFICATION
          enum:
            - IDENTIFICATION
            - PAYSLIP
            - CLEARANCE
            - CERTIFICATE
        issueDate:
          type: string
          description: Issue date
          format: date
          example: '2007-08-24'
          nullable: true
        expiryDate:
          type: string
          description: Expiry date
          format: date
          example: '2010-08-24'
          nullable: true
        fileUrl:
          type: string
          description: Publicly available URL reference for the document
          example: >-
            https://images.credly.com/size/680x680/images/c4a900b7-8d1b-4e8f-a572-347985eeaa5c/Coursera_Badge__1_.png
          nullable: true
        remarks:
          type: string
          description: Remarks section
          example: NO RECORD ON FILE
          nullable: true
    RefEmployer:
      type: string
      title: Employer
      nullable: true
      x-internal: true
      description: Employer name
      example: ABC Corporation
    RefCurrency:
      type: string
      title: Currency ISO Codes
      description: Currency in 3 character alpha ISO 4217
      enum:
        - AFN
        - DZD
        - ARS
        - AMD
        - AWG
        - AUD
        - AZN
        - BSD
        - BHD
        - THB
        - PAB
        - BBD
        - BYN
        - BZD
        - BMD
        - VES
        - BOB
        - BRL
        - BND
        - BGN
        - BIF
        - CAD
        - CVE
        - KYD
        - GHS
        - XOF
        - XAF
        - XPF
        - CLP
        - COP
        - KMF
        - CDF
        - BAM
        - NIO
        - CRC
        - HRK
        - CZK
        - GMD
        - DKK
        - MKD
        - DJF
        - STD
        - DOP
        - VND
        - XCD
        - EGP
        - SVC
        - ETB
        - EUR
        - FKP
        - FJD
        - HUF
        - GIP
        - HTG
        - PYG
        - GNF
        - GYD
        - HKD
        - UAH
        - ISK
        - INR
        - IRR
        - IQD
        - JMD
        - JOD
        - KES
        - PGK
        - LAK
        - EEK
        - KWD
        - MWK
        - AOA
        - MMK
        - GEL
        - LVL
        - LBP
        - ALL
        - HNL
        - SLL
        - LRD
        - LYD
        - SZL
        - LTL
        - LSL
        - MGA
        - MYR
        - TMT
        - MUR
        - MZN
        - MXN
        - MDL
        - MAD
        - NGN
        - ERN
        - NAD
        - NPR
        - ANG
        - ILS
        - RON
        - TWD
        - NZD
        - BTN
        - KPW
        - NOK
        - PEN
        - MRO
        - TOP
        - PKR
        - MOP
        - UYU
        - PHP
        - GBP
        - BWP
        - QAR
        - GTQ
        - ZAR
        - OMR
        - KHR
        - MVR
        - IDR
        - RUB
        - RWF
        - SHP
        - SAR
        - RSD
        - SCR
        - SGD
        - SBD
        - KGS
        - SOS
        - TJS
        - LKR
        - SDG
        - SRD
        - SEK
        - CHF
        - SYP
        - BDT
        - WST
        - TZS
        - KZT
        - TTD
        - MNT
        - TND
        - TRY
        - AED
        - UGX
        - CLF
        - USD
        - UZS
        - VUV
        - KRW
        - YER
        - JPY
        - CNY
        - ZMW
        - ZWL
        - PLN
      x-internal: true
      example: PHP
    RefPayPeriod:
      type: string
      nullable: true
      title: Pay Period
      description: Pay period
      enum:
        - Hourly
        - Daily
        - Weekly
        - Semimonthly
        - Monthly
        - Bimonthly
        - Quarterly
        - Annually
        - Variable
        - Unspecified
        - null
      example: Annually
      x-internal: true
    IncomePayload:
      type: object
      required:
        - id
        - startDate
        - currency
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        workItem:
          type: string
          description: Work performed (specially in the case of contract or freelance jobs)
          nullable: true
        employer:
          $ref: '#/components/schemas/RefEmployer'
        startDate:
          type: string
          description: Start date
          format: date
          example: '2021-06-01'
        endDate:
          type: string
          example: '2021-06-15'
          format: date
          description: End date
          nullable: true
        currency:
          $ref: '#/components/schemas/RefCurrency'
        frequency:
          $ref: '#/components/schemas/RefPayPeriod'
        baseAmount:
          type: number
          description: Base amount
          nullable: true
        grossAmount:
          type: number
          description: Gross amount
          nullable: true
        netAmount:
          type: number
          description: Net amount
          nullable: true
    TransactionPayload:
      type: object
      required:
        - id
        - date
        - currency
        - amount
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        date:
          type: string
          format: date
          example: '2021-04-21'
          description: Date of transaction
        description:
          type: string
          description: Description of the transaction
          example: Payment for web design project
          nullable: true
        currency:
          $ref: '#/components/schemas/RefCurrency'
        amount:
          type: number
          example: 10000
          description: Transaction amount
        referenceId:
          type: string
          description: Reference transaction ID from data provider
          nullable: true
    EmploymentPayload:
      type: object
      required:
        - id
        - startDate
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        name:
          type: string
          description: Work performed
          example: Digital Marketing
          nullable: true
        description:
          type: string
          description: Description of work performed
          example: >-
            Gathering and reporting relevant data, maintaining specific reports
            and dashboards, using platforms and programs to address marketing
            requirements, and updating specific marketing materials.
          nullable: true
        jobTitle:
          type: string
          description: Job title
          example: Digital Marketing Assistant
          nullable: true
        department:
          type: string
          description: Department or organization in place of employment
          example: Marketing
          nullable: true
        employeeNumber:
          type: string
          description: Employee number in the employment data provider
          example: EMP-123456
          nullable: true
        employer:
          $ref: '#/components/schemas/RefEmployer'
        status:
          type: string
          description: Status of employment
          example: Permanent
          nullable: true
        startDate:
          type: string
          description: Start date
          format: date
          example: '2016-02-24'
        endDate:
          type: string
          description: End date
          format: date
          example: '2019-08-24'
          nullable: true
    ContributionPayload:
      type: object
      required:
        - id
        - date
        - currency
        - amount
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        date:
          type: string
          format: date
          description: Date of the contribution
          example: '2021-04-30'
        currency:
          $ref: '#/components/schemas/RefCurrency'
        amount:
          type: number
          description: Amount of the contribution
          example: 1375
        referenceId:
          type: string
          description: Reference contribution ID from the data provider
          example: PA9634415
    LiabilityPayload:
      type: object
      required:
        - id
        - type
        - startDate
        - loanAmount
        - currency
        - amortizationFrequency
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        type:
          type: string
          description: the loan type
          example: Salary Loan
        referenceId:
          type: string
          description: the loan referenceId
        startDate:
          type: string
          format: date
          description: the loan start date
        endDate:
          type: string
          format: date
          description: the loan end date
        firstAmortizationDate:
          type: string
          format: date
          description: the loan first amortization date
        amortizationFrequency:
          $ref: '#/components/schemas/RefPayPeriod'
        currency:
          $ref: '#/components/schemas/RefCurrency'
        loanAmount:
          type: number
          description: loan amount
        amortizationAmount:
          type: number
          description: loan amortization amount
        outstandingBalance:
          type: number
          description: loan outstanding balance
        nextPaymentAmount:
          type: number
          description: loan next payment amount
        overduePaymentAmount:
          type: number
          description: loan total overdue amount
    EincomePayload:
      type: object
      required:
        - id
        - month
        - currency
        - baseAmount
        - amount
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        month:
          type: string
          description: the month
          example: 2021-06
        currency:
          $ref: '#/components/schemas/RefCurrency'
        baseAmount:
          type: number
          deprecated: true
          description: >-
            income amount, has been renamed to amount, baseAmount will be
            removed in the future
          nullable: true
        amount:
          type: number
          description: income amount
          nullable: true
    LinkPayload:
      type: object
      required:
        - id
        - endDate
      properties:
        id:
          type: string
          example: link-123456789012345678901234567890
          description: Link request ID
        startDate:
          $ref: '#/components/schemas/RefDateTime'
        endDate:
          $ref: '#/components/schemas/RefDateTime'
        records:
          type: array
          description: Link records
          default: []
          items:
            type: object
            title: LinkRecord
            required:
              - count
            properties:
              count:
                type: integer
                description: >-
                  The number of times the user has linked at least one account
                  with other participating organizations
              linkedAt:
                type: array
                default: []
                description: The latest link time of each application
                items:
                  $ref: '#/components/schemas/RefDateTime'
    ObjectFeature:
      type: object
      properties:
        incomes_count:
          type: integer
          example: 9
          description: The quantity of the estimated incomes
        incomes_first_income_month_range:
          type: integer
          example: -999
          description: >-
            Calculate the interval from the first income record time to the
            current time by month
        incomes_missing_month_max:
          type: integer
          example: -999
          description: >-
            From all estimated incomes, calculate the number of months between
            the last payment month and the next payment month, and then take the
            maximum value
        incomes_missing_month_count:
          type: integer
          example: -999
          description: >-
            From all estimated incomes, calculate the months diff between
            current income month and the before income month, and count if the
            diff > 1
        incomes_amount_sum:
          type: number
          example: -999
          description: From all estimated incomes, calculate the total of the amount
        incomes_amount_average:
          type: number
          example: 1100
          description: >-
            From all estimated incomes, calculate the average amount of the
            total amount
        incomes_amount_min:
          type: number
          example: 1000
          description: From all estimated incomes, get the minimum amount
        incomes_amount_max:
          type: number
          example: 1200
          description: From all estimated incomes, get the maximum amount
        incomes_amount_median:
          type: number
          example: 1200
          description: From all estimated incomes, get the median amount
        incomes_amount_std:
          type: number
          example: 1000
          description: From all estimated incomes, get the median amount
        incomes_last3_months_amount_sum:
          type: number
          example: 6000
          description: >-
            From all estimated incomes in last 3 months, calculate the total of
            the amount
        incomes_last3_months_amount_average:
          type: number
          example: 1100
          description: >-
            From all estimated incomes in last 3 months, calculate the average
            amount of the total amount
        incomes_last3_months_amount_min:
          type: number
          example: 1000
          description: From all estimated incomes in last 3 months, get the minimum amount
        incomes_last3_months_amount_max:
          type: number
          example: 1200
          description: From all estimated incomes in last 3 months, get the maximum amount
        incomes_last3_months_amount_median:
          type: number
          example: 1200
          description: From all estimated incomes in last 3 months, get the median amount
        incomes_last3_months_amount_std:
          type: number
          example: 1000
          description: >-
            From all estimated incomes in last 3 months, get the standard
            deviation of the amount
        incomes_last6_months_amount_sum:
          type: number
          example: 6000
          description: >-
            From all estimated incomes in last 6 months, calculate the total of
            the amount
        incomes_last6_months_amount_average:
          type: number
          example: 1100
          description: >-
            From all estimated incomes in last 6 months, calculate the average
            amount of the total amount
        incomes_last6_months_amount_min:
          type: number
          example: 1000
          description: From all estimated incomes in last 6 months, get the minimum amount
        incomes_last6_months_amount_max:
          type: number
          example: 1200
          description: From all estimated incomes in last 6 months, get the maximum amount
        incomes_last6_months_amount_median:
          type: number
          example: 1200
          description: From all estimated incomes in last 6 months, get the median amount
        incomes_last6_months_amount_std:
          type: number
          example: 1000
          description: >-
            From all estimated incomes in last 6 months, get the standard
            deviation of the amount
        incomes_last9_months_amount_sum:
          type: number
          example: 6000
          description: >-
            From all estimated incomes in last 9 months, calculate the total of
            the amount
        incomes_last9_months_amount_average:
          type: number
          example: 1100
          description: >-
            From all estimated incomes in last 9 months, calculate the average
            amount of the total amount
        incomes_last9_months_amount_min:
          type: number
          example: 1000
          description: From all estimated incomes in last 9 months, get the minimum amount
        incomes_last9_months_amount_max:
          type: number
          example: 1200
          description: From all estimated incomes in last 9 months, get the maximum amount
        incomes_last9_months_amount_median:
          type: number
          example: 1200
          description: From all estimated incomes in last 9 months, get the median amount
        incomes_last9_months_amount_std:
          type: number
          example: 1000
          description: >-
            From all estimated incomes in last 9 months, get the standard
            deviation of the amount
        incomes_last12_months_amount_sum:
          type: number
          example: 6000
          description: >-
            From all estimated incomes in last 12 months, calculate the total of
            the amount
        incomes_last12_months_amount_average:
          type: number
          example: 1100
          description: >-
            From all estimated incomes in last 12 months, calculate the average
            amount of the total amount
        incomes_last12_months_amount_min:
          type: number
          example: 1000
          description: From all estimated incomes in last 12 months, get the minimum amount
        incomes_last12_months_amount_max:
          type: number
          example: 1200
          description: From all estimated incomes in last 12 months, get the maximum amount
        incomes_last12_months_amount_median:
          type: number
          example: 1200
          description: From all estimated incomes in last 12 months, get the median amount
        incomes_last12_months_amount_std:
          type: number
          example: 1000
          description: >-
            From all estimated incomes in last 12 months, get the standard
            deviation of the amount
        incomes_last18_months_amount_sum:
          type: number
          example: 6000
          description: >-
            From all estimated incomes in last 18 months, calculate the total of
            the amount
        incomes_last18_months_amount_average:
          type: number
          example: 1100
          description: >-
            From all estimated incomes in last 18 months, calculate the average
            amount of the total amount
        incomes_last18_months_amount_min:
          type: number
          example: 1000
          description: From all estimated incomes in last 18 months, get the minimum amount
        incomes_last18_months_amount_max:
          type: number
          example: 1200
          description: From all estimated incomes in last 18 months, get the maximum amount
        incomes_last18_months_amount_median:
          type: number
          example: 1200
          description: From all estimated incomes in last 18 months, get the median amount
        incomes_last18_months_amount_std:
          type: number
          example: 1000
          description: >-
            From all estimated incomes in last 18 months, get the standard
            deviation of the amount
        incomes_last18_months_max_amount_count:
          type: number
          example: 1000
          description: >-
            From all estimated incomes in last 18 months, find the maximum
            amount, and count the number of monthly income equal to the maximum
            amount
        incomes_starting_amount:
          type: number
          example: 1000
          description: the estimated income from when the user has started earning income
        incomes_current_amount:
          type: number
          example: 1000
          description: the amount from the latetest one record
        incomes_latest_growth:
          type: number
          example: 1000
          description: >-
            For the latetest one record, calculate the growth of income from the
            same month last year
        liabilities_loan_count:
          type: integer
          example: 1000
          description: For the latetest one record, calculate the count of records
        liabilities_loan_amount_min:
          type: number
          example: 1000
          description: From all liabilities, calculate the minimum of the amount
        liabilities_loan_amount_max:
          type: number
          example: 1000
          description: From all liabilities, calculate the maximum of the amount
        liabilities_loan_amount_total:
          type: number
          example: 1000
          description: From all liabilities, calculate the total of the amount
        liabilities_loan_amount_average:
          type: number
          example: 1000
          description: From all liabilities, calculate the average of the amount
        liabilities_loan_amount_std:
          type: number
          example: 1000
          description: From all liabilities, calculate the standard deviation of the amount
        liabilities_finished_loan_count:
          type: number
          example: 1000
          description: >-
            From all liabilities that outstandingBalance <= 0, calculate the
            count of the records
        liabilities_outstanding_loan_count:
          type: integer
          example: 10
          description: >-
            From all liabilities that outstandingBalance > 0, calculate the
            count of the records
        liabilities_outstanding_amount_max:
          type: number
          example: 1000
          description: >-
            From all liabilities that outstandingBalance > 0, calculate the
            count of the records
        liabilities_outstanding_amount_total:
          type: number
          example: 1000
          description: >-
            From all liabilities that outstandingBalance > 0, calculate the
            total of the amount
        liabilities_outstanding_amount_average:
          type: number
          example: 1000
          description: >-
            From all liabilities that outstandingBalance > 0, calculate the
            average of the amount
        liabilities_overdue_loan_count:
          type: integer
          example: 10
          description: >-
            From all liabilities that overduePaymentAmount > 0, calculate the
            count of the records
        liabilities_overdue_amount_total:
          type: number
          example: 1000
          description: >-
            From all liabilities that overduePaymentAmount > 0, calculate the
            total of the amount
        liabilities_overdue_amount_average:
          type: number
          example: 1000
          description: >-
            From all liabilities that overduePaymentAmount > 0, calculate the
            average of the amount
        liabilities_ongoing_amortization_amount_sum:
          type: number
          example: 1000
          description: >-
            Sum of all amortization amounts for ongoing/current liabilities (not
            yet fully paid off)
        liabilities_ongoing_amortization_amount_min:
          type: number
          example: 1000
          description: >-
            Smallest of all amortization amounts for ongoing/current liabilities
            (not yet fully paid off)
        liabilities_ongoing_amortization_amount_max:
          type: number
          example: 1000
          description: >-
            Largest of all amortization amounts for ongoing/current liabilities
            (not yet fully paid off)
        liabilities_ongoing_amortization_amount_average:
          type: number
          example: 1000
          description: >-
            Average of all amortization amounts for ongoing/current liabilities
            (not yet fully paid off)
        liabilities_ongoing_amortization_amount_median:
          type: number
          example: 1000
          description: >-
            Median of all amortization amounts for ongoing/current liabilities
            (not yet fully paid off)
        liabilities_ongoing_amortization_amount_std:
          type: number
          example: 1000
          description: >-
            Standard deviation of all amortization amounts for ongoing/current
            liabilities (not yet fully paid off)
        liabilities_payment_count:
          type: number
          example: 10
          description: Quantity of liability payments made (across all liability records)
        liabilities_payment_amount_max:
          type: number
          example: 1000
          description: >-
            Largest amount of payments made for liabilities (across all
            liability records).
        liabilities_payment_amount_min:
          type: number
          example: 1000
          description: >-
            Smallest amount of payments made for liabilities (across all
            liability records).
        liabilities_payment_amount_median:
          type: number
          example: 1000
          description: >-
            Median amount of payments made for liabilities (across all liability
            records).
        liabilities_payment_amount_average:
          type: number
          example: 1000
          description: >-
            Average amount of payments made for liabilities (across all
            liability records).
        liabilities_payment_amount_sum:
          type: number
          example: 1000
          description: >-
            Total amount of payments made for liabilities (across all liability
            records).
        liabilities_payment_amount_std:
          type: number
          example: 1000
          description: >-
            Standard deviation of payments made for liabilities (across all
            liability records).
        employments_current_status:
          type: string
          example: EMPLOYED
          description: >-
            The user's current employment status, may be one of: EMPLOYED, GIG
            (for gig economy workers), or UNEMPLOYED
        employments_employer_count:
          type: integer
          example: 3
          description: Quantity of unique employers
        employments_current_tenure:
          type: integer
          example: 5
          description: Quantity of months at current employer
        identity_age:
          type: integer
          example: 30
          description: Age of the user based on date of birth
        link_days_since_first:
          type: integer
          example: 130
          description: >-
            Number of days since the first account connection, if MAW is
            enabled.
        link_days_since_last:
          type: integer
          example: 2
          description: Number of days since the last account connection, if MAW is enabled.
        link_day3_count:
          type: integer
          example: 2
          description: >-
            Number of tenants this account has connected to in the last 3 days,
            if MAW is enabled.
        link_day7_count:
          type: integer
          example: 5
          description: >-
            Number of tenants this account has connected to in the last 7 days,
            if MAW is enabled.
        link_day30_count:
          type: integer
          example: 8
          description: >-
            Number of tenants this account has connected to in the last 30 days,
            if MAW is enabled.
        link_day90_count:
          type: integer
          example: 12
          description: >-
            Number of tenants this account has connected to in the last 90 days,
            if MAW is enabled.
        link_day180_count:
          type: integer
          example: 12
          description: >-
            Number of tenants this account has connected to in the last 180
            days, if MAW is enabled.
        link_day365_count:
          type: integer
          example: 12
          description: >-
            Number of tenants this account has connected to in the last 365
            days, if MAW is enabled.
        link_day730_count:
          type: integer
          example: 12
          description: >-
            Number of tenants this account has connected to in the last 730
            days, if MAW is enabled.
    InsightPayload:
      type: object
      required:
        - id
        - cutoffTime
        - features
      properties:
        id:
          type: string
          example: insight-123456789012345678901234567890
        cutoffTime:
          type: string
          title: Cutoff time for feature calculations.
          format: date-time
          example: '2021-04-14T09:30:24Z'
          description: Date and time
          x-internal: true
        features:
          $ref: '#/components/schemas/ObjectFeature'
    AccountPayload:
      required:
        - metadata
      properties:
        metadata:
          $ref: '#/components/schemas/ObjectReferenceMetadata2'
        identity:
          $ref: '#/components/schemas/IdentityPayload'
        rating:
          $ref: '#/components/schemas/RatingPayload'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentPayload'
        incomes:
          type: array
          items:
            $ref: '#/components/schemas/IncomePayload'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionPayload'
        employments:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentPayload'
        contributions:
          type: array
          items:
            $ref: '#/components/schemas/ContributionPayload'
        liabilities:
          type: array
          items:
            $ref: '#/components/schemas/LiabilityPayload'
        eincomes:
          type: array
          items:
            $ref: '#/components/schemas/EincomePayload'
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinkPayload'
        insight:
          $ref: '#/components/schemas/InsightPayload'
    AccountPayloadGetResponse:
      title: Account Get Payload Response
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/AccountPayload'
      x-internal: true
      x-examples: {}
    ExportExtensionType:
      type: string
      description: The type of the export
      enum:
        - PDF
        - CSV
    AccountExportGenerateRequest:
      type: object
      required:
        - exportExtensionType
      properties:
        exportExtensionType:
          $ref: '#/components/schemas/ExportExtensionType'
    AccountExport:
      type: object
      required:
        - id
        - accountId
        - exportExtensionType
        - createdAt
        - downloadUrl
        - md5
      properties:
        accountId:
          type: string
          description: The particular account ID
        id:
          type: string
          description: The unique ID of this export
        downloadUrl:
          type: string
          description: >-
            The url which can download the export. This url will become invalid
            after account revoked or more than 60 days ago.
        exportExtensionType:
          $ref: '#/components/schemas/ExportExtensionType'
        md5:
          type: string
          description: >-
            You can use this value to check whether the file is modified. Smile
            use Md5 algorithm to generate the value
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
    AccountExportGenerateResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/AccountExport'
    InviteStatus:
      type: string
      enum:
        - INVITED
        - EMAIL_OPENED
        - LANDING_PAGE_OPENED
        - WINK_WIDGET_OPENED
        - LINKED
        - REVOKED
      description: Status of the invite
    Invite:
      title: Invite
      type: object
      description: Invitation for a user to share their data.
      x-tags:
        - Invites
      x-examples:
        Example:
          id: inv-b2c5e816-65ad-4130-819d-db89acc5869a
          createdAt: '2021-04-14T09:30:24Z'
          fullName: George Cimafranca Palomero, Jr
          firstName: George
          lastName: Palomero
          email: gpalomero1234@smileapi.io
          templateId: tpl-b2c5e816-65ad-4130-819d-db89acc5869a
          winkTemplateId: wtpl-db89acc5869a-b2c5e816-65ad-4130-819d
          userId: tenant-17bbf36498de4d68a0d4f86c7b62f69f
          status: INVITED
          updatedAt: '2021-04-14T09:30:24Z'
          invitedAt: '2021-04-14T09:30:24Z'
          linkedAt: '2021-04-14T09:30:24Z'
          inviteLandingPageUrl: https://user.getsmileapi.com/invite-user/xx-xxxxxx?token=xxxxxxxxx
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        fullName:
          type: string
          example: George Cimafranca Palomero, Jr
          description: The full name of the invited user
        firstName:
          type: string
          example: George
          description: The first name of the invited user
        lastName:
          type: string
          example: Palomero
          description: The last name of the invited user
        email:
          example: gpalomero1234@smileapi.io
          description: The email address of the invited user
          format: email
          type: string
        templateId:
          type: string
          description: The template ID used in the invitation
          example: tpl-b2c5e816-65ad-4130-819d-db89acc5869a
        winkTemplateId:
          type: string
          description: The Wink template ID used in the invitation
          example: wtpl-db89acc5869a-b2c5e816-65ad-4130-819d
        userId:
          type: string
          description: The user ID for this invitation
          example: tenantId-b2c5e816-65ad-4130-819d-db89acc5869a
        status:
          $ref: '#/components/schemas/InviteStatus'
        updatedAt:
          $ref: '#/components/schemas/RefDateTime'
        invitedAt:
          $ref: '#/components/schemas/RefDateTime'
        linkedAt:
          $ref: '#/components/schemas/RefDateTime'
        inviteLandingPageUrl:
          type: string
          description: >-
            URL of the unique landing page for the invited user to connect their
            accounts
      required:
        - id
        - createdAt
        - fullName
        - email
        - templateId
        - userId
        - status
        - updatedAt
        - invitedAt
        - linkedAt
    InviteListResponse:
      title: InviteListResponse
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Invite'
      x-examples: {}
      x-internal: true
    InvitePostRequest:
      title: InvitePostRequest
      type: object
      description: ''
      x-internal: true
      required:
        - email
        - fullName
        - templateId
      properties:
        fullName:
          type: string
          minLength: 1
          maxLength: 200
          example: George Cimafranca Palomero, Jr
          description: The full name of the person to be invited
        firstName:
          type: string
          minLength: 1
          maxLength: 64
          description: The first name of the person to be invited
          example: George
        lastName:
          type: string
          minLength: 1
          maxLength: 64
          description: The last name of the person to be invited
          example: Palomero
        email:
          type: string
          minLength: 1
          maxLength: 200
          example: gpalomero1234@smileapi.io
          description: Email of the person to be invited
          format: email
        templateId:
          type: string
          minLength: 1
          maxLength: 64
          description: The template ID to be used in the invite
          example: tpl-b2c5e816-65ad-4130-819d-db89acc5869a
        winkTemplateId:
          type: string
          minLength: 1
          maxLength: 64
          description: The Wink template ID used in the invitation
          example: wtpl-db89acc5869a-b2c5e816-65ad-4130-819d
    InvitePostResponse:
      title: InvitePostResponse
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Invite'
      x-examples: {}
      x-internal: true
    InviteGetResponse:
      title: InviteGetResponse
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Invite'
      x-internal: true
    InviteLog:
      type: object
      description: Invite status change log
      x-internal: true
      x-examples:
        Example:
          id: invl-b2c5e816-65ad-4130-819d-db89acc5869a
          inviteId: inv-b2c5e816-65ad-4130-819d-db89acc5869a
          createdAt: '2021-04-14T09:30:24Z'
          inviteStatus: WINK_WIDGET_OPENED
          userId: tenant-17bbf36498de4d68a0d4f86c7b62f69f
      required:
        - id
        - inviteId
        - userId
        - inviteStatus
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        inviteId:
          type: string
          description: the reference invite ID
        inviteStatus:
          $ref: '#/components/schemas/InviteStatus'
        userId:
          type: string
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
    InviteLogListResponse:
      title: InviteLogListResponse
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/InviteLog'
      x-examples: {}
      x-internal: true
    InviteTemplate:
      title: InviteTemplate
      x-tags:
        - Invite Templates
      type: object
      description: Template to be used for sending invites.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          name: Email Template v1
          company:
            name: XYZ Bank
            logoUrl: https://xyzbank.co/logo.png
          email:
            sendEmail: true
            senderName: XYZ Bank
            replyAddress: replies@xyz.co
            subject: Please connect your work account to share your data with us
            body: >-
              Hello ${firstName}! We are working with our partner, Smile API, so
              you can easily share your employment and income data to us as a
              requirement for providing you service. It will be a quick process
              and should take no more than a few seconds of your time.
          landingPage:
            header: Share your employment and income data with us at ${companyName}
            description: >-
              We are working with our partner, Smile API, so you can easily
              share your employment and income data to us as a requirement for
              providing you service. It will be a quick process and should take
              no more than a few seconds of your time.
            button: START NOW
          successPage:
            header: >-
              Thank you for sharing your employment and income data with us at
              ${companyName}
            description: The process was successful! Please wait for us to get in touch!
            button: Connect another account
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        name:
          type: string
          description: Template name
          example: Email Template v1
        company:
          type: object
          required:
            - name
            - logoUrl
          properties:
            name:
              type: string
              example: XYZ Bank
              description: >-
                Company name that it will appear in the invite landing page and
                any invitation message
            logoUrl:
              type: string
              example: https://xyzbank.co/logo.png
              description: >-
                Company logo that will appear in the invite email and landing
                page
        email:
          type: object
          required:
            - sendEmail
            - senderName
            - replyAddress
            - subject
            - body
          properties:
            sendEmail:
              type: boolean
              description: 'Send email using this template (boolean value: true/false)'
            senderName:
              type: string
              description: Sender name that it will appear in the email message
              example: XYZ Bank
            replyAddress:
              type: string
              description: >-
                Reply-to address that will be shown when replying to an invite
                email
              example: replies@xyz.co
              format: email
            subject:
              type: string
              description: Subject that it will appear in the email message
              example: Please connect your work account to share your data with us
            body:
              type: string
              description: Text that it will appear in email message
              example: >-
                Hello ${firstName}! We are working with our partner, Smile API,
                so you can easily share your employment and income data to us as
                a requirement for giving you service. It will be a quick process
                and should take no more than a few seconds of your time.
        landingPage:
          type: object
          required:
            - header
            - description
            - button
          properties:
            header:
              type: string
              description: Header text that will appear in the landing page
              example: Share your employment and income data with us at ${companyName}
            description:
              type: string
              description: Description of the landing page
              example: >-
                We are working with our partner, Smile API, so you can easily
                share your employment and income data to us as a requirement for
                giving you service. It will be a quick process and should take
                no more than a few seconds of your time.
            button:
              type: string
              description: Text that it will appear in the landing page
              example: START NOW
        successPage:
          type: object
          required:
            - header
            - description
            - button
          properties:
            header:
              type: string
              description: Header text that will appear in the success page
              example: >-
                Thank you for sharing your employment and income data with us at
                ${companyName}
            description:
              type: string
              description: >-
                Description of the success page after an account has been linked
                or data has been uploaded
              example: The process was successful! Please wait for us to get in touch!
            button:
              type: string
              description: Text that it will appear in the landing page
              example: Connect another account
      required:
        - id
        - name
        - company
        - email
        - landingPage
        - successPage
    InviteTemplateListResponse:
      title: InviteTemplateListResponse
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/InviteTemplate'
    InviteTemplatePostRequest:
      type: object
      x-internal: true
      properties:
        name:
          type: string
          description: Template name
          example: Email Template v1
          minLength: 1
          maxLength: 64
        company:
          type: object
          required:
            - name
            - logoUrl
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 200
              example: XYZ Bank
              description: >-
                Company name that it will appear in the invite landing page and
                email or sms message
            logoUrl:
              type: string
              minLength: 1
              maxLength: 200
              example: https://xyzbank.co/logo.png
              description: >-
                Company logo that will appear in the invite email and landing
                page
        email:
          type: object
          required:
            - sendEmail
            - senderName
            - replyAddress
            - subject
            - body
          properties:
            sendEmail:
              type: boolean
              description: 'Send email using this template (boolean value: true/false)'
            senderName:
              type: string
              minLength: 1
              maxLength: 200
              description: Sender name that it will appear in the email message
              example: XYZ Bank
            replyAddress:
              type: string
              minLength: 1
              maxLength: 200
              description: >-
                Reply-to address that will be shown when replying to an invite
                email
              example: replies@xyz.co
              format: email
            subject:
              type: string
              minLength: 1
              maxLength: 200
              description: Subject that it will appear in the email message
              example: Please connect your work account to share your data with us
            body:
              type: string
              minLength: 1
              maxLength: 5000
              description: Text that it will appear in email message
              example: >-
                Hello ${firstName}, We are working with our partner, Smile API,
                so you can easily share your employment and income data to us as
                a requirement for giving you service. It will be a quick process
                and should take no more than a few seconds of your time.
        landingPage:
          type: object
          required:
            - header
            - description
            - button
          properties:
            header:
              type: string
              minLength: 1
              maxLength: 200
              description: Header text that will appear in the landing page
              example: >-
                We are working with our partner, Smile API, so you can easily
                share your employment and income data to us as a requirement for
                giving you service. It will be a quick process and should take
                no more than a few seconds of your time.
            description:
              type: string
              minLength: 1
              maxLength: 5000
              description: Description of the landing page
              example: Share your employment and income data with us at ${companyName}
            button:
              type: string
              minLength: 1
              maxLength: 200
              description: Text that it will appear in the landing page
              example: START NOW
        successPage:
          type: object
          required:
            - header
            - description
            - button
          properties:
            header:
              type: string
              minLength: 1
              maxLength: 200
              description: Header text that will appear in the success page
              example: The process was successful! Please wait for us to get in touch!
            description:
              type: string
              minLength: 1
              maxLength: 5000
              description: >-
                Description of the success page after an account has been linked
                or data has been uploaded
              example: >-
                Thank you for sharing your employment and income data with us at
                ${companyName}
            button:
              type: string
              minLength: 1
              maxLength: 200
              description: Text that it will appear in the landing page
              example: Connect another account
      required:
        - name
        - company
        - email
        - landingPage
        - successPage
      title: InviteTemplatePostRequest
      description: ''
    InviteTemplatePostResponse:
      title: InviteTemplatePostResponse
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/InviteTemplate'
    InviteTemplateGetResponse:
      title: InviteTemplateGetResponse
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/InviteTemplate'
    InviteTemplateUpdateRequest:
      type: object
      x-internal: true
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
          description: Template name
          example: Email Template v1
        company:
          type: object
          required:
            - name
            - logoUrl
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 200
              example: XYZ Bank
              description: >-
                Company name that it will appear in the invite landing page and
                email or sms message
            logoUrl:
              type: string
              minLength: 1
              maxLength: 200
              example: https://xyzbank.co/logo.png
              description: >-
                Company logo that will appear in the invite email and landing
                page
        email:
          type: object
          required:
            - sendEmail
            - senderName
            - replyAddress
            - subject
            - body
          properties:
            sendEmail:
              type: boolean
              description: 'Send email using this template (boolean value: true/false)'
            senderName:
              type: string
              minLength: 1
              maxLength: 200
              description: Sender name that it will appear in the email message
              example: XYZ Bank
            replyAddress:
              type: string
              minLength: 1
              maxLength: 200
              description: >-
                Reply-to address that will be shown when replying to an invite
                email
              example: replies@xyz.co
              format: email
            subject:
              type: string
              minLength: 1
              maxLength: 200
              description: Subject that it will appear in the email message
              example: Please connect your work account to share your data with us
            body:
              type: string
              minLength: 1
              maxLength: 5000
              description: Text that it will appear in email message
              example: >-
                Hello ${firstName}, We are working with our partner, Smile API,
                so you can easily share your employment and income data to us as
                a requirement for granting you a loan. It will be a quick
                process and should take no more than a few minutes of your time.
        landingPage:
          type: object
          required:
            - header
            - description
            - button
          properties:
            header:
              type: string
              minLength: 1
              maxLength: 200
              description: Header text that will appear in the landing page
              example: >-
                We are working with our partner, Smile API, so you can easily
                share your employment and income data to us as a requirement for
                granting you a loan. It will be a quick process and should take
                no more than a few minutes of your time.
            description:
              type: string
              minLength: 1
              maxLength: 5000
              description: Description of the landing page
              example: Share your employment and income data with us at ${companyName}
            button:
              type: string
              minLength: 1
              maxLength: 200
              description: Text that it will appear in the landing page
              example: START NOW
        successPage:
          type: object
          required:
            - header
            - description
            - button
          properties:
            header:
              type: string
              minLength: 1
              maxLength: 200
              description: Header text that will appear in the success page
              example: The process was successful! Please wait for us to get in touch!
            description:
              type: string
              minLength: 1
              maxLength: 5000
              description: >-
                Description of the success page after an account has been linked
                or data has been uploaded
              example: >-
                Thank you for sharing your employment and income data with us at
                ${companyName}
            button:
              type: string
              minLength: 1
              maxLength: 200
              description: Text that it will appear in the landing page
              example: Connect another account
      required:
        - name
        - company
        - email
        - landingPage
        - successPage
      title: InviteTemplateUpdateRequest
      description: ''
    InviteTemplateUpdateResponse:
      title: InviteTemplateUpdateResponse
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/InviteTemplate'
      description: ''
    InviteTemplateDeleteResponse:
      title: InviteTemplateDeleteResponse
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
      description: ''
    Link:
      type: object
      x-internal: true
      required:
        - id
        - endDate
        - metadata
      allOf:
        - $ref: '#/components/schemas/LinkPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
    LinkListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    LinkListResponse:
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              $ref: '#/components/schemas/LinkListData'
    LinkGetResponse:
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              $ref: '#/components/schemas/Link'
    FileTypeEnum:
      title: FileTypeEnum
      type: string
      description: Upload file type
      example: PAYSLIP
      enum:
        - SOCIAL_SECURITY
        - TAX_DOCUMENT
        - PAYSLIP
        - COMPANY_ID
        - ID_FRONT
        - ID_BACK
        - BANK_STATEMENT
        - UTILITY_BILLS
        - CLEARANCE_NBI
        - CLEARANCE_POLICE
        - CLEARANCE_BARANGAY
        - OTHERS
    RawFile:
      title: RawFile
      type: object
      description: >-
        Scanned or photographed document or form uploaded by the user to be able
        to share hardcopy employment and income information. File size limit is
        15 MB.
      x-examples: {}
      x-internal: false
      x-tags:
        - Uploads
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        name:
          type: string
          example: Screen Shot 2021-04-14 at 5.30.24 PM
          description: File name
        subType:
          type: string
          example: PERSONAL_INFORMATION
          description: Type of document uploaded
          nullable: true
        size:
          type: integer
          description: File size in kilobytes
          example: 3048
        format:
          type: string
          enum:
            - PDF
            - PNG
            - JPG
            - JPEG
          example: PNG
          description: File type (only JPEG, PNG, PDF, or JPG formats are supported)
        url:
          type: string
          description: URL to access the file. URL will expire after 60 days
          example: >-
            https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
      required:
        - id
        - createdAt
        - name
        - subType
        - size
        - format
        - url
    ArchiveClassification:
      type: object
      required:
        - fileType
      properties:
        fileType:
          type: string
          enum:
            - PAYSLIP
            - TAX_DOCUMENT
            - EMPLOYMENT_CERTIFICATE
            - OTHERS
    RefDate:
      type: string
      format: date
      description: The date, yyyy-MM-dd
      example: '2000-01-21'
    ArchivePayslipAnalysis:
      title: Payslip Analysis
      type: object
      properties:
        startDate:
          $ref: '#/components/schemas/RefDate'
        endDate:
          $ref: '#/components/schemas/RefDate'
        payDate:
          $ref: '#/components/schemas/RefDate'
        currency:
          $ref: '#/components/schemas/RefCurrency'
        grossAmount:
          type: number
          description: Base amount
        netAmount:
          type: number
          description: Base amount
        employerName:
          type: string
        employeeName:
          type: string
          description: Employee name
        ssNumber:
          type: string
          description: Employee' Social Security (SS) Number
        philHealthNumber:
          type: string
          description: Employee' PhilHealth Identification Number
        taxNumber:
          type: string
          description: Employee' Tax Identification Number
        pagIbigNumber:
          type: string
          description: Employee' Pag-IBIG MID Number
    ArchiveTaxDocumentAnalysis:
      title: Tax Document Analysis
      type: object
      properties:
        startDate:
          $ref: '#/components/schemas/RefDate'
        endDate:
          $ref: '#/components/schemas/RefDate'
        grossAmount:
          type: number
          description: Gross amount
        baseAmount:
          type: number
          description: Base amount
        employerName:
          type: string
        employeeName:
          type: string
          description: Employee name
        taxNumber:
          type: string
          description: Employee' Tax Identification Number
    ArchiveNbiClearanceDocumentAnalysis:
      title: NBI clearance Document Analysis
      type: object
      properties:
        expireDate:
          $ref: '#/components/schemas/RefDate'
        dateOfBirth:
          $ref: '#/components/schemas/RefDate'
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        middleName:
          type: string
          description: Middle name
        nbiIdNumber:
          type: string
          description: NBI Id Number
        address:
          type: string
          description: Address
        maritalStatus:
          $ref: '#/components/schemas/RefMaritalStatus'
        gender:
          $ref: '#/components/schemas/RefGender'
        citizenship:
          type: string
          description: Citizenship
        remark:
          type: string
    ArchiveAnalysis:
      oneOf:
        - $ref: '#/components/schemas/ArchivePayslipAnalysis'
        - $ref: '#/components/schemas/ArchiveTaxDocumentAnalysis'
        - $ref: '#/components/schemas/ArchiveNbiClearanceDocumentAnalysis'
    Archive:
      title: Archive
      type: object
      description: Collection of files.
      x-internal: true
      x-examples:
        Example:
          id: u-17bbf36498de4d68a0d4f86c7b62f69f
          createdAt: '2021-04-14T09:30:24Z'
          providerId: user-provided
          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
          type: PAYSLIP
          state:
            status: STARTED
            errorCode: null
            errorMessage: null
            updatedAt: '2021-04-14T09:30:24Z'
          rawFiles:
            - id: f-17bbf36498de4d68a0d4f86c7b62f69f
              createdAt: '2021-04-14T09:30:24Z'
              name: Screen Shot 2021-04-14 at 5.30.24 PM
              subType: PERSONAL_INFORMATION
              size: 3048
              format: PNG
              url: >-
                https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
          classification: null
          analysis: null
      x-tags:
        - Archives
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        providerId:
          type: string
          example: user-provided
          description: ID of the data provider
        userId:
          type: string
          description: User ID associated with this account
          example: tenant-5c1a2e8678e3494eba303ad1afa54ee8
        type:
          $ref: '#/components/schemas/FileTypeEnum'
        state:
          type: object
          required:
            - status
            - updatedAt
          properties:
            status:
              type: string
              example: STARTED
              enum:
                - STARTED
                - ANALYZED
                - UNSUPPORTED
                - ERROR
                - REVOKED
              description: Archive status
            errorCode:
              type: string
              description: Error code
              enum:
                - MISSING_MANDATARY_FIELD
                - MISSING_MANDATORY_FIELD
                - INVALID_FIELD_FORMAT
                - SYSTEM_ERROR
                - null
              nullable: true
            errorMessage:
              type: string
              description: Error message
              nullable: true
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
        rawFiles:
          description: Collection of files
          type: array
          items:
            $ref: '#/components/schemas/RawFile'
        classification:
          $ref: '#/components/schemas/ArchiveClassification'
        analysis:
          $ref: '#/components/schemas/ArchiveAnalysis'
      required:
        - id
        - createdAt
        - providerId
        - userId
        - type
        - state
        - rawFiles
    ArchiveListResponse:
      title: Archive List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Archive'
      x-internal: true
    FileSubtype:
      type: string
      enum:
        - PAYSLIP
        - PERSONAL_INFORMATION
        - EMPLOYMENT_INFORMATION
        - TAX_PAYMENT
        - COMPANY_ID_FRONT
        - COMPANY_ID_BACK
    FileObject:
      type: object
      required:
        - fileContent
        - fileExtensionType
      properties:
        fileSubtype:
          $ref: '#/components/schemas/FileSubtype'
        fileName:
          type: string
          description: >-
            raw file name. If null, then Smile will use the file name from the
            fileType.
        fileExtensionType:
          type: string
          description: raw file type
          enum:
            - PDF
            - PNG
            - JPG
            - JPEG
        fileContent:
          type: string
          description: Archive file content, use base64 of file byte data
    ArchiveCreateRequest:
      type: object
      required:
        - files
      properties:
        userId:
          type: string
          description: >-
            User ID associated with this archive. If null, then Smile will
            create a new user associated with this archive
        fileType:
          $ref: '#/components/schemas/FileTypeEnum'
        rawFiles:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/FileObject'
    ArchiveCreateResponse:
      title: Archive Create Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Archive'
      description: Create Archive Response
      x-internal: true
    ArchiveGetResponse:
      title: Archive Get Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Archive'
      description: ''
      x-internal: true
    ArchiveClassifyRequest:
      type: object
      properties:
        userId:
          type: string
          description: >-
            User ID associated with this archive. If null, then Smile will
            create a new user associated with this archive
        rawFiles:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/FileObject'
    ArchiveClassifyResponse:
      type: object
      title: Archive Classify Response
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Archive'
    ArchivePayslipRawFileUploadRequest:
      type: object
      required:
        - userId
        - fileContent
        - fileExtensionType
      properties:
        userId:
          type: string
        fileExtensionType:
          type: string
          description: raw file type
          enum:
            - PDF
            - PNG
            - JPG
            - JPEG
        fileContent:
          type: string
          description: Payslip file content, use base64 of file byte data
    ArchiveResponse:
      title: Archive Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Archive'
      description: ''
      x-internal: true
    ArchivePayslip:
      type: object
      properties:
        startDate:
          type: string
          format: date
          description: start date of the payslip
        endDate:
          type: string
          format: date
          description: end date of the payslip
        payDate:
          type: string
          format: date
          description: pay date of the payslip
        currency:
          $ref: '#/components/schemas/RefCurrency'
        grossAmount:
          type: number
          description: Base amount
        netAmount:
          type: number
          description: Base amount
        employerName:
          type: string
        employeeName:
          type: string
          description: Employee name
        ssNumber:
          type: string
          description: Employee' Social Security (SS) Number
        philHealthNumber:
          type: string
          description: Employee' PhilHealth Identification Number
        taxNumber:
          type: string
          description: Employee' Tax Identification Number
        pagIbigNumber:
          type: string
          description: Employee' Pag-IBIG MID Number
        matchResult:
          type: object
          properties:
            employeeNameAndIdentificationNumberMatchScore:
              type: integer
              maximum: 100
              minimum: 0
              description: >-
                The match score of the employee's name and all identification
                numbers. If Smile can not verify it or you disabled verify
                feature, this value will be null. If mutilple identification
                numbers have a match score, take the lowest match score.
            employeeNameAndSsNumberMatchScore:
              type: integer
              maximum: 100
              minimum: 0
              description: >-
                The match score of the employee name and SS number. If Smile can
                not verify it or you disabled verify feature, this value will be
                null.
            employeeNameAndPagIbigNumberMatchScore:
              type: integer
              maximum: 100
              minimum: 0
              description: >-
                The match score of the employee name and PagIbig number. If
                Smile can not verify it or you disabled verify feature, this
                value will be null.
            employeeNameAndPhilHealthNumberMatchScore:
              type: integer
              maximum: 100
              minimum: 0
              description: >-
                The match score of the employee name and Phil Health number. If
                Smile can not verify it or you disabled verify feature, this
                value will be null.
            employeeNameAndTaxNumberMatchScore:
              type: integer
              maximum: 100
              minimum: 0
              description: >-
                The match score of the employee name and tax number. If Smile
                can not verify it or you disabled verify feature, this value
                will be null.
    ArchivePayslipMetaData:
      type: object
      required:
        - metadata
      properties:
        metadata:
          $ref: '#/components/schemas/ObjectReferenceMetadata'
    ArchivePayslipPredictionQueryResponseData:
      allOf:
        - $ref: '#/components/schemas/ArchivePayslip'
        - $ref: '#/components/schemas/ArchivePayslipMetaData'
    ArchivePayslipPredictionQueryResponse:
      title: Archive Payslip Prediction Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/ArchivePayslipPredictionQueryResponseData'
      description: ''
      x-internal: true
    ArchivePayslipPredictionsListResponse:
      title: Archive Payslip Predictions List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/ArchivePayslipPredictionQueryResponseData'
      x-internal: true
      x-examples: {}
    ArchivePayslipManualResultSendRequest:
      type: object
      required:
        - archiveId
        - validFile
      properties:
        archiveId:
          type: string
        validFile:
          type: boolean
          description: The file is payslip or not
        checkedFields:
          type: array
          description: Which fields already checked manually.
          items:
            type: string
        data:
          type: object
          properties:
            startDate:
              type: string
              format: date
              description: start date of the payslip
            endDate:
              type: string
              format: date
              description: end date of the payslip
            currency:
              $ref: '#/components/schemas/RefCurrency'
            grossAmount:
              type: number
              description: Base amount
            netAmount:
              type: number
              description: Base amount
            employerName:
              type: string
            employeeName:
              type: string
              description: Employee name
            payDate:
              type: string
              format: date
              description: pay date of the payslip
            ssNumber:
              type: string
              description: Employee' Social Security (SS) Number
            philHealthNumber:
              type: string
              description: Employee' PhilHealth Identification Number
            taxNumber:
              type: string
              description: Employee' Tax Identification Number
            pagIbigNumber:
              type: string
              description: Employee' Pag-IBIG MID Number
    Upload:
      title: Upload
      type: object
      description: Collection of files.
      x-internal: false
      x-examples:
        Example:
          id: u-17bbf36498de4d68a0d4f86c7b62f69f
          createdAt: '2021-04-14T09:30:24Z'
          providerId: user-provided
          userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
          type: PAYSLIP
          state:
            status: STARTED
            errorCode: null
            errorMessage: null
            updatedAt: '2021-04-14T09:30:24Z'
          rawFiles:
            - id: f-17bbf36498de4d68a0d4f86c7b62f69f
              createdAt: '2021-04-14T09:30:24Z'
              name: Screen Shot 2021-04-14 at 5.30.24 PM
              subType: PERSONAL_INFORMATION
              size: 3048
              format: PNG
              url: >-
                https://file.smileapi.io/tenants/smileapi/users/smileapi-17bbf36498de4d68a0d4f86c7b62f69f/files/file-17bbf36498de4d68a0d4f86c7b62f69f.jpeg
      x-tags:
        - Uploads
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        providerId:
          type: string
          example: user-provided
          description: ID of the data provider
        userId:
          type: string
          description: User ID associated with this account
          example: tenant-5c1a2e8678e3494eba303ad1afa54ee8
        type:
          $ref: '#/components/schemas/FileTypeEnum'
        state:
          type: object
          required:
            - status
            - updatedAt
          properties:
            status:
              type: string
              example: STARTED
              enum:
                - STARTED
                - ANALYZED
                - UNSUPPORTED
                - ERROR
                - REVOKED
              description: Upload status
            errorCode:
              type: string
              description: Error code
              enum:
                - MISSING_MANDATARY_FIELD
                - MISSING_MANDATORY_FIELD
                - INVALID_FIELD_FORMAT
                - SYSTEM_ERROR
                - null
              nullable: true
            errorMessage:
              type: string
              description: Error message
              nullable: true
            updatedAt:
              $ref: '#/components/schemas/RefDateTime'
        rawFiles:
          description: Collection of files
          type: array
          items:
            $ref: '#/components/schemas/RawFile'
      required:
        - id
        - createdAt
        - providerId
        - userId
        - type
        - state
        - rawFiles
    UploadListResponse:
      title: Upload List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Upload'
      x-internal: true
    UploadGetResponse:
      title: Upload Get Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Upload'
      description: ''
      x-internal: true
    FileType:
      title: FileType
      type: object
      description: File types that are available for upload.
      x-examples:
        Example:
          logoUrl: https://cdn.smileapi.io/image/provider-logo/v20210813064500/sss.png
          type: SOCIAL_SECURITY
          typeLabel: SSS Records
          active: true
          enabled: true
          ocr: true
          supported:
            - IDENTITIES
            - DOCUMENTS
            - EMPLOYMENTS
      x-tags:
        - File Types
      properties:
        logoUrl:
          type: string
          description: URL to the file type image
          example: https://cdn.smileapi.io/image/provider-logo/v20210813064500/sss.png
        type:
          $ref: '#/components/schemas/FileTypeEnum'
        typeLabel:
          type: string
          description: Upload file type label
          example: SSS Records
        active:
          type: boolean
          description: Indicates whether upload for file type is working
        enabled:
          type: boolean
          description: >-
            Indicates whether whether upload of file type is enabled or access
            is allowed for the client
        ocr:
          type: boolean
          description: Whether OCR for file type is supported
        supported:
          type: array
          description: The datapoints that the provider could support
          items:
            type: string
            description: Datapoint
            enum:
              - IDENTITIES
              - TRANSACTIONS
              - RATINGS
              - EMPLOYMENTS
              - DOCUMENTS
              - INCOMES
              - CONTRIBUTIONS
              - EINCOMES
              - LIABILITIES
              - NONE
      required:
        - logoUrl
        - type
        - typeLabel
        - active
        - enabled
        - ocr
        - supported
    FileTypeListResponse:
      title: FileType List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/FileType'
    VerificationIdType:
      type: string
      enum:
        - sss_ph
        - pagibig_ph
        - prclicense_ph
        - tin_ph
        - nbi_ph
    VerificationId:
      type: object
      required:
        - idType
        - idNumber
      properties:
        idType:
          $ref: '#/components/schemas/VerificationIdType'
        idSubType:
          type: string
          description: >-
            If idType = prclicense_ph, subtype should be one of the
            PrcProfessionEnum value.
        idNumber:
          type: string
    Consent:
      type: object
      required:
        - consentedAt
        - consentedWith
      properties:
        type:
          type: string
          description: >-
            The consent flag key, the consent content should be sent to Smile
            previously
          example: Terms and Conditions
        version:
          type: string
          description: The version of this consent
          example: 1.0.0
        consentedAt:
          $ref: '#/components/schemas/RefDateTime'
        consentedWith:
          type: string
          description: The short sentences diplay on the consent page.
          example: I agree to the terms and conditions
        consentTemplateId:
          type: string
          description: >-
            The releated consent template id, you can get it from Smile
            Developer Portal or /consentTemplates endpoint.
          example: ct-4604588d9502491b4c72a67cdb0a2aea
    VerificationCreateRequest:
      type: object
      required:
        - consent
      properties:
        firstName:
          type: string
          example: John
          description: First Name
        middleName:
          type: string
          example: Doe
          description: Middle Name
        lastName:
          type: string
          example: Smith
          description: Last Name
        suffix:
          type: string
          example: Jr
          description: Suffix
        fullName:
          type: string
          example: John Doe Smith Jr
          description: Full Name
        additionalData:
          type: object
          properties:
            email:
              type: string
              example: john.doe@smile.com
            phone:
              type: string
              example: 6391234567890
            dob:
              $ref: '#/components/schemas/RefDate'
            gender:
              $ref: '#/components/schemas/RefGender'
            address:
              type: string
              example: 123 Main St, Anytown, CA 12345
              description: The address you want to verify
            employer:
              type: string
              example: Google
              description: Employer name
            employmentStatus:
              type: string
              description: Employment status
              enum:
                - EMPLOYED
                - UNEMPLOYED
                - SELF-EMPLOYED
                - GIG
                - RETIRED
            ids:
              type: array
              items:
                $ref: '#/components/schemas/VerificationId'
        consent:
          $ref: '#/components/schemas/Consent'
    VerificationIdMatchResult:
      type: object
      required:
        - idNumber
        - idType
        - matches
      properties:
        idNumber:
          type: string
        idType:
          type: string
        idSubtype:
          type: string
        matches:
          type: boolean
    VerificationContactMatchResult:
      type: object
      properties:
        value:
          type: string
          description: The value of the contact
        matches:
          type: boolean
          description: >-
            Full match result. If request without this field or Smile do not
            support to match this field, then the value is null.
        disposable:
          type: boolean
          description: >-
            Disposable email/phone. If request without this field or Smile do
            not support to match this field, then the value is null.
        deliverable:
          type: boolean
          description: >-
            Deliverable email/phone. If request without this field or Smile do
            not support to match this field, then the value is null.
        active:
          type: boolean
          description: >-
            Active email/phone. If request without this field or Smile do not
            support to match this field, then the value is null.
        provider:
          type: string
          description: The provider of the contact
        freeProvider:
          type: boolean
          description: If the provider is free provider.
    VerificationResult:
      type: object
      required:
        - finalMatches
        - names
      properties:
        finalMatches:
          type: boolean
          description: The final match result
        names:
          type: object
          properties:
            firstNameMatches:
              type: boolean
              description: >-
                First name fuzzy match result. If request without firstName or
                Smile do not support to match this field, then the value is
                null.
            lastNameMatches:
              type: boolean
              description: >-
                First name fuzzy match result. If request without lastName or
                Smile do not support to match this field, then the value is
                null.
            middleNameMatches:
              type: boolean
              description: >-
                Middle name fuzzy match result. If request without middleName or
                Smile do not support to match this field, then the value is
                null.
            fullNameMatches:
              type: boolean
              description: >-
                Full name fuzzy match result. If request without fullName or
                Smile do not support to match this field, then the value is
                null.
        additionalData:
          type: object
          properties:
            ids:
              type: array
              items:
                $ref: '#/components/schemas/VerificationIdMatchResult'
            dobMatches:
              type: boolean
              description: >-
                Dob full match result. If request without dob or Smile do not
                support to match this field, then the value is null.
            genderMatches:
              type: boolean
              description: >-
                Gender full match result. If request without gender or Smile do
                not support to match this field, then the value is null.
            phoneMatches:
              $ref: '#/components/schemas/VerificationContactMatchResult'
            emailMatches:
              $ref: '#/components/schemas/VerificationContactMatchResult'
            addressMatches:
              type: boolean
              description: >-
                Address fuzzy match result. If request without address or Smile
                do not support to match this field, then the value is null.
    Verification:
      type: object
      required:
        - id
        - createdAt
        - status
        - updatedAt
      properties:
        id:
          type: string
          description: The ID of the verification
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        status:
          type: string
          description: The status of the verification
          enum:
            - PROCESSING
            - COMPLETED
            - ERROR
        updatedAt:
          $ref: '#/components/schemas/RefDateTime'
        errorMessage:
          type: string
          description: Error message when the status is error
        requestMeta:
          $ref: '#/components/schemas/VerificationCreateRequest'
        result:
          $ref: '#/components/schemas/VerificationResult'
    VerificationListResponse:
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Verification'
    VerificationCreateResponse:
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Verification'
    VerificationGetResponse:
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Verification'
    ObjectSignalRefResult:
      type: object
      title: Object-Signal-Ref-result
      properties:
        events_marketing_day30_institution_count:
          type: integer
          example: 0
          description: >-
            Number of institutions with marketing promotion events in the last
            30 days
        events_application_reception_day30:
          type: integer
          example: 1
          description: Number of application reception events in the last 30 days
        events_application_reception_day30_institution_count:
          type: integer
          example: 9
          description: >-
            Number of institutions with application reception events in the last
            30 days
        events_application_approval_day30:
          type: integer
          example: 3
          description: Number of application approval events in the last 30 days
        events_loan_disbursement_day30:
          type: integer
          example: 9
          description: Number of loan disbursement events in the last 30 days
        events_loan_disbursement_day30_institution_count:
          type: integer
          example: 0
          description: >-
            Number of institutions with loan disbursement events in the last 30
            days
        events_repayment_reminder_day30:
          type: integer
          example: 9
          description: Number of repayment reminder events in the last 30 days
        events_repayment_reminder_day30_institution_count:
          type: integer
          example: 9
          description: >-
            Number of institutions with repayment reminder events in the last 30
            days
        events_successful_repayment_day30:
          type: integer
          example: 9
          description: Number of successful repayment events in the last 30 days
        events_successful_repayment_day30_institution_count:
          type: integer
          example: 9
          description: >-
            Number of institutions with successful repayment events in the last
            30 days
        events_overdue_day30:
          type: integer
          example: 9
          description: Number of overdue events in the last 30 days
        events_overdue_day30_institution_count:
          type: integer
          example: 9
          description: Number of institutions with overdue events in the last 30 days
        events_overdue_day30_amount:
          type: integer
          example: 9
          description: Amount of overdue events in the last 30 days
        events_debt_day30_amount:
          type: integer
          example: 9
          description: Amount of debt events in the last 30 days
        events_overdue_day30_days:
          type: integer
          example: 9
          description: Number of days of overdue events in the last 30 days
        events_marketing_day90_institution_count:
          type: integer
          example: 9
          description: >-
            Number of institutions with marketing promotion events in the last
            90 days
        events_application_reception_day90:
          type: integer
          example: 9
          description: Number of application reception events in the last 90 days
        events_loan_disbursement_day90:
          type: integer
          example: 9
          description: Number of loan disbursement events in the last 90 days
        events_loan_disbursement_day90_institution_count:
          type: integer
          example: 9
          description: >-
            Number of institutions with loan disbursement events in the last 90
            days
        events_overdue_day90:
          type: integer
          example: 9
          description: Number of overdue events in the last 90 days
        events_overdue_day90_institution_count:
          type: integer
          example: 0
          description: Number of institutions with overdue events in the last 90 days
        events_overdue_day90_amount:
          type: integer
          example: 9
          description: Amount of overdue events in the last 90 days
        events_debt_day90_amount:
          type: integer
          example: 1
          description: Amount of debt events in the last 90 days
        events_overdue_day90_days:
          type: integer
          example: 4
          description: Number of days of overdue events in the last 90 days
        events_marketing_day180_institution_count:
          type: integer
          example: 9
          description: >-
            Number of institutions with marketing promotion events in the last
            180 days
        events_application_reception_day180:
          type: integer
          example: 9
          description: Number of application reception events in the last 180 days
        events_loan_disbursement_day180:
          type: integer
          example: 9
          description: Number of loan disbursement events in the last 180 days
        events_loan_disbursement_day180_institution_count:
          type: integer
          example: 9
          description: >-
            Number of institutions with loan disbursement events in the last 180
            days
        events_overdue_day180:
          type: integer
          example: 9
          description: Number of overdue events in the last 180 days
        events_overdue_day180_institution_count:
          type: integer
          example: null
          description: Number of institutions with overdue events in the last 180 days
        events_overdue_day180_amount:
          type: integer
          example: 9
          description: Amount of overdue events in the last 180 days
        events_overdue_day180_days:
          type: integer
          example: 0
          description: Number of days of overdue events in the last 180 days
        events_loan_disbursement_days_since_last:
          type: integer
          example: 9
          description: Number of days since the last loan disbursement event
        events_successful_repayment_days_since_last:
          type: integer
          example: 4
          description: Number of days since the last successful repayment event
        events_overdue_days_since_last:
          type: integer
          example: 1
          description: Number of days since the last overdue event
    Signal:
      type: object
      required:
        - id
        - createdAt
        - status
        - requestMeta
      properties:
        id:
          type: string
          description: Unique ID for the Signal Request
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
        status:
          type: string
          description: Current status of the Signal Request
          enum:
            - PROCESSING
            - ERROR
            - COMPLETED
        resultCode:
          type: string
          description: Final result of the Signal Request
          enum:
            - SUCCESS
            - NO_DATA
            - SYSTEM_ERROR
            - SERVICE_UNAVAILABLE
        resultMessage:
          type: string
          description: Longer description of the final result of the Signal Request
        requestMeta:
          type: object
          properties:
            phone:
              type: string
              description: Subject's mobile number provided in the request
              example: '+639178912345'
            consent:
              $ref: '#/components/schemas/Consent'
        result:
          $ref: '#/components/schemas/ObjectSignalRefResult'
    SignalListResponse:
      title: Signal list Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Signal'
    SignalPostRequest:
      type: object
      required:
        - consent
        - phone
      properties:
        phone:
          type: string
          description: >-
            Subject's mobile number. Must start with country code i.e.
            +639178912345, and no leading zeros
          example: '+639178902345'
        consent:
          $ref: '#/components/schemas/Consent'
    SignalPostResponse:
      title: Signal Post Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Signal'
    SignalGetResponse:
      title: Signal Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Signal'
    Identity:
      type: object
      title: Identity
      description: >-
        The stored identity information of the user from an employment data
        provider.
      x-examples:
        Example:
          id: i-17bbf36498de4d68a0d4f86c7b62f69f
          fullName: George Cimafranca Palomero, Jr
          firstName: George
          middleName: Cimafranca
          lastName: Palomero
          suffix: Jr
          gender: Male
          dob: '1970-08-24'
          maritalStatus: Married
          countryResidence: PH
          citizenship: Citizen
          photoUrl: https://cdn.smileapi.io/image/avatar/v20211115191600/george.jpg
          referenceId: null
          profileUrl: null
          emails:
            - address: gpalomero1234@yahoo.com
              type: Primary
          phones:
            - number: '+639559991234'
              type: Mobile
          socialProfiles:
            - socialUrl: https://www.facebook.com/gpalomero
              type: Facebook
          addresses:
            - fullAddress: 12 Maybunga St, Barangay Paraiso, Pasig City, NCR, 1600, PH
              line1: 12 Maybunga St
              line2: Barangay Paraiso
              city: Pasig City
              region: NCR
              zip: '1600'
              country: PH
              latitude: '14.573454'
              longitude: '121.085042'
              type: Primary
          metadata:
            createdAt: '2021-04-14T09:30:24Z'
            itemCreatedAt: '2021-04-14T09:30:26Z'
            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
            sourceType: ACCOUNT
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: upwork
      x-tags:
        - Identities
      allOf:
        - $ref: '#/components/schemas/IdentityPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - fullName
        - emails
        - phones
        - socialProfiles
        - addresses
        - metadata
    IdentityListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Identity'
    IdentityListResponse:
      title: Identity List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/IdentityListData'
      x-internal: true
      x-examples: {}
    IdentityGetResponse:
      title: Identity Get Response
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Identity'
      x-internal: true
      x-examples: {}
    Rating:
      title: Rating
      type: object
      description: >-
        The stored performance ratings of the user in the employment data
        provider.
      x-internal: false
      x-examples:
        Example:
          id: r-17bbf36498de4d68a0d4f86c7b62f69f
          currentRating: 90
          maxRating: 100
          calculatedPercentage: 90
          reviewsReceived: 12
          likesReceived: 8
          jobsCompleted: 12
          metadata:
            createdAt: '2021-04-14T09:30:24Z'
            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
            sourceType: ACCOUNT
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: upwork
      x-tags:
        - Ratings
      allOf:
        - $ref: '#/components/schemas/RatingPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - metadata
    RatingListResponse:
      title: Rating List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Rating'
    RatingGetResponse:
      title: Rating Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Rating'
    Document:
      title: Document
      type: object
      x-internal: false
      description: >-
        The stored document-related information of the user from an employment
        data provider.
      x-examples:
        Example:
          id: d-17bbf36498de4d68a0d4f86c7b62f69f
          name: Facebook Social Media Marketing Professional Certificate
          docId: ABCD123456
          documentType: IDENTIFICATION
          status: VALID
          issueDate: '2007-08-24'
          expiryDate: '2010-08-24'
          fileUrl: >-
            https://images.credly.com/size/680x680/images/c4a900b7-8d1b-4e8f-a572-347985eeaa5c/Coursera_Badge__1_.png
          remarks: NO RECORD ON FILE
          metadata:
            createdAt: '2021-04-14T09:30:24Z'
            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
            sourceType: ACCOUNT
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: upwork
      x-tags:
        - Documents
      allOf:
        - $ref: '#/components/schemas/DocumentPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - name
        - metadata
    DocumentListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    DocumentListResponse:
      title: Document List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/DocumentListData'
    DocumentGetResponse:
      title: Document Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Document'
    Employment:
      title: Employment
      type: object
      x-internal: false
      description: >-
        The stored employment information of the user from an employment data
        provider.
      x-examples:
        Example:
          id: e-17bbf36498de4d68a0d4f86c7b62f69f
          name: Digital Marketing
          description: >-
            Gathering and reporting relevant data, maintaining specific reports
            and dashboards, using platforms and programs to address marketing
            requirements, and updating specific marketing materials.
          jobTitle: Digital Marketing Assistant
          department: Marketing
          employeeNumber: EMP-123456
          employer: ABC Corporation
          status: Permanent
          startDate: '2016-02-24'
          endDate: '2019-08-24'
          metadata:
            createdAt: '2021-04-14T09:30:24Z'
            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
            sourceType: UPLOAD
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: abccorp
      x-tags:
        - Employments
      allOf:
        - $ref: '#/components/schemas/EmploymentPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - startDate
        - metadata
    EmploymentListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Employment'
    EmploymentListResponse:
      title: Employment List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/EmploymentListData'
    EmploymentGetResponse:
      title: Employment Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Employment'
    Income:
      title: Income
      type: object
      description: >-
        The stored income information of the user from an employment data
        provider.
      x-examples:
        Example:
          id: inc-17bbf36498de4d68a0d4f86c7b62f69f
          workItem: null
          employer: ABC Corporation
          startDate: '2021-06-01'
          endDate: '2021-06-15'
          currency: PHP
          frequency: Monthly
          baseAmount: 8500
          grossAmount: 10000
          netAmount: 7820.25
          metadata:
            createdAt: '2021-06-14T09:30:24Z'
            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
            sourceType: UPLOAD
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: user-provided
      x-internal: false
      x-tags:
        - Incomes
      allOf:
        - $ref: '#/components/schemas/IncomePayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - startDate
        - currency
        - metadata
    IncomeListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Income'
    IncomeListResponse:
      title: Income List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/IncomeListData'
    IncomeGetResponse:
      title: Income Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Income'
    Contribution:
      title: Contribution
      x-stoplight:
        id: ymth27j2l09a4
      type: object
      description: >-
        The social security insurance contribution made by, or in behalf, of a
        user as recorded by the employment data provider.
      x-examples:
        Example:
          id: 17bbf36498de4d68a0d4f86c7b62f69f
          date: '2021-04-30'
          currency: PHP
          amount: 1375
          referenceId: PA9634415
          metadata:
            createdAt: '2021-04-14T09:30:24Z'
            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
            sourceType: ACCOUNT
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: sss-ph
      x-tags:
        - Contributions
      allOf:
        - $ref: '#/components/schemas/ContributionPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
    ContributionListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Contribution'
    ContributionListResponse:
      title: Contribution List Response
      x-stoplight:
        id: xqq606vnqa1nk
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/ContributionListData'
    ContributionGetResponse:
      title: Contribution Get Response
      x-stoplight:
        id: 9r9jv3d46jvrw
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Contribution'
      x-internal: true
    Liability:
      title: Liability
      type: object
      description: The liabilities of the user from an employment data provider.
      x-examples:
        Example:
          id: lia-123abc456def789abc123def456abc78
          type: Salary Loan
          referenceId: SL201601011234567
          startDate: '2016-07-05'
          firstAmortizationDate: '2016-09-01'
          endDate: '2017-08-01'
          amortizationFrequency: Monthly
          currency: PHP
          loanAmount: 16000
          amortizationAmount: 738.32
          outstandingBalance: 25599.76
          nextPaymentAmount: 732.38
          overduePaymentAmount: 0
          metadata:
            createdAt: '2021-06-14T09:30:24Z'
            sourceId: a-123abc456def789abc123def456abc78
            sourceType: ACCOUNT
            userId: tenantId-123abc456def789abc123def456abc78
            providerId: abccorp
      x-internal: false
      x-tags:
        - Liabilities
      allOf:
        - $ref: '#/components/schemas/LiabilityPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - type
        - startDate
        - loanAmount
        - currency
        - amortizationFrequency
        - metadata
    LiabilityListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Liability'
    LiabilityListResponse:
      title: Liability List Response
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              $ref: '#/components/schemas/LiabilityListData'
    LiabilityGetResponse:
      title: Liability Get Response
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              $ref: '#/components/schemas/Liability'
    Transaction:
      title: Transaction
      type: object
      description: >-
        The stored financial transaction data of the user from an employment
        data provider.
      x-tags:
        - Transactions
      x-examples:
        Example:
          code: OK
          message: Success
          requestId: 5b79399a-6852-4234-bb0e-ad472648282d
          data:
            id: t-17bbf36498de4d68a0d4f86c7b62f69f
            date: '2021-04-21'
            description: Payment for web design project
            currency: PHP
            amount: 10000
            referenceId: string
            metadata:
              createdAt: '2021-04-21T09:30:24Z'
              sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
              sourceType: ACCOUNT
              userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
              providerId: upwork
      allOf:
        - $ref: '#/components/schemas/TransactionPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - date
        - currency
        - amount
        - metadata
    TransactionListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    TransactionListResponse:
      title: Transaction List Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/TransactionListData'
      x-internal: true
      x-examples: {}
    TransactionGetResponse:
      title: Transaction Get Response
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Transaction'
      x-internal: true
      x-examples: {}
    Eincome:
      title: Eincome
      type: object
      description: >-
        The stored eincome information of the user from an employment data
        provider.
      x-examples:
        Example:
          id: einc-17bbf36498de4d68a0d4f86c7b62f69f
          month: 2021-06
          currency: PHP
          amount: 8500
          metadata:
            createdAt: '2021-06-14T09:30:24Z'
            sourceId: a-17bbf36498de4d68a0d4f86c7b62f69f
            sourceType: ACCOUNT
            userId: tenant-5c1a2e8678e3494eba303ad1afa54ee8
            providerId: sss_ph
      x-internal: false
      x-tags:
        - Estimated Incomes
      allOf:
        - $ref: '#/components/schemas/EincomePayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
      required:
        - id
        - month
        - currency
        - baseAmount
        - amount
        - metadata
    EincomeListData:
      type: object
      properties:
        nextCursor:
          $ref: '#/components/schemas/ObjectNextCursor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Eincome'
    EincomeListResponse:
      title: Enhanced Income List Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/EincomeListData'
    EincomeGetResponse:
      title: Enhanced Income Get Response
      type: object
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/ObjectMetadataRefCode'
        message:
          $ref: '#/components/schemas/ObjectMetadataRefMessage'
        requestId:
          $ref: '#/components/schemas/ObjectMetadataRefRequestID'
        data:
          $ref: '#/components/schemas/Eincome'
    Insight:
      title: Insight
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/InsightPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/ObjectReferenceMetadata'
    InsightListResponse:
      title: Insight List Response
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              type: object
              properties:
                nextCursor:
                  $ref: '#/components/schemas/ObjectNextCursor'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Insight'
    InsightGetResponse:
      title: Insight Get Response
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              $ref: '#/components/schemas/Insight'
    ProfileIdentityVerifyRequest:
      title: object
      required:
        - idType
        - idNumber
        - firstName
      properties:
        idType:
          type: string
          description: The identification type, currently only support SSS
          enum:
            - SSS
        idNumber:
          type: string
          description: Identification number
        firstName:
          type: string
          description: User first name
        lastName:
          type: string
          description: User last name
        dob:
          type: string
          format: date
          description: The day of birth, yyyy-MM-dd
          example: '2000-01-21'
        middleName:
          type: string
          description: User middle name
        suffix:
          type: string
          description: User suffix
        mobile:
          type: string
          description: User mobile number
        email:
          type: string
          description: User email address
        gender:
          $ref: '#/components/schemas/RefGender'
        maritalStatus:
          $ref: '#/components/schemas/RefMaritalStatus'
    ProfileIdentityVerifyData:
      type: object
      required:
        - hit
      properties:
        hit:
          type: boolean
          description: >-
            if the identification number is invalid or it can not be found then
            the value is false
        message:
          type: string
          description: Some descriptions for this result
        result:
          type: object
          required:
            - nameMatchScore
          properties:
            nameMatchScore:
              type: integer
              maximum: 100
              minimum: 0
              description: The idNumber firstName, lastName match score
            dobMatched:
              type: boolean
              description: >-
                The dob matched or not, if the dob in request parameters is
                null, then return null
            mobileMatched:
              type: boolean
              description: >-
                The mobile matched or not, if the mobile in request parameters
                is null, then return null
            emailMatched:
              type: boolean
              description: >-
                The email matched or not, if the email in request parameters is
                null, then return null
            genderMatched:
              type: boolean
              description: >-
                The gender matched or not, if the gender in request parameters
                is null, then return null
            maritalStatusMatched:
              type: boolean
              description: >-
                The maritalStatus matched or not, if the maritalStatus in
                request parametere is null, then return null
    ProfileIdentityVerifyResponse:
      title: Profile Identity Verify Response
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              $ref: '#/components/schemas/ProfileIdentityVerifyData'
    ProfileIdentityQueryRequest:
      title: object
      required:
        - idType
        - idNumber
        - firstName
      properties:
        idType:
          type: string
          description: The identification type, currently only support SSS
          enum:
            - SSS
        idNumber:
          type: string
          description: Identification number
        firstName:
          type: string
          description: User first name
        lastName:
          type: string
          description: User last name
        dob:
          type: string
          format: date
          description: The day of birthday, yyyy-MM-dd
          example: '2000-01-21'
    ProfileIdentityAddress:
      type: object
      properties:
        line1:
          type: string
          nullable: true
          description: Line 1 of street address
        line2:
          type: string
          nullable: true
          description: Line 2 of street address
        city:
          type: string
          nullable: true
          description: City
        region:
          type: string
          nullable: true
          description: Geographic region such as state or province
        zip:
          type: string
          nullable: true
          description: Post code
        country:
          $ref: '#/components/schemas/RefCountry'
    ProfileIdentity:
      type: object
      required:
        - hit
      properties:
        hit:
          type: boolean
          description: >-
            if the identification number is invalid or it can not be found then
            the value is false
        message:
          type: string
        result:
          type: object
          required:
            - nameMatchScore
          properties:
            nameMatchScore:
              type: integer
              description: >-
                The score if matched the name(first name, last name). If
                matched(score >= 80), then Smile will return the matched
                information. If not matched, all other fields will return null
            firstName:
              type: string
              description: The firstName from Smile side
            lastName:
              type: string
              description: The lastName from Smile side
            middleName:
              type: string
              description: The middleName from Smile side
            suffix:
              type: string
              description: The suffix from Smile side
            dob:
              type: string
              format: date
              description: The day of birthday, yyyy-MM-dd
              example: '2000-01-21'
            mobile:
              type: string
              description: Mobile number
            email:
              type: string
              description: Email address
            gender:
              $ref: '#/components/schemas/RefGender'
            maritalStatus:
              $ref: '#/components/schemas/RefMaritalStatus'
            homeTelephone:
              type: string
              description: home telephone number
            address:
              $ref: '#/components/schemas/ProfileIdentityAddress'
            socialSecurityCoverageType:
              type: string
              description: >-
                Social security coverage type, Possible values: EMPLOYEE,
                VOLUNTARY, SELF EMPLOYED, FOR EMPLOYMENT
            socialSecurityCoverageDate:
              type: string
              format: date
              description: Social security start time
              example: '2000-01-21'
            totalEmploymentReportCount:
              type: integer
              description: the total of employment report records
            firstEmploymentReportDate:
              type: string
              format: date
              description: First employment record reported date
              example: '2000-01-21'
            latestEmploymentReportDate:
              type: string
              format: date
              description: Latest employment record reported date
              example: '2022-09-21'
    ProfileIdentityQueryResponse:
      title: Profile Identity Query Response
      type: object
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - properties:
            data:
              $ref: '#/components/schemas/ProfileIdentity'
    RefWebhookEventVersion:
      title: RefWebhookEventVersion
      description: Event schema's major version
      type: number
      example: 1
    AllDatapointPayload:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityPayload'
        rating:
          $ref: '#/components/schemas/RatingPayload'
        documents:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/DocumentPayload'
        incomes:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/IncomePayload'
        transactions:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/TransactionPayload'
        employments:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/EmploymentPayload'
        contributions:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/ContributionPayload'
        liabilities:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/LiabilityPayload'
        eincomes:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/EincomePayload'
        links:
          type: object
          properties:
            nextCursor:
              $ref: '#/components/schemas/ObjectNextCursor'
            items:
              type: array
              items:
                $ref: '#/components/schemas/LinkPayload'
        insight:
          $ref: '#/components/schemas/InsightPayload'
    SmileCommonEvent:
      type: object
      required:
        - id
        - version
        - type
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/RefObjectID'
        version:
          $ref: '#/components/schemas/RefWebhookEventVersion'
        type:
          $ref: '#/components/schemas/RefWebhookEventType'
        createdAt:
          $ref: '#/components/schemas/RefDateTime'
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    cursor:
      name: cursor
      in: query
      required: false
      schema:
        type: string
      description: >-
        Uses the filter values of the previous page to determine the next set of
        items.
    size:
      name: size
      in: query
      schema:
        type: integer
        example: 50
        minimum: 1
        maximum: 150
        default: 10
      description: The number of objects you want returned in a collection.
    id:
      name: id
      in: path
      schema:
        type: string
        minLength: 1
        maxLength: 200
      description: ID of the specific object in the collection.
      required: true
    userId:
      name: userId
      in: query
      required: false
      schema:
        type: string
      description: Filter to those associated with a particular user ID.
    sourceId:
      name: sourceId
      in: query
      required: false
      schema:
        type: string
      description: >-
        Filter to those associated with a particular source ID. If we query the
        link account data, the sourceId is the accountId, If we query the
        archive data, then the sourceId is the archiveId
    startDate:
      schema:
        type: string
        format: date
        example: '2021-04-01'
      in: query
      name: startDate
      description: Filter by creation date, start of date range (YYYY-MM-DD)
    endDate:
      schema:
        type: string
        format: date
        example: '2021-04-21'
      in: query
      name: endDate
      description: Filter by creation date, end of date range (YYYY-MM-DD)
    accountId:
      name: accountId
      in: query
      required: false
      schema:
        type: string
      description: Filter to those associated with a particular account ID.
      deprecated: true
  responses:
    Standard-Errors:
      description: Standard error response
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                $ref: '#/components/schemas/ObjectMetadataRefCode'
              message:
                $ref: '#/components/schemas/ObjectMetadataRefMessage'
              requestId:
                $ref: '#/components/schemas/ObjectMetadataRefRequestID'
              data:
                type: object
security:
  - basicAuth: []
